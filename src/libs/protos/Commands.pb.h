// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Commands.proto

#ifndef PROTOBUF_Commands_2eproto__INCLUDED
#define PROTOBUF_Commands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ServerCommon.pb.h"
// @@protoc_insertion_point(includes)
class CMD_Client_OnCancelMatch;
class CMD_Client_OnCancelMatchDefaultTypeInternal;
extern CMD_Client_OnCancelMatchDefaultTypeInternal _CMD_Client_OnCancelMatch_default_instance_;
class CMD_Client_OnEndMatch;
class CMD_Client_OnEndMatchDefaultTypeInternal;
extern CMD_Client_OnEndMatchDefaultTypeInternal _CMD_Client_OnEndMatch_default_instance_;
class CMD_Client_OnGameOver;
class CMD_Client_OnGameOverDefaultTypeInternal;
extern CMD_Client_OnGameOverDefaultTypeInternal _CMD_Client_OnGameOver_default_instance_;
class CMD_Client_OnListGamesCB;
class CMD_Client_OnListGamesCBDefaultTypeInternal;
extern CMD_Client_OnListGamesCBDefaultTypeInternal _CMD_Client_OnListGamesCB_default_instance_;
class CMD_Client_OnListServersCB;
class CMD_Client_OnListServersCBDefaultTypeInternal;
extern CMD_Client_OnListServersCBDefaultTypeInternal _CMD_Client_OnListServersCB_default_instance_;
class CMD_Client_OnLoginCB;
class CMD_Client_OnLoginCBDefaultTypeInternal;
extern CMD_Client_OnLoginCBDefaultTypeInternal _CMD_Client_OnLoginCB_default_instance_;
class CMD_Client_OnMatchingUpdate;
class CMD_Client_OnMatchingUpdateDefaultTypeInternal;
extern CMD_Client_OnMatchingUpdateDefaultTypeInternal _CMD_Client_OnMatchingUpdate_default_instance_;
class CMD_Client_OnSigninCB;
class CMD_Client_OnSigninCBDefaultTypeInternal;
extern CMD_Client_OnSigninCBDefaultTypeInternal _CMD_Client_OnSigninCB_default_instance_;
class CMD_Client_OnSignupCB;
class CMD_Client_OnSignupCBDefaultTypeInternal;
extern CMD_Client_OnSignupCBDefaultTypeInternal _CMD_Client_OnSignupCB_default_instance_;
class CMD_Client_UpdatePlayerContext;
class CMD_Client_UpdatePlayerContextDefaultTypeInternal;
extern CMD_Client_UpdatePlayerContextDefaultTypeInternal _CMD_Client_UpdatePlayerContext_default_instance_;
class CMD_Dbmgr_QueryAccount;
class CMD_Dbmgr_QueryAccountDefaultTypeInternal;
extern CMD_Dbmgr_QueryAccountDefaultTypeInternal _CMD_Dbmgr_QueryAccount_default_instance_;
class CMD_Dbmgr_QueryPlayerGameData;
class CMD_Dbmgr_QueryPlayerGameDataDefaultTypeInternal;
extern CMD_Dbmgr_QueryPlayerGameDataDefaultTypeInternal _CMD_Dbmgr_QueryPlayerGameData_default_instance_;
class CMD_Dbmgr_UpdateAccountData;
class CMD_Dbmgr_UpdateAccountDataDefaultTypeInternal;
extern CMD_Dbmgr_UpdateAccountDataDefaultTypeInternal _CMD_Dbmgr_UpdateAccountData_default_instance_;
class CMD_Dbmgr_WriteAccount;
class CMD_Dbmgr_WriteAccountDefaultTypeInternal;
extern CMD_Dbmgr_WriteAccountDefaultTypeInternal _CMD_Dbmgr_WriteAccount_default_instance_;
class CMD_Dbmgr_WritePlayerGameData;
class CMD_Dbmgr_WritePlayerGameDataDefaultTypeInternal;
extern CMD_Dbmgr_WritePlayerGameDataDefaultTypeInternal _CMD_Dbmgr_WritePlayerGameData_default_instance_;
class CMD_Directory_ListServers;
class CMD_Directory_ListServersDefaultTypeInternal;
extern CMD_Directory_ListServersDefaultTypeInternal _CMD_Directory_ListServers_default_instance_;
class CMD_ForwardPacket;
class CMD_ForwardPacketDefaultTypeInternal;
extern CMD_ForwardPacketDefaultTypeInternal _CMD_ForwardPacket_default_instance_;
class CMD_GameInfos;
class CMD_GameInfosDefaultTypeInternal;
extern CMD_GameInfosDefaultTypeInternal _CMD_GameInfos_default_instance_;
class CMD_GameModeInfos;
class CMD_GameModeInfosDefaultTypeInternal;
extern CMD_GameModeInfosDefaultTypeInternal _CMD_GameModeInfos_default_instance_;
class CMD_Halls_CancelMatch;
class CMD_Halls_CancelMatchDefaultTypeInternal;
extern CMD_Halls_CancelMatchDefaultTypeInternal _CMD_Halls_CancelMatch_default_instance_;
class CMD_Halls_ListGames;
class CMD_Halls_ListGamesDefaultTypeInternal;
extern CMD_Halls_ListGamesDefaultTypeInternal _CMD_Halls_ListGames_default_instance_;
class CMD_Halls_Login;
class CMD_Halls_LoginDefaultTypeInternal;
extern CMD_Halls_LoginDefaultTypeInternal _CMD_Halls_Login_default_instance_;
class CMD_Halls_OnQueryAccountCB;
class CMD_Halls_OnQueryAccountCBDefaultTypeInternal;
extern CMD_Halls_OnQueryAccountCBDefaultTypeInternal _CMD_Halls_OnQueryAccountCB_default_instance_;
class CMD_Halls_OnQueryPlayerGameDataCB;
class CMD_Halls_OnQueryPlayerGameDataCBDefaultTypeInternal;
extern CMD_Halls_OnQueryPlayerGameDataCBDefaultTypeInternal _CMD_Halls_OnQueryPlayerGameDataCB_default_instance_;
class CMD_Halls_OnRequestCreateRoomCB;
class CMD_Halls_OnRequestCreateRoomCBDefaultTypeInternal;
extern CMD_Halls_OnRequestCreateRoomCBDefaultTypeInternal _CMD_Halls_OnRequestCreateRoomCB_default_instance_;
class CMD_Halls_OnRoomSrvGameOverReport;
class CMD_Halls_OnRoomSrvGameOverReportDefaultTypeInternal;
extern CMD_Halls_OnRoomSrvGameOverReportDefaultTypeInternal _CMD_Halls_OnRoomSrvGameOverReport_default_instance_;
class CMD_Halls_PlayerGameData;
class CMD_Halls_PlayerGameDataDefaultTypeInternal;
extern CMD_Halls_PlayerGameDataDefaultTypeInternal _CMD_Halls_PlayerGameData_default_instance_;
class CMD_Halls_QueryPlayerGameData;
class CMD_Halls_QueryPlayerGameDataDefaultTypeInternal;
extern CMD_Halls_QueryPlayerGameDataDefaultTypeInternal _CMD_Halls_QueryPlayerGameData_default_instance_;
class CMD_Halls_RequestAllocClient;
class CMD_Halls_RequestAllocClientDefaultTypeInternal;
extern CMD_Halls_RequestAllocClientDefaultTypeInternal _CMD_Halls_RequestAllocClient_default_instance_;
class CMD_Halls_StartMatch;
class CMD_Halls_StartMatchDefaultTypeInternal;
extern CMD_Halls_StartMatchDefaultTypeInternal _CMD_Halls_StartMatch_default_instance_;
class CMD_Hallsmgr_OnRequestAllocClientCB;
class CMD_Hallsmgr_OnRequestAllocClientCBDefaultTypeInternal;
extern CMD_Hallsmgr_OnRequestAllocClientCBDefaultTypeInternal _CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_;
class CMD_Hallsmgr_RequestAllocClient;
class CMD_Hallsmgr_RequestAllocClientDefaultTypeInternal;
extern CMD_Hallsmgr_RequestAllocClientDefaultTypeInternal _CMD_Hallsmgr_RequestAllocClient_default_instance_;
class CMD_Heartbeat;
class CMD_HeartbeatDefaultTypeInternal;
extern CMD_HeartbeatDefaultTypeInternal _CMD_Heartbeat_default_instance_;
class CMD_HeartbeatCB;
class CMD_HeartbeatCBDefaultTypeInternal;
extern CMD_HeartbeatCBDefaultTypeInternal _CMD_HeartbeatCB_default_instance_;
class CMD_Hello;
class CMD_HelloDefaultTypeInternal;
extern CMD_HelloDefaultTypeInternal _CMD_Hello_default_instance_;
class CMD_HelloCB;
class CMD_HelloCBDefaultTypeInternal;
extern CMD_HelloCBDefaultTypeInternal _CMD_HelloCB_default_instance_;
class CMD_ListServersInfo;
class CMD_ListServersInfoDefaultTypeInternal;
extern CMD_ListServersInfoDefaultTypeInternal _CMD_ListServersInfo_default_instance_;
class CMD_Login_OnRequestAllocClientCB;
class CMD_Login_OnRequestAllocClientCBDefaultTypeInternal;
extern CMD_Login_OnRequestAllocClientCBDefaultTypeInternal _CMD_Login_OnRequestAllocClientCB_default_instance_;
class CMD_Login_OnSigninCB;
class CMD_Login_OnSigninCBDefaultTypeInternal;
extern CMD_Login_OnSigninCBDefaultTypeInternal _CMD_Login_OnSigninCB_default_instance_;
class CMD_Login_OnSignupCB;
class CMD_Login_OnSignupCBDefaultTypeInternal;
extern CMD_Login_OnSignupCBDefaultTypeInternal _CMD_Login_OnSignupCB_default_instance_;
class CMD_Login_Signin;
class CMD_Login_SigninDefaultTypeInternal;
extern CMD_Login_SigninDefaultTypeInternal _CMD_Login_Signin_default_instance_;
class CMD_Login_Signup;
class CMD_Login_SignupDefaultTypeInternal;
extern CMD_Login_SignupDefaultTypeInternal _CMD_Login_Signup_default_instance_;
class CMD_Machine_OnRoomSrvGameOverReport;
class CMD_Machine_OnRoomSrvGameOverReportDefaultTypeInternal;
extern CMD_Machine_OnRoomSrvGameOverReportDefaultTypeInternal _CMD_Machine_OnRoomSrvGameOverReport_default_instance_;
class CMD_Machine_RequestCreateRoom;
class CMD_Machine_RequestCreateRoomDefaultTypeInternal;
extern CMD_Machine_RequestCreateRoomDefaultTypeInternal _CMD_Machine_RequestCreateRoom_default_instance_;
class CMD_Machine_RoomSrvReportAddr;
class CMD_Machine_RoomSrvReportAddrDefaultTypeInternal;
extern CMD_Machine_RoomSrvReportAddrDefaultTypeInternal _CMD_Machine_RoomSrvReportAddr_default_instance_;
class CMD_Ping;
class CMD_PingDefaultTypeInternal;
extern CMD_PingDefaultTypeInternal _CMD_Ping_default_instance_;
class CMD_PlayerContext;
class CMD_PlayerContextDefaultTypeInternal;
extern CMD_PlayerContextDefaultTypeInternal _CMD_PlayerContext_default_instance_;
class CMD_Pong;
class CMD_PongDefaultTypeInternal;
extern CMD_PongDefaultTypeInternal _CMD_Pong_default_instance_;
class CMD_QueryServerInfos;
class CMD_QueryServerInfosDefaultTypeInternal;
extern CMD_QueryServerInfosDefaultTypeInternal _CMD_QueryServerInfos_default_instance_;
class CMD_QueryServerInfosCB;
class CMD_QueryServerInfosCBDefaultTypeInternal;
extern CMD_QueryServerInfosCBDefaultTypeInternal _CMD_QueryServerInfosCB_default_instance_;
class CMD_RemoteDisconnected;
class CMD_RemoteDisconnectedDefaultTypeInternal;
extern CMD_RemoteDisconnectedDefaultTypeInternal _CMD_RemoteDisconnected_default_instance_;
class CMD_RoomPlayerInfo;
class CMD_RoomPlayerInfoDefaultTypeInternal;
extern CMD_RoomPlayerInfoDefaultTypeInternal _CMD_RoomPlayerInfo_default_instance_;
class CMD_Roommgr_OnRequestCreateRoomCB;
class CMD_Roommgr_OnRequestCreateRoomCBDefaultTypeInternal;
extern CMD_Roommgr_OnRequestCreateRoomCBDefaultTypeInternal _CMD_Roommgr_OnRequestCreateRoomCB_default_instance_;
class CMD_Roommgr_OnRoomSrvGameOverReport;
class CMD_Roommgr_OnRoomSrvGameOverReportDefaultTypeInternal;
extern CMD_Roommgr_OnRoomSrvGameOverReportDefaultTypeInternal _CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_;
class CMD_Roommgr_RequestCreateRoom;
class CMD_Roommgr_RequestCreateRoomDefaultTypeInternal;
extern CMD_Roommgr_RequestCreateRoomDefaultTypeInternal _CMD_Roommgr_RequestCreateRoom_default_instance_;
class CMD_Unkown;
class CMD_UnkownDefaultTypeInternal;
extern CMD_UnkownDefaultTypeInternal _CMD_Unkown_default_instance_;
class CMD_UpdateServerInfos;
class CMD_UpdateServerInfosDefaultTypeInternal;
extern CMD_UpdateServerInfosDefaultTypeInternal _CMD_UpdateServerInfos_default_instance_;
class CMD_Version_Not_Match;
class CMD_Version_Not_MatchDefaultTypeInternal;
extern CMD_Version_Not_MatchDefaultTypeInternal _CMD_Version_Not_Match_default_instance_;

namespace protobuf_Commands_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Commands_2eproto

enum CMD {
  Unkown = 0,
  Hello = 1,
  HelloCB = 2,
  Heartbeat = 3,
  HeartbeatCB = 4,
  Version_Not_Match = 5,
  UpdateServerInfos = 6,
  QueryServerInfos = 7,
  QueryServerInfosCB = 8,
  Ping = 9,
  Pong = 10,
  ForwardPacket = 11,
  RemoteDisconnected = 12,
  Directory_Begin = 101,
  Directory_ListServers = 102,
  Directory_End = 200,
  Login_Begin = 201,
  Login_Signup = 202,
  Login_OnSignupCB = 203,
  Login_Signin = 204,
  Login_OnSigninCB = 205,
  Login_OnRequestAllocClientCB = 206,
  Login_End = 300,
  Dbmgr_Begin = 301,
  Dbmgr_WriteAccount = 302,
  Dbmgr_QueryAccount = 303,
  Dbmgr_UpdateAccountData = 304,
  Dbmgr_WritePlayerGameData = 305,
  Dbmgr_QueryPlayerGameData = 306,
  Dbmgr_End = 400,
  Connector_Begin = 401,
  Connector_End = 500,
  Halls_Begin = 501,
  Halls_Login = 502,
  Halls_RequestAllocClient = 503,
  Halls_StartMatch = 504,
  Halls_CancelMatch = 505,
  Halls_OnRequestCreateRoomCB = 506,
  Halls_OnRoomSrvGameOverReport = 507,
  Halls_OnQueryAccountCB = 508,
  Halls_OnQueryPlayerGameDataCB = 509,
  Halls_QueryPlayerGameData = 510,
  Halls_ListGames = 511,
  Halls_End = 600,
  Hallsmgr_Begin = 601,
  Hallsmgr_RequestAllocClient = 602,
  Hallsmgr_OnRequestAllocClientCB = 603,
  Hallsmgr_End = 700,
  Roommgr_Begin = 701,
  Roommgr_RequestCreateRoom = 702,
  Roommgr_OnRequestCreateRoomCB = 703,
  Roommgr_OnRoomSrvGameOverReport = 704,
  Roommgr_End = 800,
  Machine_Begin = 801,
  Machine_RequestCreateRoom = 802,
  Machine_RoomSrvReportAddr = 803,
  Machine_OnRoomSrvGameOverReport = 804,
  Machine_End = 900,
  Client_Begin = 901,
  Client_OnListServersCB = 902,
  Client_OnSignupCB = 903,
  Client_OnSigninCB = 904,
  Client_OnLoginCB = 905,
  Client_OnMatchingUpdate = 906,
  Client_OnEndMatch = 907,
  Client_OnGameOver = 908,
  Client_OnCancelMatch = 909,
  Client_UpdatePlayerContext = 910,
  Client_OnListGamesCB = 911,
  Client_End = 1000,
  CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = Unkown;
const CMD CMD_MAX = Client_End;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
// ===================================================================

class CMD_Unkown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Unkown) */ {
 public:
  CMD_Unkown();
  virtual ~CMD_Unkown();

  CMD_Unkown(const CMD_Unkown& from);

  inline CMD_Unkown& operator=(const CMD_Unkown& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Unkown& default_instance();

  static inline const CMD_Unkown* internal_default_instance() {
    return reinterpret_cast<const CMD_Unkown*>(
               &_CMD_Unkown_default_instance_);
  }

  void Swap(CMD_Unkown* other);

  // implements Message ----------------------------------------------

  inline CMD_Unkown* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Unkown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Unkown& from);
  void MergeFrom(const CMD_Unkown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Unkown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD_Unkown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Hello : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Hello) */ {
 public:
  CMD_Hello();
  virtual ~CMD_Hello();

  CMD_Hello(const CMD_Hello& from);

  inline CMD_Hello& operator=(const CMD_Hello& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Hello& default_instance();

  static inline const CMD_Hello* internal_default_instance() {
    return reinterpret_cast<const CMD_Hello*>(
               &_CMD_Hello_default_instance_);
  }

  void Swap(CMD_Hello* other);

  // implements Message ----------------------------------------------

  inline CMD_Hello* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Hello* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Hello& from);
  void MergeFrom(const CMD_Hello& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Hello* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 appID = 2;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 appType = 3;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 3;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // uint64 appGID = 4;
  void clear_appgid();
  static const int kAppGIDFieldNumber = 4;
  ::google::protobuf::uint64 appgid() const;
  void set_appgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Hello)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 apptype_;
  ::google::protobuf::uint64 appgid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_HelloCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_HelloCB) */ {
 public:
  CMD_HelloCB();
  virtual ~CMD_HelloCB();

  CMD_HelloCB(const CMD_HelloCB& from);

  inline CMD_HelloCB& operator=(const CMD_HelloCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HelloCB& default_instance();

  static inline const CMD_HelloCB* internal_default_instance() {
    return reinterpret_cast<const CMD_HelloCB*>(
               &_CMD_HelloCB_default_instance_);
  }

  void Swap(CMD_HelloCB* other);

  // implements Message ----------------------------------------------

  inline CMD_HelloCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_HelloCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_HelloCB& from);
  void MergeFrom(const CMD_HelloCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_HelloCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 appID = 2;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 appType = 3;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 3;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // uint64 appGID = 4;
  void clear_appgid();
  static const int kAppGIDFieldNumber = 4;
  ::google::protobuf::uint64 appgid() const;
  void set_appgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_HelloCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 apptype_;
  ::google::protobuf::uint64 appgid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Heartbeat) */ {
 public:
  CMD_Heartbeat();
  virtual ~CMD_Heartbeat();

  CMD_Heartbeat(const CMD_Heartbeat& from);

  inline CMD_Heartbeat& operator=(const CMD_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Heartbeat& default_instance();

  static inline const CMD_Heartbeat* internal_default_instance() {
    return reinterpret_cast<const CMD_Heartbeat*>(
               &_CMD_Heartbeat_default_instance_);
  }

  void Swap(CMD_Heartbeat* other);

  // implements Message ----------------------------------------------

  inline CMD_Heartbeat* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Heartbeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Heartbeat& from);
  void MergeFrom(const CMD_Heartbeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appID = 1;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 appType = 2;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 2;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Heartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 apptype_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_HeartbeatCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_HeartbeatCB) */ {
 public:
  CMD_HeartbeatCB();
  virtual ~CMD_HeartbeatCB();

  CMD_HeartbeatCB(const CMD_HeartbeatCB& from);

  inline CMD_HeartbeatCB& operator=(const CMD_HeartbeatCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HeartbeatCB& default_instance();

  static inline const CMD_HeartbeatCB* internal_default_instance() {
    return reinterpret_cast<const CMD_HeartbeatCB*>(
               &_CMD_HeartbeatCB_default_instance_);
  }

  void Swap(CMD_HeartbeatCB* other);

  // implements Message ----------------------------------------------

  inline CMD_HeartbeatCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_HeartbeatCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_HeartbeatCB& from);
  void MergeFrom(const CMD_HeartbeatCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_HeartbeatCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appID = 1;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 appType = 2;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 2;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_HeartbeatCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 apptype_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Version_Not_Match : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Version_Not_Match) */ {
 public:
  CMD_Version_Not_Match();
  virtual ~CMD_Version_Not_Match();

  CMD_Version_Not_Match(const CMD_Version_Not_Match& from);

  inline CMD_Version_Not_Match& operator=(const CMD_Version_Not_Match& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Version_Not_Match& default_instance();

  static inline const CMD_Version_Not_Match* internal_default_instance() {
    return reinterpret_cast<const CMD_Version_Not_Match*>(
               &_CMD_Version_Not_Match_default_instance_);
  }

  void Swap(CMD_Version_Not_Match* other);

  // implements Message ----------------------------------------------

  inline CMD_Version_Not_Match* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Version_Not_Match* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Version_Not_Match& from);
  void MergeFrom(const CMD_Version_Not_Match& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Version_Not_Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appID = 2;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 appType = 3;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 3;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Version_Not_Match)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 apptype_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_UpdateServerInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_UpdateServerInfos) */ {
 public:
  CMD_UpdateServerInfos();
  virtual ~CMD_UpdateServerInfos();

  CMD_UpdateServerInfos(const CMD_UpdateServerInfos& from);

  inline CMD_UpdateServerInfos& operator=(const CMD_UpdateServerInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_UpdateServerInfos& default_instance();

  static inline const CMD_UpdateServerInfos* internal_default_instance() {
    return reinterpret_cast<const CMD_UpdateServerInfos*>(
               &_CMD_UpdateServerInfos_default_instance_);
  }

  void Swap(CMD_UpdateServerInfos* other);

  // implements Message ----------------------------------------------

  inline CMD_UpdateServerInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_UpdateServerInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_UpdateServerInfos& from);
  void MergeFrom(const CMD_UpdateServerInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_UpdateServerInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_UpdateServerInfos child_srvs = 12;
  int child_srvs_size() const;
  void clear_child_srvs();
  static const int kChildSrvsFieldNumber = 12;
  const ::CMD_UpdateServerInfos& child_srvs(int index) const;
  ::CMD_UpdateServerInfos* mutable_child_srvs(int index);
  ::CMD_UpdateServerInfos* add_child_srvs();
  ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
      mutable_child_srvs();
  const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
      child_srvs() const;

  // string internal_ip = 3;
  void clear_internal_ip();
  static const int kInternalIpFieldNumber = 3;
  const ::std::string& internal_ip() const;
  void set_internal_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_internal_ip(::std::string&& value);
  #endif
  void set_internal_ip(const char* value);
  void set_internal_ip(const char* value, size_t size);
  ::std::string* mutable_internal_ip();
  ::std::string* release_internal_ip();
  void set_allocated_internal_ip(::std::string* internal_ip);

  // string external_ip = 5;
  void clear_external_ip();
  static const int kExternalIpFieldNumber = 5;
  const ::std::string& external_ip() const;
  void set_external_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_external_ip(::std::string&& value);
  #endif
  void set_external_ip(const char* value);
  void set_external_ip(const char* value, size_t size);
  ::std::string* mutable_external_ip();
  ::std::string* release_external_ip();
  void set_allocated_external_ip(::std::string* external_ip);

  // string name = 11;
  void clear_name();
  static const int kNameFieldNumber = 11;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 appID = 1;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 appType = 2;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 2;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // uint32 internal_port = 4;
  void clear_internal_port();
  static const int kInternalPortFieldNumber = 4;
  ::google::protobuf::uint32 internal_port() const;
  void set_internal_port(::google::protobuf::uint32 value);

  // uint32 external_port = 6;
  void clear_external_port();
  static const int kExternalPortFieldNumber = 6;
  ::google::protobuf::uint32 external_port() const;
  void set_external_port(::google::protobuf::uint32 value);

  // float load = 7;
  void clear_load();
  static const int kLoadFieldNumber = 7;
  float load() const;
  void set_load(float value);

  // int32 playerNum = 8;
  void clear_playernum();
  static const int kPlayerNumFieldNumber = 8;
  ::google::protobuf::int32 playernum() const;
  void set_playernum(::google::protobuf::int32 value);

  // int32 sessionNum = 9;
  void clear_sessionnum();
  static const int kSessionNumFieldNumber = 9;
  ::google::protobuf::int32 sessionnum() const;
  void set_sessionnum(::google::protobuf::int32 value);

  // uint64 appGID = 10;
  void clear_appgid();
  static const int kAppGIDFieldNumber = 10;
  ::google::protobuf::uint64 appgid() const;
  void set_appgid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_UpdateServerInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos > child_srvs_;
  ::google::protobuf::internal::ArenaStringPtr internal_ip_;
  ::google::protobuf::internal::ArenaStringPtr external_ip_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 apptype_;
  ::google::protobuf::uint32 internal_port_;
  ::google::protobuf::uint32 external_port_;
  float load_;
  ::google::protobuf::int32 playernum_;
  ::google::protobuf::int32 sessionnum_;
  ::google::protobuf::uint64 appgid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_QueryServerInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_QueryServerInfos) */ {
 public:
  CMD_QueryServerInfos();
  virtual ~CMD_QueryServerInfos();

  CMD_QueryServerInfos(const CMD_QueryServerInfos& from);

  inline CMD_QueryServerInfos& operator=(const CMD_QueryServerInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QueryServerInfos& default_instance();

  static inline const CMD_QueryServerInfos* internal_default_instance() {
    return reinterpret_cast<const CMD_QueryServerInfos*>(
               &_CMD_QueryServerInfos_default_instance_);
  }

  void Swap(CMD_QueryServerInfos* other);

  // implements Message ----------------------------------------------

  inline CMD_QueryServerInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_QueryServerInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_QueryServerInfos& from);
  void MergeFrom(const CMD_QueryServerInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_QueryServerInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appID = 1;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // uint64 appGID = 2;
  void clear_appgid();
  static const int kAppGIDFieldNumber = 2;
  ::google::protobuf::uint64 appgid() const;
  void set_appgid(::google::protobuf::uint64 value);

  // int32 appType = 3;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 3;
  ::google::protobuf::int32 apptype() const;
  void set_apptype(::google::protobuf::int32 value);

  // int32 maxNum = 4;
  void clear_maxnum();
  static const int kMaxNumFieldNumber = 4;
  ::google::protobuf::int32 maxnum() const;
  void set_maxnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_QueryServerInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::uint64 appgid_;
  ::google::protobuf::int32 apptype_;
  ::google::protobuf::int32 maxnum_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_QueryServerInfosCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_QueryServerInfosCB) */ {
 public:
  CMD_QueryServerInfosCB();
  virtual ~CMD_QueryServerInfosCB();

  CMD_QueryServerInfosCB(const CMD_QueryServerInfosCB& from);

  inline CMD_QueryServerInfosCB& operator=(const CMD_QueryServerInfosCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QueryServerInfosCB& default_instance();

  static inline const CMD_QueryServerInfosCB* internal_default_instance() {
    return reinterpret_cast<const CMD_QueryServerInfosCB*>(
               &_CMD_QueryServerInfosCB_default_instance_);
  }

  void Swap(CMD_QueryServerInfosCB* other);

  // implements Message ----------------------------------------------

  inline CMD_QueryServerInfosCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_QueryServerInfosCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_QueryServerInfosCB& from);
  void MergeFrom(const CMD_QueryServerInfosCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_QueryServerInfosCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_UpdateServerInfos srvs = 1;
  int srvs_size() const;
  void clear_srvs();
  static const int kSrvsFieldNumber = 1;
  const ::CMD_UpdateServerInfos& srvs(int index) const;
  ::CMD_UpdateServerInfos* mutable_srvs(int index);
  ::CMD_UpdateServerInfos* add_srvs();
  ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
      mutable_srvs();
  const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
      srvs() const;

  // @@protoc_insertion_point(class_scope:CMD_QueryServerInfosCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos > srvs_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Ping) */ {
 public:
  CMD_Ping();
  virtual ~CMD_Ping();

  CMD_Ping(const CMD_Ping& from);

  inline CMD_Ping& operator=(const CMD_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Ping& default_instance();

  static inline const CMD_Ping* internal_default_instance() {
    return reinterpret_cast<const CMD_Ping*>(
               &_CMD_Ping_default_instance_);
  }

  void Swap(CMD_Ping* other);

  // implements Message ----------------------------------------------

  inline CMD_Ping* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Ping& from);
  void MergeFrom(const CMD_Ping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Pong : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Pong) */ {
 public:
  CMD_Pong();
  virtual ~CMD_Pong();

  CMD_Pong(const CMD_Pong& from);

  inline CMD_Pong& operator=(const CMD_Pong& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Pong& default_instance();

  static inline const CMD_Pong* internal_default_instance() {
    return reinterpret_cast<const CMD_Pong*>(
               &_CMD_Pong_default_instance_);
  }

  void Swap(CMD_Pong* other);

  // implements Message ----------------------------------------------

  inline CMD_Pong* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Pong* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Pong& from);
  void MergeFrom(const CMD_Pong& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Pong* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Pong)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 time_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_ForwardPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_ForwardPacket) */ {
 public:
  CMD_ForwardPacket();
  virtual ~CMD_ForwardPacket();

  CMD_ForwardPacket(const CMD_ForwardPacket& from);

  inline CMD_ForwardPacket& operator=(const CMD_ForwardPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ForwardPacket& default_instance();

  static inline const CMD_ForwardPacket* internal_default_instance() {
    return reinterpret_cast<const CMD_ForwardPacket*>(
               &_CMD_ForwardPacket_default_instance_);
  }

  void Swap(CMD_ForwardPacket* other);

  // implements Message ----------------------------------------------

  inline CMD_ForwardPacket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_ForwardPacket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_ForwardPacket& from);
  void MergeFrom(const CMD_ForwardPacket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_ForwardPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes datas = 2;
  void clear_datas();
  static const int kDatasFieldNumber = 2;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // uint64 requestorID = 1;
  void clear_requestorid();
  static const int kRequestorIDFieldNumber = 1;
  ::google::protobuf::uint64 requestorid() const;
  void set_requestorid(::google::protobuf::uint64 value);

  // int32 msgcmd = 3;
  void clear_msgcmd();
  static const int kMsgcmdFieldNumber = 3;
  ::google::protobuf::int32 msgcmd() const;
  void set_msgcmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_ForwardPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::uint64 requestorid_;
  ::google::protobuf::int32 msgcmd_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_RemoteDisconnected : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_RemoteDisconnected) */ {
 public:
  CMD_RemoteDisconnected();
  virtual ~CMD_RemoteDisconnected();

  CMD_RemoteDisconnected(const CMD_RemoteDisconnected& from);

  inline CMD_RemoteDisconnected& operator=(const CMD_RemoteDisconnected& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_RemoteDisconnected& default_instance();

  static inline const CMD_RemoteDisconnected* internal_default_instance() {
    return reinterpret_cast<const CMD_RemoteDisconnected*>(
               &_CMD_RemoteDisconnected_default_instance_);
  }

  void Swap(CMD_RemoteDisconnected* other);

  // implements Message ----------------------------------------------

  inline CMD_RemoteDisconnected* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_RemoteDisconnected* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_RemoteDisconnected& from);
  void MergeFrom(const CMD_RemoteDisconnected& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_RemoteDisconnected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD_RemoteDisconnected)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Directory_ListServers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Directory_ListServers) */ {
 public:
  CMD_Directory_ListServers();
  virtual ~CMD_Directory_ListServers();

  CMD_Directory_ListServers(const CMD_Directory_ListServers& from);

  inline CMD_Directory_ListServers& operator=(const CMD_Directory_ListServers& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Directory_ListServers& default_instance();

  static inline const CMD_Directory_ListServers* internal_default_instance() {
    return reinterpret_cast<const CMD_Directory_ListServers*>(
               &_CMD_Directory_ListServers_default_instance_);
  }

  void Swap(CMD_Directory_ListServers* other);

  // implements Message ----------------------------------------------

  inline CMD_Directory_ListServers* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Directory_ListServers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Directory_ListServers& from);
  void MergeFrom(const CMD_Directory_ListServers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Directory_ListServers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD_Directory_ListServers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Login_Signup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Login_Signup) */ {
 public:
  CMD_Login_Signup();
  virtual ~CMD_Login_Signup();

  CMD_Login_Signup(const CMD_Login_Signup& from);

  inline CMD_Login_Signup& operator=(const CMD_Login_Signup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Login_Signup& default_instance();

  static inline const CMD_Login_Signup* internal_default_instance() {
    return reinterpret_cast<const CMD_Login_Signup*>(
               &_CMD_Login_Signup_default_instance_);
  }

  void Swap(CMD_Login_Signup* other);

  // implements Message ----------------------------------------------

  inline CMD_Login_Signup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Login_Signup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Login_Signup& from);
  void MergeFrom(const CMD_Login_Signup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Login_Signup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes datas = 3;
  void clear_datas();
  static const int kDatasFieldNumber = 3;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // @@protoc_insertion_point(class_scope:CMD_Login_Signup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Login_OnSignupCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Login_OnSignupCB) */ {
 public:
  CMD_Login_OnSignupCB();
  virtual ~CMD_Login_OnSignupCB();

  CMD_Login_OnSignupCB(const CMD_Login_OnSignupCB& from);

  inline CMD_Login_OnSignupCB& operator=(const CMD_Login_OnSignupCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Login_OnSignupCB& default_instance();

  static inline const CMD_Login_OnSignupCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Login_OnSignupCB*>(
               &_CMD_Login_OnSignupCB_default_instance_);
  }

  void Swap(CMD_Login_OnSignupCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Login_OnSignupCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Login_OnSignupCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Login_OnSignupCB& from);
  void MergeFrom(const CMD_Login_OnSignupCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Login_OnSignupCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 2;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 2;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string realAccountName = 3;
  void clear_realaccountname();
  static const int kRealAccountNameFieldNumber = 3;
  const ::std::string& realaccountname() const;
  void set_realaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_realaccountname(::std::string&& value);
  #endif
  void set_realaccountname(const char* value);
  void set_realaccountname(const char* value, size_t size);
  ::std::string* mutable_realaccountname();
  ::std::string* release_realaccountname();
  void set_allocated_realaccountname(::std::string* realaccountname);

  // bytes datas = 4;
  void clear_datas();
  static const int kDatasFieldNumber = 4;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Login_OnSignupCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr realaccountname_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Login_Signin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Login_Signin) */ {
 public:
  CMD_Login_Signin();
  virtual ~CMD_Login_Signin();

  CMD_Login_Signin(const CMD_Login_Signin& from);

  inline CMD_Login_Signin& operator=(const CMD_Login_Signin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Login_Signin& default_instance();

  static inline const CMD_Login_Signin* internal_default_instance() {
    return reinterpret_cast<const CMD_Login_Signin*>(
               &_CMD_Login_Signin_default_instance_);
  }

  void Swap(CMD_Login_Signin* other);

  // implements Message ----------------------------------------------

  inline CMD_Login_Signin* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Login_Signin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Login_Signin& from);
  void MergeFrom(const CMD_Login_Signin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Login_Signin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes datas = 3;
  void clear_datas();
  static const int kDatasFieldNumber = 3;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // @@protoc_insertion_point(class_scope:CMD_Login_Signin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Login_OnSigninCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Login_OnSigninCB) */ {
 public:
  CMD_Login_OnSigninCB();
  virtual ~CMD_Login_OnSigninCB();

  CMD_Login_OnSigninCB(const CMD_Login_OnSigninCB& from);

  inline CMD_Login_OnSigninCB& operator=(const CMD_Login_OnSigninCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Login_OnSigninCB& default_instance();

  static inline const CMD_Login_OnSigninCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Login_OnSigninCB*>(
               &_CMD_Login_OnSigninCB_default_instance_);
  }

  void Swap(CMD_Login_OnSigninCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Login_OnSigninCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Login_OnSigninCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Login_OnSigninCB& from);
  void MergeFrom(const CMD_Login_OnSigninCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Login_OnSigninCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 2;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 2;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string realAccountName = 3;
  void clear_realaccountname();
  static const int kRealAccountNameFieldNumber = 3;
  const ::std::string& realaccountname() const;
  void set_realaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_realaccountname(::std::string&& value);
  #endif
  void set_realaccountname(const char* value);
  void set_realaccountname(const char* value, size_t size);
  ::std::string* mutable_realaccountname();
  ::std::string* release_realaccountname();
  void set_allocated_realaccountname(::std::string* realaccountname);

  // bytes datas = 4;
  void clear_datas();
  static const int kDatasFieldNumber = 4;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // uint64 foundObjectID = 5;
  void clear_foundobjectid();
  static const int kFoundObjectIDFieldNumber = 5;
  ::google::protobuf::uint64 foundobjectid() const;
  void set_foundobjectid(::google::protobuf::uint64 value);

  // uint64 foundAppID = 6;
  void clear_foundappid();
  static const int kFoundAppIDFieldNumber = 6;
  ::google::protobuf::uint64 foundappid() const;
  void set_foundappid(::google::protobuf::uint64 value);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Login_OnSigninCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr realaccountname_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::uint64 foundobjectid_;
  ::google::protobuf::uint64 foundappid_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Login_OnRequestAllocClientCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Login_OnRequestAllocClientCB) */ {
 public:
  CMD_Login_OnRequestAllocClientCB();
  virtual ~CMD_Login_OnRequestAllocClientCB();

  CMD_Login_OnRequestAllocClientCB(const CMD_Login_OnRequestAllocClientCB& from);

  inline CMD_Login_OnRequestAllocClientCB& operator=(const CMD_Login_OnRequestAllocClientCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Login_OnRequestAllocClientCB& default_instance();

  static inline const CMD_Login_OnRequestAllocClientCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Login_OnRequestAllocClientCB*>(
               &_CMD_Login_OnRequestAllocClientCB_default_instance_);
  }

  void Swap(CMD_Login_OnRequestAllocClientCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Login_OnRequestAllocClientCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Login_OnRequestAllocClientCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Login_OnRequestAllocClientCB& from);
  void MergeFrom(const CMD_Login_OnRequestAllocClientCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Login_OnRequestAllocClientCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string commitAccountName = 3;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 3;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // .ServerError errcode = 4;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 4;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // uint64 tokenID = 5;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 5;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Login_OnRequestAllocClientCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::int32 port_;
  int errcode_;
  ::google::protobuf::uint64 tokenid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Dbmgr_WriteAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Dbmgr_WriteAccount) */ {
 public:
  CMD_Dbmgr_WriteAccount();
  virtual ~CMD_Dbmgr_WriteAccount();

  CMD_Dbmgr_WriteAccount(const CMD_Dbmgr_WriteAccount& from);

  inline CMD_Dbmgr_WriteAccount& operator=(const CMD_Dbmgr_WriteAccount& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Dbmgr_WriteAccount& default_instance();

  static inline const CMD_Dbmgr_WriteAccount* internal_default_instance() {
    return reinterpret_cast<const CMD_Dbmgr_WriteAccount*>(
               &_CMD_Dbmgr_WriteAccount_default_instance_);
  }

  void Swap(CMD_Dbmgr_WriteAccount* other);

  // implements Message ----------------------------------------------

  inline CMD_Dbmgr_WriteAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Dbmgr_WriteAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Dbmgr_WriteAccount& from);
  void MergeFrom(const CMD_Dbmgr_WriteAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Dbmgr_WriteAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 2;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 2;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes datas = 4;
  void clear_datas();
  static const int kDatasFieldNumber = 4;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // string playerName = 5;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 5;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 appID = 1;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // int32 modelID = 6;
  void clear_modelid();
  static const int kModelIDFieldNumber = 6;
  ::google::protobuf::int32 modelid() const;
  void set_modelid(::google::protobuf::int32 value);

  // int32 exp = 7;
  void clear_exp();
  static const int kExpFieldNumber = 7;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 gold = 8;
  void clear_gold();
  static const int kGoldFieldNumber = 8;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Dbmgr_WriteAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::int32 modelid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 gold_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Dbmgr_QueryAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Dbmgr_QueryAccount) */ {
 public:
  CMD_Dbmgr_QueryAccount();
  virtual ~CMD_Dbmgr_QueryAccount();

  CMD_Dbmgr_QueryAccount(const CMD_Dbmgr_QueryAccount& from);

  inline CMD_Dbmgr_QueryAccount& operator=(const CMD_Dbmgr_QueryAccount& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Dbmgr_QueryAccount& default_instance();

  static inline const CMD_Dbmgr_QueryAccount* internal_default_instance() {
    return reinterpret_cast<const CMD_Dbmgr_QueryAccount*>(
               &_CMD_Dbmgr_QueryAccount_default_instance_);
  }

  void Swap(CMD_Dbmgr_QueryAccount* other);

  // implements Message ----------------------------------------------

  inline CMD_Dbmgr_QueryAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Dbmgr_QueryAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Dbmgr_QueryAccount& from);
  void MergeFrom(const CMD_Dbmgr_QueryAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Dbmgr_QueryAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string datas = 5;
  void clear_datas();
  static const int kDatasFieldNumber = 5;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const char* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // uint64 queryAppID = 3;
  void clear_queryappid();
  static const int kQueryAppIDFieldNumber = 3;
  ::google::protobuf::uint64 queryappid() const;
  void set_queryappid(::google::protobuf::uint64 value);

  // uint64 accountID = 6;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 6;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // int32 queryType = 4;
  void clear_querytype();
  static const int kQueryTypeFieldNumber = 4;
  ::google::protobuf::int32 querytype() const;
  void set_querytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Dbmgr_QueryAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::uint64 queryappid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::int32 querytype_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Dbmgr_UpdateAccountData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Dbmgr_UpdateAccountData) */ {
 public:
  CMD_Dbmgr_UpdateAccountData();
  virtual ~CMD_Dbmgr_UpdateAccountData();

  CMD_Dbmgr_UpdateAccountData(const CMD_Dbmgr_UpdateAccountData& from);

  inline CMD_Dbmgr_UpdateAccountData& operator=(const CMD_Dbmgr_UpdateAccountData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Dbmgr_UpdateAccountData& default_instance();

  static inline const CMD_Dbmgr_UpdateAccountData* internal_default_instance() {
    return reinterpret_cast<const CMD_Dbmgr_UpdateAccountData*>(
               &_CMD_Dbmgr_UpdateAccountData_default_instance_);
  }

  void Swap(CMD_Dbmgr_UpdateAccountData* other);

  // implements Message ----------------------------------------------

  inline CMD_Dbmgr_UpdateAccountData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Dbmgr_UpdateAccountData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Dbmgr_UpdateAccountData& from);
  void MergeFrom(const CMD_Dbmgr_UpdateAccountData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Dbmgr_UpdateAccountData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string playerName = 2;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // int32 modelID = 3;
  void clear_modelid();
  static const int kModelIDFieldNumber = 3;
  ::google::protobuf::int32 modelid() const;
  void set_modelid(::google::protobuf::int32 value);

  // int32 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 gold = 5;
  void clear_gold();
  static const int kGoldFieldNumber = 5;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Dbmgr_UpdateAccountData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 modelid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 gold_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Dbmgr_WritePlayerGameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Dbmgr_WritePlayerGameData) */ {
 public:
  CMD_Dbmgr_WritePlayerGameData();
  virtual ~CMD_Dbmgr_WritePlayerGameData();

  CMD_Dbmgr_WritePlayerGameData(const CMD_Dbmgr_WritePlayerGameData& from);

  inline CMD_Dbmgr_WritePlayerGameData& operator=(const CMD_Dbmgr_WritePlayerGameData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Dbmgr_WritePlayerGameData& default_instance();

  static inline const CMD_Dbmgr_WritePlayerGameData* internal_default_instance() {
    return reinterpret_cast<const CMD_Dbmgr_WritePlayerGameData*>(
               &_CMD_Dbmgr_WritePlayerGameData_default_instance_);
  }

  void Swap(CMD_Dbmgr_WritePlayerGameData* other);

  // implements Message ----------------------------------------------

  inline CMD_Dbmgr_WritePlayerGameData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Dbmgr_WritePlayerGameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Dbmgr_WritePlayerGameData& from);
  void MergeFrom(const CMD_Dbmgr_WritePlayerGameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Dbmgr_WritePlayerGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // int32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // int32 topscore = 3;
  void clear_topscore();
  static const int kTopscoreFieldNumber = 3;
  ::google::protobuf::int32 topscore() const;
  void set_topscore(::google::protobuf::int32 value);

  // uint64 gameID = 4;
  void clear_gameid();
  static const int kGameIDFieldNumber = 4;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint32 gameMode = 5;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 5;
  ::google::protobuf::uint32 gamemode() const;
  void set_gamemode(::google::protobuf::uint32 value);

  // int32 victory = 6;
  void clear_victory();
  static const int kVictoryFieldNumber = 6;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // int32 defeat = 7;
  void clear_defeat();
  static const int kDefeatFieldNumber = 7;
  ::google::protobuf::int32 defeat() const;
  void set_defeat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Dbmgr_WritePlayerGameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 topscore_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 gamemode_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int32 defeat_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Dbmgr_QueryPlayerGameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Dbmgr_QueryPlayerGameData) */ {
 public:
  CMD_Dbmgr_QueryPlayerGameData();
  virtual ~CMD_Dbmgr_QueryPlayerGameData();

  CMD_Dbmgr_QueryPlayerGameData(const CMD_Dbmgr_QueryPlayerGameData& from);

  inline CMD_Dbmgr_QueryPlayerGameData& operator=(const CMD_Dbmgr_QueryPlayerGameData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Dbmgr_QueryPlayerGameData& default_instance();

  static inline const CMD_Dbmgr_QueryPlayerGameData* internal_default_instance() {
    return reinterpret_cast<const CMD_Dbmgr_QueryPlayerGameData*>(
               &_CMD_Dbmgr_QueryPlayerGameData_default_instance_);
  }

  void Swap(CMD_Dbmgr_QueryPlayerGameData* other);

  // implements Message ----------------------------------------------

  inline CMD_Dbmgr_QueryPlayerGameData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Dbmgr_QueryPlayerGameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Dbmgr_QueryPlayerGameData& from);
  void MergeFrom(const CMD_Dbmgr_QueryPlayerGameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Dbmgr_QueryPlayerGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 gameID = 2;
  void clear_gameid();
  static const int kGameIDFieldNumber = 2;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint32 gameMode = 3;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::uint32 gamemode() const;
  void set_gamemode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_Dbmgr_QueryPlayerGameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 gamemode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_PlayerGameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_PlayerGameData) */ {
 public:
  CMD_Halls_PlayerGameData();
  virtual ~CMD_Halls_PlayerGameData();

  CMD_Halls_PlayerGameData(const CMD_Halls_PlayerGameData& from);

  inline CMD_Halls_PlayerGameData& operator=(const CMD_Halls_PlayerGameData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_PlayerGameData& default_instance();

  static inline const CMD_Halls_PlayerGameData* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_PlayerGameData*>(
               &_CMD_Halls_PlayerGameData_default_instance_);
  }

  void Swap(CMD_Halls_PlayerGameData* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_PlayerGameData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_PlayerGameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_PlayerGameData& from);
  void MergeFrom(const CMD_Halls_PlayerGameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_PlayerGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 exp = 1;
  void clear_exp();
  static const int kExpFieldNumber = 1;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // uint64 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // bool victory = 4;
  void clear_victory();
  static const int kVictoryFieldNumber = 4;
  bool victory() const;
  void set_victory(bool value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_PlayerGameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::uint64 id_;
  bool victory_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_Login) */ {
 public:
  CMD_Halls_Login();
  virtual ~CMD_Halls_Login();

  CMD_Halls_Login(const CMD_Halls_Login& from);

  inline CMD_Halls_Login& operator=(const CMD_Halls_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_Login& default_instance();

  static inline const CMD_Halls_Login* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_Login*>(
               &_CMD_Halls_Login_default_instance_);
  }

  void Swap(CMD_Halls_Login* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_Login& from);
  void MergeFrom(const CMD_Halls_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 2;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 2;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // uint64 tokenID = 1;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 1;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // uint64 hallsID = 3;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 3;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 playerID = 4;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::uint64 tokenid_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 playerid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_RequestAllocClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_RequestAllocClient) */ {
 public:
  CMD_Halls_RequestAllocClient();
  virtual ~CMD_Halls_RequestAllocClient();

  CMD_Halls_RequestAllocClient(const CMD_Halls_RequestAllocClient& from);

  inline CMD_Halls_RequestAllocClient& operator=(const CMD_Halls_RequestAllocClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_RequestAllocClient& default_instance();

  static inline const CMD_Halls_RequestAllocClient* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_RequestAllocClient*>(
               &_CMD_Halls_RequestAllocClient_default_instance_);
  }

  void Swap(CMD_Halls_RequestAllocClient* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_RequestAllocClient* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_RequestAllocClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_RequestAllocClient& from);
  void MergeFrom(const CMD_Halls_RequestAllocClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_RequestAllocClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes datas = 3;
  void clear_datas();
  static const int kDatasFieldNumber = 3;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // uint64 foundObjectID = 4;
  void clear_foundobjectid();
  static const int kFoundObjectIDFieldNumber = 4;
  ::google::protobuf::uint64 foundobjectid() const;
  void set_foundobjectid(::google::protobuf::uint64 value);

  // uint64 loginSessionID = 5;
  void clear_loginsessionid();
  static const int kLoginSessionIDFieldNumber = 5;
  ::google::protobuf::uint64 loginsessionid() const;
  void set_loginsessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_RequestAllocClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::uint64 foundobjectid_;
  ::google::protobuf::uint64 loginsessionid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_StartMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_StartMatch) */ {
 public:
  CMD_Halls_StartMatch();
  virtual ~CMD_Halls_StartMatch();

  CMD_Halls_StartMatch(const CMD_Halls_StartMatch& from);

  inline CMD_Halls_StartMatch& operator=(const CMD_Halls_StartMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_StartMatch& default_instance();

  static inline const CMD_Halls_StartMatch* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_StartMatch*>(
               &_CMD_Halls_StartMatch_default_instance_);
  }

  void Swap(CMD_Halls_StartMatch* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_StartMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_StartMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_StartMatch& from);
  void MergeFrom(const CMD_Halls_StartMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_StartMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gameID = 1;
  void clear_gameid();
  static const int kGameIDFieldNumber = 1;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // int32 gameMode = 2;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 2;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_StartMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::int32 gamemode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_CancelMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_CancelMatch) */ {
 public:
  CMD_Halls_CancelMatch();
  virtual ~CMD_Halls_CancelMatch();

  CMD_Halls_CancelMatch(const CMD_Halls_CancelMatch& from);

  inline CMD_Halls_CancelMatch& operator=(const CMD_Halls_CancelMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_CancelMatch& default_instance();

  static inline const CMD_Halls_CancelMatch* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_CancelMatch*>(
               &_CMD_Halls_CancelMatch_default_instance_);
  }

  void Swap(CMD_Halls_CancelMatch* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_CancelMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_CancelMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_CancelMatch& from);
  void MergeFrom(const CMD_Halls_CancelMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_CancelMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD_Halls_CancelMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_OnRequestCreateRoomCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_OnRequestCreateRoomCB) */ {
 public:
  CMD_Halls_OnRequestCreateRoomCB();
  virtual ~CMD_Halls_OnRequestCreateRoomCB();

  CMD_Halls_OnRequestCreateRoomCB(const CMD_Halls_OnRequestCreateRoomCB& from);

  inline CMD_Halls_OnRequestCreateRoomCB& operator=(const CMD_Halls_OnRequestCreateRoomCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_OnRequestCreateRoomCB& default_instance();

  static inline const CMD_Halls_OnRequestCreateRoomCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_OnRequestCreateRoomCB*>(
               &_CMD_Halls_OnRequestCreateRoomCB_default_instance_);
  }

  void Swap(CMD_Halls_OnRequestCreateRoomCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_OnRequestCreateRoomCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_OnRequestCreateRoomCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_OnRequestCreateRoomCB& from);
  void MergeFrom(const CMD_Halls_OnRequestCreateRoomCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_OnRequestCreateRoomCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 roomID = 1;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 tokenID = 4;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 4;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // int32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // .ServerError errcode = 5;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 5;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_OnRequestCreateRoomCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 tokenid_;
  ::google::protobuf::int32 port_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_OnRoomSrvGameOverReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_OnRoomSrvGameOverReport) */ {
 public:
  CMD_Halls_OnRoomSrvGameOverReport();
  virtual ~CMD_Halls_OnRoomSrvGameOverReport();

  CMD_Halls_OnRoomSrvGameOverReport(const CMD_Halls_OnRoomSrvGameOverReport& from);

  inline CMD_Halls_OnRoomSrvGameOverReport& operator=(const CMD_Halls_OnRoomSrvGameOverReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_OnRoomSrvGameOverReport& default_instance();

  static inline const CMD_Halls_OnRoomSrvGameOverReport* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_OnRoomSrvGameOverReport*>(
               &_CMD_Halls_OnRoomSrvGameOverReport_default_instance_);
  }

  void Swap(CMD_Halls_OnRoomSrvGameOverReport* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_OnRoomSrvGameOverReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_OnRoomSrvGameOverReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_OnRoomSrvGameOverReport& from);
  void MergeFrom(const CMD_Halls_OnRoomSrvGameOverReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_OnRoomSrvGameOverReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_Halls_PlayerGameData playerdatas = 3;
  int playerdatas_size() const;
  void clear_playerdatas();
  static const int kPlayerdatasFieldNumber = 3;
  const ::CMD_Halls_PlayerGameData& playerdatas(int index) const;
  ::CMD_Halls_PlayerGameData* mutable_playerdatas(int index);
  ::CMD_Halls_PlayerGameData* add_playerdatas();
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
      mutable_playerdatas();
  const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
      playerdatas() const;

  // uint64 roomID = 1;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // .ServerError errcode = 2;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_OnRoomSrvGameOverReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData > playerdatas_;
  ::google::protobuf::uint64 roomid_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_OnQueryAccountCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_OnQueryAccountCB) */ {
 public:
  CMD_Halls_OnQueryAccountCB();
  virtual ~CMD_Halls_OnQueryAccountCB();

  CMD_Halls_OnQueryAccountCB(const CMD_Halls_OnQueryAccountCB& from);

  inline CMD_Halls_OnQueryAccountCB& operator=(const CMD_Halls_OnQueryAccountCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_OnQueryAccountCB& default_instance();

  static inline const CMD_Halls_OnQueryAccountCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_OnQueryAccountCB*>(
               &_CMD_Halls_OnQueryAccountCB_default_instance_);
  }

  void Swap(CMD_Halls_OnQueryAccountCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_OnQueryAccountCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_OnQueryAccountCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_OnQueryAccountCB& from);
  void MergeFrom(const CMD_Halls_OnQueryAccountCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_OnQueryAccountCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // bytes datas = 2;
  void clear_datas();
  static const int kDatasFieldNumber = 2;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // string playerName = 4;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 4;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 foundObjectID = 3;
  void clear_foundobjectid();
  static const int kFoundObjectIDFieldNumber = 3;
  ::google::protobuf::uint64 foundobjectid() const;
  void set_foundobjectid(::google::protobuf::uint64 value);

  // int32 modelID = 5;
  void clear_modelid();
  static const int kModelIDFieldNumber = 5;
  ::google::protobuf::int32 modelid() const;
  void set_modelid(::google::protobuf::int32 value);

  // int32 exp = 6;
  void clear_exp();
  static const int kExpFieldNumber = 6;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 gold = 7;
  void clear_gold();
  static const int kGoldFieldNumber = 7;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // .ServerError errcode = 8;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 8;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // int32 queryType = 9;
  void clear_querytype();
  static const int kQueryTypeFieldNumber = 9;
  ::google::protobuf::int32 querytype() const;
  void set_querytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_OnQueryAccountCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 foundobjectid_;
  ::google::protobuf::int32 modelid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 gold_;
  int errcode_;
  ::google::protobuf::int32 querytype_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_OnQueryPlayerGameDataCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_OnQueryPlayerGameDataCB) */ {
 public:
  CMD_Halls_OnQueryPlayerGameDataCB();
  virtual ~CMD_Halls_OnQueryPlayerGameDataCB();

  CMD_Halls_OnQueryPlayerGameDataCB(const CMD_Halls_OnQueryPlayerGameDataCB& from);

  inline CMD_Halls_OnQueryPlayerGameDataCB& operator=(const CMD_Halls_OnQueryPlayerGameDataCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_OnQueryPlayerGameDataCB& default_instance();

  static inline const CMD_Halls_OnQueryPlayerGameDataCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_OnQueryPlayerGameDataCB*>(
               &_CMD_Halls_OnQueryPlayerGameDataCB_default_instance_);
  }

  void Swap(CMD_Halls_OnQueryPlayerGameDataCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_OnQueryPlayerGameDataCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_OnQueryPlayerGameDataCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_OnQueryPlayerGameDataCB& from);
  void MergeFrom(const CMD_Halls_OnQueryPlayerGameDataCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_OnQueryPlayerGameDataCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // int32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // int32 topscore = 3;
  void clear_topscore();
  static const int kTopscoreFieldNumber = 3;
  ::google::protobuf::int32 topscore() const;
  void set_topscore(::google::protobuf::int32 value);

  // uint64 gameID = 4;
  void clear_gameid();
  static const int kGameIDFieldNumber = 4;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint32 gameMode = 5;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 5;
  ::google::protobuf::uint32 gamemode() const;
  void set_gamemode(::google::protobuf::uint32 value);

  // int32 victory = 6;
  void clear_victory();
  static const int kVictoryFieldNumber = 6;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // int32 defeat = 7;
  void clear_defeat();
  static const int kDefeatFieldNumber = 7;
  ::google::protobuf::int32 defeat() const;
  void set_defeat(::google::protobuf::int32 value);

  // .ServerError errcode = 8;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 8;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_OnQueryPlayerGameDataCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 topscore_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 gamemode_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int32 defeat_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_QueryPlayerGameData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_QueryPlayerGameData) */ {
 public:
  CMD_Halls_QueryPlayerGameData();
  virtual ~CMD_Halls_QueryPlayerGameData();

  CMD_Halls_QueryPlayerGameData(const CMD_Halls_QueryPlayerGameData& from);

  inline CMD_Halls_QueryPlayerGameData& operator=(const CMD_Halls_QueryPlayerGameData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_QueryPlayerGameData& default_instance();

  static inline const CMD_Halls_QueryPlayerGameData* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_QueryPlayerGameData*>(
               &_CMD_Halls_QueryPlayerGameData_default_instance_);
  }

  void Swap(CMD_Halls_QueryPlayerGameData* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_QueryPlayerGameData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_QueryPlayerGameData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_QueryPlayerGameData& from);
  void MergeFrom(const CMD_Halls_QueryPlayerGameData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_QueryPlayerGameData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gameID = 1;
  void clear_gameid();
  static const int kGameIDFieldNumber = 1;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint32 gameMode = 2;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 2;
  ::google::protobuf::uint32 gamemode() const;
  void set_gamemode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_QueryPlayerGameData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 gamemode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Halls_ListGames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Halls_ListGames) */ {
 public:
  CMD_Halls_ListGames();
  virtual ~CMD_Halls_ListGames();

  CMD_Halls_ListGames(const CMD_Halls_ListGames& from);

  inline CMD_Halls_ListGames& operator=(const CMD_Halls_ListGames& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Halls_ListGames& default_instance();

  static inline const CMD_Halls_ListGames* internal_default_instance() {
    return reinterpret_cast<const CMD_Halls_ListGames*>(
               &_CMD_Halls_ListGames_default_instance_);
  }

  void Swap(CMD_Halls_ListGames* other);

  // implements Message ----------------------------------------------

  inline CMD_Halls_ListGames* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Halls_ListGames* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Halls_ListGames& from);
  void MergeFrom(const CMD_Halls_ListGames& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Halls_ListGames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 page = 1;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 maxNum = 3;
  void clear_maxnum();
  static const int kMaxNumFieldNumber = 3;
  ::google::protobuf::uint32 maxnum() const;
  void set_maxnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_Halls_ListGames)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 maxnum_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Hallsmgr_RequestAllocClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Hallsmgr_RequestAllocClient) */ {
 public:
  CMD_Hallsmgr_RequestAllocClient();
  virtual ~CMD_Hallsmgr_RequestAllocClient();

  CMD_Hallsmgr_RequestAllocClient(const CMD_Hallsmgr_RequestAllocClient& from);

  inline CMD_Hallsmgr_RequestAllocClient& operator=(const CMD_Hallsmgr_RequestAllocClient& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Hallsmgr_RequestAllocClient& default_instance();

  static inline const CMD_Hallsmgr_RequestAllocClient* internal_default_instance() {
    return reinterpret_cast<const CMD_Hallsmgr_RequestAllocClient*>(
               &_CMD_Hallsmgr_RequestAllocClient_default_instance_);
  }

  void Swap(CMD_Hallsmgr_RequestAllocClient* other);

  // implements Message ----------------------------------------------

  inline CMD_Hallsmgr_RequestAllocClient* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Hallsmgr_RequestAllocClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Hallsmgr_RequestAllocClient& from);
  void MergeFrom(const CMD_Hallsmgr_RequestAllocClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Hallsmgr_RequestAllocClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string commitAccountName = 1;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 1;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes datas = 3;
  void clear_datas();
  static const int kDatasFieldNumber = 3;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // uint64 foundObjectID = 4;
  void clear_foundobjectid();
  static const int kFoundObjectIDFieldNumber = 4;
  ::google::protobuf::uint64 foundobjectid() const;
  void set_foundobjectid(::google::protobuf::uint64 value);

  // uint64 foundAppID = 5;
  void clear_foundappid();
  static const int kFoundAppIDFieldNumber = 5;
  ::google::protobuf::uint64 foundappid() const;
  void set_foundappid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Hallsmgr_RequestAllocClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::uint64 foundobjectid_;
  ::google::protobuf::uint64 foundappid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Hallsmgr_OnRequestAllocClientCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Hallsmgr_OnRequestAllocClientCB) */ {
 public:
  CMD_Hallsmgr_OnRequestAllocClientCB();
  virtual ~CMD_Hallsmgr_OnRequestAllocClientCB();

  CMD_Hallsmgr_OnRequestAllocClientCB(const CMD_Hallsmgr_OnRequestAllocClientCB& from);

  inline CMD_Hallsmgr_OnRequestAllocClientCB& operator=(const CMD_Hallsmgr_OnRequestAllocClientCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Hallsmgr_OnRequestAllocClientCB& default_instance();

  static inline const CMD_Hallsmgr_OnRequestAllocClientCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Hallsmgr_OnRequestAllocClientCB*>(
               &_CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_);
  }

  void Swap(CMD_Hallsmgr_OnRequestAllocClientCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Hallsmgr_OnRequestAllocClientCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Hallsmgr_OnRequestAllocClientCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Hallsmgr_OnRequestAllocClientCB& from);
  void MergeFrom(const CMD_Hallsmgr_OnRequestAllocClientCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Hallsmgr_OnRequestAllocClientCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string commitAccountName = 3;
  void clear_commitaccountname();
  static const int kCommitAccountNameFieldNumber = 3;
  const ::std::string& commitaccountname() const;
  void set_commitaccountname(const ::std::string& value);
  #if LANG_CXX11
  void set_commitaccountname(::std::string&& value);
  #endif
  void set_commitaccountname(const char* value);
  void set_commitaccountname(const char* value, size_t size);
  ::std::string* mutable_commitaccountname();
  ::std::string* release_commitaccountname();
  void set_allocated_commitaccountname(::std::string* commitaccountname);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // .ServerError errcode = 4;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 4;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // uint64 loginSessionID = 5;
  void clear_loginsessionid();
  static const int kLoginSessionIDFieldNumber = 5;
  ::google::protobuf::uint64 loginsessionid() const;
  void set_loginsessionid(::google::protobuf::uint64 value);

  // uint64 tokenID = 6;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 6;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Hallsmgr_OnRequestAllocClientCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr commitaccountname_;
  ::google::protobuf::int32 port_;
  int errcode_;
  ::google::protobuf::uint64 loginsessionid_;
  ::google::protobuf::uint64 tokenid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_RoomPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_RoomPlayerInfo) */ {
 public:
  CMD_RoomPlayerInfo();
  virtual ~CMD_RoomPlayerInfo();

  CMD_RoomPlayerInfo(const CMD_RoomPlayerInfo& from);

  inline CMD_RoomPlayerInfo& operator=(const CMD_RoomPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_RoomPlayerInfo& default_instance();

  static inline const CMD_RoomPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CMD_RoomPlayerInfo*>(
               &_CMD_RoomPlayerInfo_default_instance_);
  }

  void Swap(CMD_RoomPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CMD_RoomPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_RoomPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_RoomPlayerInfo& from);
  void MergeFrom(const CMD_RoomPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_RoomPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string clientAddr = 2;
  void clear_clientaddr();
  static const int kClientAddrFieldNumber = 2;
  const ::std::string& clientaddr() const;
  void set_clientaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_clientaddr(::std::string&& value);
  #endif
  void set_clientaddr(const char* value);
  void set_clientaddr(const char* value, size_t size);
  ::std::string* mutable_clientaddr();
  ::std::string* release_clientaddr();
  void set_allocated_clientaddr(::std::string* clientaddr);

  // string playerName = 8;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 8;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // int32 exp = 3;
  void clear_exp();
  static const int kExpFieldNumber = 3;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 score = 4;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // int32 topscore = 5;
  void clear_topscore();
  static const int kTopscoreFieldNumber = 5;
  ::google::protobuf::int32 topscore() const;
  void set_topscore(::google::protobuf::int32 value);

  // int32 victory = 6;
  void clear_victory();
  static const int kVictoryFieldNumber = 6;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // int32 defeat = 7;
  void clear_defeat();
  static const int kDefeatFieldNumber = 7;
  ::google::protobuf::int32 defeat() const;
  void set_defeat(::google::protobuf::int32 value);

  // int32 playerModelID = 9;
  void clear_playermodelid();
  static const int kPlayerModelIDFieldNumber = 9;
  ::google::protobuf::int32 playermodelid() const;
  void set_playermodelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_RoomPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr clientaddr_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 topscore_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int32 defeat_;
  ::google::protobuf::int32 playermodelid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Roommgr_RequestCreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Roommgr_RequestCreateRoom) */ {
 public:
  CMD_Roommgr_RequestCreateRoom();
  virtual ~CMD_Roommgr_RequestCreateRoom();

  CMD_Roommgr_RequestCreateRoom(const CMD_Roommgr_RequestCreateRoom& from);

  inline CMD_Roommgr_RequestCreateRoom& operator=(const CMD_Roommgr_RequestCreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Roommgr_RequestCreateRoom& default_instance();

  static inline const CMD_Roommgr_RequestCreateRoom* internal_default_instance() {
    return reinterpret_cast<const CMD_Roommgr_RequestCreateRoom*>(
               &_CMD_Roommgr_RequestCreateRoom_default_instance_);
  }

  void Swap(CMD_Roommgr_RequestCreateRoom* other);

  // implements Message ----------------------------------------------

  inline CMD_Roommgr_RequestCreateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Roommgr_RequestCreateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Roommgr_RequestCreateRoom& from);
  void MergeFrom(const CMD_Roommgr_RequestCreateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Roommgr_RequestCreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_RoomPlayerInfo players = 7;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 7;
  const ::CMD_RoomPlayerInfo& players(int index) const;
  ::CMD_RoomPlayerInfo* mutable_players(int index);
  ::CMD_RoomPlayerInfo* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
      players() const;

  // string exeFile = 8;
  void clear_exefile();
  static const int kExeFileFieldNumber = 8;
  const ::std::string& exefile() const;
  void set_exefile(const ::std::string& value);
  #if LANG_CXX11
  void set_exefile(::std::string&& value);
  #endif
  void set_exefile(const char* value);
  void set_exefile(const char* value, size_t size);
  ::std::string* mutable_exefile();
  ::std::string* release_exefile();
  void set_allocated_exefile(::std::string* exefile);

  // string exeOptions = 9;
  void clear_exeoptions();
  static const int kExeOptionsFieldNumber = 9;
  const ::std::string& exeoptions() const;
  void set_exeoptions(const ::std::string& value);
  #if LANG_CXX11
  void set_exeoptions(::std::string&& value);
  #endif
  void set_exeoptions(const char* value);
  void set_exeoptions(const char* value, size_t size);
  ::std::string* mutable_exeoptions();
  ::std::string* release_exeoptions();
  void set_allocated_exeoptions(::std::string* exeoptions);

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 gameID = 2;
  void clear_gameid();
  static const int kGameIDFieldNumber = 2;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint64 roomID = 4;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // int32 gameMode = 3;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // int32 maxPlayerNum = 5;
  void clear_maxplayernum();
  static const int kMaxPlayerNumFieldNumber = 5;
  ::google::protobuf::int32 maxplayernum() const;
  void set_maxplayernum(::google::protobuf::int32 value);

  // float gameTime = 6;
  void clear_gametime();
  static const int kGameTimeFieldNumber = 6;
  float gametime() const;
  void set_gametime(float value);

  // @@protoc_insertion_point(class_scope:CMD_Roommgr_RequestCreateRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo > players_;
  ::google::protobuf::internal::ArenaStringPtr exefile_;
  ::google::protobuf::internal::ArenaStringPtr exeoptions_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 gamemode_;
  ::google::protobuf::int32 maxplayernum_;
  float gametime_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Roommgr_OnRequestCreateRoomCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Roommgr_OnRequestCreateRoomCB) */ {
 public:
  CMD_Roommgr_OnRequestCreateRoomCB();
  virtual ~CMD_Roommgr_OnRequestCreateRoomCB();

  CMD_Roommgr_OnRequestCreateRoomCB(const CMD_Roommgr_OnRequestCreateRoomCB& from);

  inline CMD_Roommgr_OnRequestCreateRoomCB& operator=(const CMD_Roommgr_OnRequestCreateRoomCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Roommgr_OnRequestCreateRoomCB& default_instance();

  static inline const CMD_Roommgr_OnRequestCreateRoomCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Roommgr_OnRequestCreateRoomCB*>(
               &_CMD_Roommgr_OnRequestCreateRoomCB_default_instance_);
  }

  void Swap(CMD_Roommgr_OnRequestCreateRoomCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Roommgr_OnRequestCreateRoomCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Roommgr_OnRequestCreateRoomCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Roommgr_OnRequestCreateRoomCB& from);
  void MergeFrom(const CMD_Roommgr_OnRequestCreateRoomCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Roommgr_OnRequestCreateRoomCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 tokenID = 5;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 5;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // int32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // .ServerError errcode = 6;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 6;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Roommgr_OnRequestCreateRoomCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 tokenid_;
  ::google::protobuf::int32 port_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Roommgr_OnRoomSrvGameOverReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Roommgr_OnRoomSrvGameOverReport) */ {
 public:
  CMD_Roommgr_OnRoomSrvGameOverReport();
  virtual ~CMD_Roommgr_OnRoomSrvGameOverReport();

  CMD_Roommgr_OnRoomSrvGameOverReport(const CMD_Roommgr_OnRoomSrvGameOverReport& from);

  inline CMD_Roommgr_OnRoomSrvGameOverReport& operator=(const CMD_Roommgr_OnRoomSrvGameOverReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Roommgr_OnRoomSrvGameOverReport& default_instance();

  static inline const CMD_Roommgr_OnRoomSrvGameOverReport* internal_default_instance() {
    return reinterpret_cast<const CMD_Roommgr_OnRoomSrvGameOverReport*>(
               &_CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_);
  }

  void Swap(CMD_Roommgr_OnRoomSrvGameOverReport* other);

  // implements Message ----------------------------------------------

  inline CMD_Roommgr_OnRoomSrvGameOverReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Roommgr_OnRoomSrvGameOverReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Roommgr_OnRoomSrvGameOverReport& from);
  void MergeFrom(const CMD_Roommgr_OnRoomSrvGameOverReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Roommgr_OnRoomSrvGameOverReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  int playerdatas_size() const;
  void clear_playerdatas();
  static const int kPlayerdatasFieldNumber = 4;
  const ::CMD_Halls_PlayerGameData& playerdatas(int index) const;
  ::CMD_Halls_PlayerGameData* mutable_playerdatas(int index);
  ::CMD_Halls_PlayerGameData* add_playerdatas();
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
      mutable_playerdatas();
  const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
      playerdatas() const;

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // .ServerError errcode = 3;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 3;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Roommgr_OnRoomSrvGameOverReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData > playerdatas_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 roomid_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Machine_RequestCreateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Machine_RequestCreateRoom) */ {
 public:
  CMD_Machine_RequestCreateRoom();
  virtual ~CMD_Machine_RequestCreateRoom();

  CMD_Machine_RequestCreateRoom(const CMD_Machine_RequestCreateRoom& from);

  inline CMD_Machine_RequestCreateRoom& operator=(const CMD_Machine_RequestCreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Machine_RequestCreateRoom& default_instance();

  static inline const CMD_Machine_RequestCreateRoom* internal_default_instance() {
    return reinterpret_cast<const CMD_Machine_RequestCreateRoom*>(
               &_CMD_Machine_RequestCreateRoom_default_instance_);
  }

  void Swap(CMD_Machine_RequestCreateRoom* other);

  // implements Message ----------------------------------------------

  inline CMD_Machine_RequestCreateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Machine_RequestCreateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Machine_RequestCreateRoom& from);
  void MergeFrom(const CMD_Machine_RequestCreateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Machine_RequestCreateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_RoomPlayerInfo players = 7;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 7;
  const ::CMD_RoomPlayerInfo& players(int index) const;
  ::CMD_RoomPlayerInfo* mutable_players(int index);
  ::CMD_RoomPlayerInfo* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
      players() const;

  // string exeFile = 8;
  void clear_exefile();
  static const int kExeFileFieldNumber = 8;
  const ::std::string& exefile() const;
  void set_exefile(const ::std::string& value);
  #if LANG_CXX11
  void set_exefile(::std::string&& value);
  #endif
  void set_exefile(const char* value);
  void set_exefile(const char* value, size_t size);
  ::std::string* mutable_exefile();
  ::std::string* release_exefile();
  void set_allocated_exefile(::std::string* exefile);

  // string exeOptions = 9;
  void clear_exeoptions();
  static const int kExeOptionsFieldNumber = 9;
  const ::std::string& exeoptions() const;
  void set_exeoptions(const ::std::string& value);
  #if LANG_CXX11
  void set_exeoptions(::std::string&& value);
  #endif
  void set_exeoptions(const char* value);
  void set_exeoptions(const char* value, size_t size);
  ::std::string* mutable_exeoptions();
  ::std::string* release_exeoptions();
  void set_allocated_exeoptions(::std::string* exeoptions);

  // string roommgrIP = 11;
  void clear_roommgrip();
  static const int kRoommgrIPFieldNumber = 11;
  const ::std::string& roommgrip() const;
  void set_roommgrip(const ::std::string& value);
  #if LANG_CXX11
  void set_roommgrip(::std::string&& value);
  #endif
  void set_roommgrip(const char* value);
  void set_roommgrip(const char* value, size_t size);
  ::std::string* mutable_roommgrip();
  ::std::string* release_roommgrip();
  void set_allocated_roommgrip(::std::string* roommgrip);

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 gameID = 2;
  void clear_gameid();
  static const int kGameIDFieldNumber = 2;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint64 roomID = 4;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // int32 gameMode = 3;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // int32 maxPlayerNum = 5;
  void clear_maxplayernum();
  static const int kMaxPlayerNumFieldNumber = 5;
  ::google::protobuf::int32 maxplayernum() const;
  void set_maxplayernum(::google::protobuf::int32 value);

  // float gameTime = 6;
  void clear_gametime();
  static const int kGameTimeFieldNumber = 6;
  float gametime() const;
  void set_gametime(float value);

  // int32 roommgrPort = 12;
  void clear_roommgrport();
  static const int kRoommgrPortFieldNumber = 12;
  ::google::protobuf::int32 roommgrport() const;
  void set_roommgrport(::google::protobuf::int32 value);

  // uint64 tokenID = 10;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 10;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Machine_RequestCreateRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo > players_;
  ::google::protobuf::internal::ArenaStringPtr exefile_;
  ::google::protobuf::internal::ArenaStringPtr exeoptions_;
  ::google::protobuf::internal::ArenaStringPtr roommgrip_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 gamemode_;
  ::google::protobuf::int32 maxplayernum_;
  float gametime_;
  ::google::protobuf::int32 roommgrport_;
  ::google::protobuf::uint64 tokenid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Machine_RoomSrvReportAddr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Machine_RoomSrvReportAddr) */ {
 public:
  CMD_Machine_RoomSrvReportAddr();
  virtual ~CMD_Machine_RoomSrvReportAddr();

  CMD_Machine_RoomSrvReportAddr(const CMD_Machine_RoomSrvReportAddr& from);

  inline CMD_Machine_RoomSrvReportAddr& operator=(const CMD_Machine_RoomSrvReportAddr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Machine_RoomSrvReportAddr& default_instance();

  static inline const CMD_Machine_RoomSrvReportAddr* internal_default_instance() {
    return reinterpret_cast<const CMD_Machine_RoomSrvReportAddr*>(
               &_CMD_Machine_RoomSrvReportAddr_default_instance_);
  }

  void Swap(CMD_Machine_RoomSrvReportAddr* other);

  // implements Message ----------------------------------------------

  inline CMD_Machine_RoomSrvReportAddr* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Machine_RoomSrvReportAddr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Machine_RoomSrvReportAddr& from);
  void MergeFrom(const CMD_Machine_RoomSrvReportAddr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Machine_RoomSrvReportAddr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // int32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // .ServerError errcode = 5;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 5;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Machine_RoomSrvReportAddr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::int32 port_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Machine_OnRoomSrvGameOverReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Machine_OnRoomSrvGameOverReport) */ {
 public:
  CMD_Machine_OnRoomSrvGameOverReport();
  virtual ~CMD_Machine_OnRoomSrvGameOverReport();

  CMD_Machine_OnRoomSrvGameOverReport(const CMD_Machine_OnRoomSrvGameOverReport& from);

  inline CMD_Machine_OnRoomSrvGameOverReport& operator=(const CMD_Machine_OnRoomSrvGameOverReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Machine_OnRoomSrvGameOverReport& default_instance();

  static inline const CMD_Machine_OnRoomSrvGameOverReport* internal_default_instance() {
    return reinterpret_cast<const CMD_Machine_OnRoomSrvGameOverReport*>(
               &_CMD_Machine_OnRoomSrvGameOverReport_default_instance_);
  }

  void Swap(CMD_Machine_OnRoomSrvGameOverReport* other);

  // implements Message ----------------------------------------------

  inline CMD_Machine_OnRoomSrvGameOverReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Machine_OnRoomSrvGameOverReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Machine_OnRoomSrvGameOverReport& from);
  void MergeFrom(const CMD_Machine_OnRoomSrvGameOverReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Machine_OnRoomSrvGameOverReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  int playerdatas_size() const;
  void clear_playerdatas();
  static const int kPlayerdatasFieldNumber = 4;
  const ::CMD_Halls_PlayerGameData& playerdatas(int index) const;
  ::CMD_Halls_PlayerGameData* mutable_playerdatas(int index);
  ::CMD_Halls_PlayerGameData* add_playerdatas();
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
      mutable_playerdatas();
  const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
      playerdatas() const;

  // uint64 hallsID = 1;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 1;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // uint64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // .ServerError errcode = 3;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 3;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Machine_OnRoomSrvGameOverReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData > playerdatas_;
  ::google::protobuf::uint64 hallsid_;
  ::google::protobuf::uint64 roomid_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_ListServersInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_ListServersInfo) */ {
 public:
  CMD_ListServersInfo();
  virtual ~CMD_ListServersInfo();

  CMD_ListServersInfo(const CMD_ListServersInfo& from);

  inline CMD_ListServersInfo& operator=(const CMD_ListServersInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ListServersInfo& default_instance();

  static inline const CMD_ListServersInfo* internal_default_instance() {
    return reinterpret_cast<const CMD_ListServersInfo*>(
               &_CMD_ListServersInfo_default_instance_);
  }

  void Swap(CMD_ListServersInfo* other);

  // implements Message ----------------------------------------------

  inline CMD_ListServersInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_ListServersInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_ListServersInfo& from);
  void MergeFrom(const CMD_ListServersInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_ListServersInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string addr = 1;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 groupid = 3;
  void clear_groupid();
  static const int kGroupidFieldNumber = 3;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_ListServersInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 port_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnListServersCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnListServersCB) */ {
 public:
  CMD_Client_OnListServersCB();
  virtual ~CMD_Client_OnListServersCB();

  CMD_Client_OnListServersCB(const CMD_Client_OnListServersCB& from);

  inline CMD_Client_OnListServersCB& operator=(const CMD_Client_OnListServersCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnListServersCB& default_instance();

  static inline const CMD_Client_OnListServersCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnListServersCB*>(
               &_CMD_Client_OnListServersCB_default_instance_);
  }

  void Swap(CMD_Client_OnListServersCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnListServersCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnListServersCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnListServersCB& from);
  void MergeFrom(const CMD_Client_OnListServersCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnListServersCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_ListServersInfo srvs = 2;
  int srvs_size() const;
  void clear_srvs();
  static const int kSrvsFieldNumber = 2;
  const ::CMD_ListServersInfo& srvs(int index) const;
  ::CMD_ListServersInfo* mutable_srvs(int index);
  ::CMD_ListServersInfo* add_srvs();
  ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >*
      mutable_srvs();
  const ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >&
      srvs() const;

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnListServersCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo > srvs_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnSignupCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnSignupCB) */ {
 public:
  CMD_Client_OnSignupCB();
  virtual ~CMD_Client_OnSignupCB();

  CMD_Client_OnSignupCB(const CMD_Client_OnSignupCB& from);

  inline CMD_Client_OnSignupCB& operator=(const CMD_Client_OnSignupCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnSignupCB& default_instance();

  static inline const CMD_Client_OnSignupCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnSignupCB*>(
               &_CMD_Client_OnSignupCB_default_instance_);
  }

  void Swap(CMD_Client_OnSignupCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnSignupCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnSignupCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnSignupCB& from);
  void MergeFrom(const CMD_Client_OnSignupCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnSignupCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes datas = 2;
  void clear_datas();
  static const int kDatasFieldNumber = 2;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnSignupCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnSigninCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnSigninCB) */ {
 public:
  CMD_Client_OnSigninCB();
  virtual ~CMD_Client_OnSigninCB();

  CMD_Client_OnSigninCB(const CMD_Client_OnSigninCB& from);

  inline CMD_Client_OnSigninCB& operator=(const CMD_Client_OnSigninCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnSigninCB& default_instance();

  static inline const CMD_Client_OnSigninCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnSigninCB*>(
               &_CMD_Client_OnSigninCB_default_instance_);
  }

  void Swap(CMD_Client_OnSigninCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnSigninCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnSigninCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnSigninCB& from);
  void MergeFrom(const CMD_Client_OnSigninCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnSigninCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes datas = 2;
  void clear_datas();
  static const int kDatasFieldNumber = 2;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // string addr = 3;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // int32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // uint64 tokenID = 5;
  void clear_tokenid();
  static const int kTokenIDFieldNumber = 5;
  ::google::protobuf::uint64 tokenid() const;
  void set_tokenid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnSigninCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  int errcode_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::uint64 tokenid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_PlayerContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_PlayerContext) */ {
 public:
  CMD_PlayerContext();
  virtual ~CMD_PlayerContext();

  CMD_PlayerContext(const CMD_PlayerContext& from);

  inline CMD_PlayerContext& operator=(const CMD_PlayerContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_PlayerContext& default_instance();

  static inline const CMD_PlayerContext* internal_default_instance() {
    return reinterpret_cast<const CMD_PlayerContext*>(
               &_CMD_PlayerContext_default_instance_);
  }

  void Swap(CMD_PlayerContext* other);

  // implements Message ----------------------------------------------

  inline CMD_PlayerContext* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_PlayerContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_PlayerContext& from);
  void MergeFrom(const CMD_PlayerContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_PlayerContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_RoomPlayerInfo gamePlayers = 14;
  int gameplayers_size() const;
  void clear_gameplayers();
  static const int kGamePlayersFieldNumber = 14;
  const ::CMD_RoomPlayerInfo& gameplayers(int index) const;
  ::CMD_RoomPlayerInfo* mutable_gameplayers(int index);
  ::CMD_RoomPlayerInfo* add_gameplayers();
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
      mutable_gameplayers();
  const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
      gameplayers() const;

  // string playerName = 2;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // string gameServerIP = 8;
  void clear_gameserverip();
  static const int kGameServerIPFieldNumber = 8;
  const ::std::string& gameserverip() const;
  void set_gameserverip(const ::std::string& value);
  #if LANG_CXX11
  void set_gameserverip(::std::string&& value);
  #endif
  void set_gameserverip(const char* value);
  void set_gameserverip(const char* value, size_t size);
  ::std::string* mutable_gameserverip();
  ::std::string* release_gameserverip();
  void set_allocated_gameserverip(::std::string* gameserverip);

  // uint64 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // int32 playerModelID = 3;
  void clear_playermodelid();
  static const int kPlayerModelIDFieldNumber = 3;
  ::google::protobuf::int32 playermodelid() const;
  void set_playermodelid(::google::protobuf::int32 value);

  // int32 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // uint64 roomID = 5;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 5;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 gameID = 6;
  void clear_gameid();
  static const int kGameIDFieldNumber = 6;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // int32 gameMode = 7;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 7;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // int32 gameServerPort = 9;
  void clear_gameserverport();
  static const int kGameServerPortFieldNumber = 9;
  ::google::protobuf::int32 gameserverport() const;
  void set_gameserverport(::google::protobuf::int32 value);

  // uint64 gameServerTokenID = 10;
  void clear_gameservertokenid();
  static const int kGameServerTokenIDFieldNumber = 10;
  ::google::protobuf::uint64 gameservertokenid() const;
  void set_gameservertokenid(::google::protobuf::uint64 value);

  // int32 gameMaxPlayerNum = 11;
  void clear_gamemaxplayernum();
  static const int kGameMaxPlayerNumFieldNumber = 11;
  ::google::protobuf::int32 gamemaxplayernum() const;
  void set_gamemaxplayernum(::google::protobuf::int32 value);

  // float gameTime = 12;
  void clear_gametime();
  static const int kGameTimeFieldNumber = 12;
  float gametime() const;
  void set_gametime(float value);

  // int32 playerGameTopScore = 13;
  void clear_playergametopscore();
  static const int kPlayerGameTopScoreFieldNumber = 13;
  ::google::protobuf::int32 playergametopscore() const;
  void set_playergametopscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMD_PlayerContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo > gameplayers_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr gameserverip_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 playermodelid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::int32 gamemode_;
  ::google::protobuf::int32 gameserverport_;
  ::google::protobuf::uint64 gameservertokenid_;
  ::google::protobuf::int32 gamemaxplayernum_;
  float gametime_;
  ::google::protobuf::int32 playergametopscore_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_UpdatePlayerContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_UpdatePlayerContext) */ {
 public:
  CMD_Client_UpdatePlayerContext();
  virtual ~CMD_Client_UpdatePlayerContext();

  CMD_Client_UpdatePlayerContext(const CMD_Client_UpdatePlayerContext& from);

  inline CMD_Client_UpdatePlayerContext& operator=(const CMD_Client_UpdatePlayerContext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_UpdatePlayerContext& default_instance();

  static inline const CMD_Client_UpdatePlayerContext* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_UpdatePlayerContext*>(
               &_CMD_Client_UpdatePlayerContext_default_instance_);
  }

  void Swap(CMD_Client_UpdatePlayerContext* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_UpdatePlayerContext* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_UpdatePlayerContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_UpdatePlayerContext& from);
  void MergeFrom(const CMD_Client_UpdatePlayerContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_UpdatePlayerContext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CMD_PlayerContext playerContext = 1;
  bool has_playercontext() const;
  void clear_playercontext();
  static const int kPlayerContextFieldNumber = 1;
  const ::CMD_PlayerContext& playercontext() const;
  ::CMD_PlayerContext* mutable_playercontext();
  ::CMD_PlayerContext* release_playercontext();
  void set_allocated_playercontext(::CMD_PlayerContext* playercontext);

  // @@protoc_insertion_point(class_scope:CMD_Client_UpdatePlayerContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::CMD_PlayerContext* playercontext_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_GameModeInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_GameModeInfos) */ {
 public:
  CMD_GameModeInfos();
  virtual ~CMD_GameModeInfos();

  CMD_GameModeInfos(const CMD_GameModeInfos& from);

  inline CMD_GameModeInfos& operator=(const CMD_GameModeInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GameModeInfos& default_instance();

  static inline const CMD_GameModeInfos* internal_default_instance() {
    return reinterpret_cast<const CMD_GameModeInfos*>(
               &_CMD_GameModeInfos_default_instance_);
  }

  void Swap(CMD_GameModeInfos* other);

  // implements Message ----------------------------------------------

  inline CMD_GameModeInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_GameModeInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_GameModeInfos& from);
  void MergeFrom(const CMD_GameModeInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_GameModeInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string gameModeName = 2;
  void clear_gamemodename();
  static const int kGameModeNameFieldNumber = 2;
  const ::std::string& gamemodename() const;
  void set_gamemodename(const ::std::string& value);
  #if LANG_CXX11
  void set_gamemodename(::std::string&& value);
  #endif
  void set_gamemodename(const char* value);
  void set_gamemodename(const char* value, size_t size);
  ::std::string* mutable_gamemodename();
  ::std::string* release_gamemodename();
  void set_allocated_gamemodename(::std::string* gamemodename);

  // uint32 gameModeID = 1;
  void clear_gamemodeid();
  static const int kGameModeIDFieldNumber = 1;
  ::google::protobuf::uint32 gamemodeid() const;
  void set_gamemodeid(::google::protobuf::uint32 value);

  // uint32 playerMax = 3;
  void clear_playermax();
  static const int kPlayerMaxFieldNumber = 3;
  ::google::protobuf::uint32 playermax() const;
  void set_playermax(::google::protobuf::uint32 value);

  // uint32 gameTime = 4;
  void clear_gametime();
  static const int kGameTimeFieldNumber = 4;
  ::google::protobuf::uint32 gametime() const;
  void set_gametime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_GameModeInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr gamemodename_;
  ::google::protobuf::uint32 gamemodeid_;
  ::google::protobuf::uint32 playermax_;
  ::google::protobuf::uint32 gametime_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_GameInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_GameInfos) */ {
 public:
  CMD_GameInfos();
  virtual ~CMD_GameInfos();

  CMD_GameInfos(const CMD_GameInfos& from);

  inline CMD_GameInfos& operator=(const CMD_GameInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GameInfos& default_instance();

  static inline const CMD_GameInfos* internal_default_instance() {
    return reinterpret_cast<const CMD_GameInfos*>(
               &_CMD_GameInfos_default_instance_);
  }

  void Swap(CMD_GameInfos* other);

  // implements Message ----------------------------------------------

  inline CMD_GameInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_GameInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_GameInfos& from);
  void MergeFrom(const CMD_GameInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_GameInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_GameModeInfos gameModes = 7;
  int gamemodes_size() const;
  void clear_gamemodes();
  static const int kGameModesFieldNumber = 7;
  const ::CMD_GameModeInfos& gamemodes(int index) const;
  ::CMD_GameModeInfos* mutable_gamemodes(int index);
  ::CMD_GameModeInfos* add_gamemodes();
  ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >*
      mutable_gamemodes();
  const ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >&
      gamemodes() const;

  // string gameName = 4;
  void clear_gamename();
  static const int kGameNameFieldNumber = 4;
  const ::std::string& gamename() const;
  void set_gamename(const ::std::string& value);
  #if LANG_CXX11
  void set_gamename(::std::string&& value);
  #endif
  void set_gamename(const char* value);
  void set_gamename(const char* value, size_t size);
  ::std::string* mutable_gamename();
  ::std::string* release_gamename();
  void set_allocated_gamename(::std::string* gamename);

  // string url_icon = 5;
  void clear_url_icon();
  static const int kUrlIconFieldNumber = 5;
  const ::std::string& url_icon() const;
  void set_url_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_url_icon(::std::string&& value);
  #endif
  void set_url_icon(const char* value);
  void set_url_icon(const char* value, size_t size);
  ::std::string* mutable_url_icon();
  ::std::string* release_url_icon();
  void set_allocated_url_icon(::std::string* url_icon);

  // string url_apk = 6;
  void clear_url_apk();
  static const int kUrlApkFieldNumber = 6;
  const ::std::string& url_apk() const;
  void set_url_apk(const ::std::string& value);
  #if LANG_CXX11
  void set_url_apk(::std::string&& value);
  #endif
  void set_url_apk(const char* value);
  void set_url_apk(const char* value, size_t size);
  ::std::string* mutable_url_apk();
  ::std::string* release_url_apk();
  void set_allocated_url_apk(::std::string* url_apk);

  // uint64 gameID = 1;
  void clear_gameid();
  static const int kGameIDFieldNumber = 1;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint32 gameMode = 2;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 2;
  ::google::protobuf::uint32 gamemode() const;
  void set_gamemode(::google::protobuf::uint32 value);

  // uint32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_GameInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos > gamemodes_;
  ::google::protobuf::internal::ArenaStringPtr gamename_;
  ::google::protobuf::internal::ArenaStringPtr url_icon_;
  ::google::protobuf::internal::ArenaStringPtr url_apk_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 gamemode_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnListGamesCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnListGamesCB) */ {
 public:
  CMD_Client_OnListGamesCB();
  virtual ~CMD_Client_OnListGamesCB();

  CMD_Client_OnListGamesCB(const CMD_Client_OnListGamesCB& from);

  inline CMD_Client_OnListGamesCB& operator=(const CMD_Client_OnListGamesCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnListGamesCB& default_instance();

  static inline const CMD_Client_OnListGamesCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnListGamesCB*>(
               &_CMD_Client_OnListGamesCB_default_instance_);
  }

  void Swap(CMD_Client_OnListGamesCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnListGamesCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnListGamesCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnListGamesCB& from);
  void MergeFrom(const CMD_Client_OnListGamesCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnListGamesCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMD_GameInfos gameInfos = 4;
  int gameinfos_size() const;
  void clear_gameinfos();
  static const int kGameInfosFieldNumber = 4;
  const ::CMD_GameInfos& gameinfos(int index) const;
  ::CMD_GameInfos* mutable_gameinfos(int index);
  ::CMD_GameInfos* add_gameinfos();
  ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >*
      mutable_gameinfos();
  const ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >&
      gameinfos() const;

  // uint32 page = 1;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 totalGamesNum = 3;
  void clear_totalgamesnum();
  static const int kTotalGamesNumFieldNumber = 3;
  ::google::protobuf::uint32 totalgamesnum() const;
  void set_totalgamesnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnListGamesCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos > gameinfos_;
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 totalgamesnum_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnLoginCB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnLoginCB) */ {
 public:
  CMD_Client_OnLoginCB();
  virtual ~CMD_Client_OnLoginCB();

  CMD_Client_OnLoginCB(const CMD_Client_OnLoginCB& from);

  inline CMD_Client_OnLoginCB& operator=(const CMD_Client_OnLoginCB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnLoginCB& default_instance();

  static inline const CMD_Client_OnLoginCB* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnLoginCB*>(
               &_CMD_Client_OnLoginCB_default_instance_);
  }

  void Swap(CMD_Client_OnLoginCB* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnLoginCB* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnLoginCB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnLoginCB& from);
  void MergeFrom(const CMD_Client_OnLoginCB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnLoginCB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes datas = 2;
  void clear_datas();
  static const int kDatasFieldNumber = 2;
  const ::std::string& datas() const;
  void set_datas(const ::std::string& value);
  #if LANG_CXX11
  void set_datas(::std::string&& value);
  #endif
  void set_datas(const char* value);
  void set_datas(const void* value, size_t size);
  ::std::string* mutable_datas();
  ::std::string* release_datas();
  void set_allocated_datas(::std::string* datas);

  // .CMD_PlayerContext playerContext = 3;
  bool has_playercontext() const;
  void clear_playercontext();
  static const int kPlayerContextFieldNumber = 3;
  const ::CMD_PlayerContext& playercontext() const;
  ::CMD_PlayerContext* mutable_playercontext();
  ::CMD_PlayerContext* release_playercontext();
  void set_allocated_playercontext(::CMD_PlayerContext* playercontext);

  // uint64 hallsID = 4;
  void clear_hallsid();
  static const int kHallsIDFieldNumber = 4;
  ::google::protobuf::uint64 hallsid() const;
  void set_hallsid(::google::protobuf::uint64 value);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnLoginCB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr datas_;
  ::CMD_PlayerContext* playercontext_;
  ::google::protobuf::uint64 hallsid_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnMatchingUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnMatchingUpdate) */ {
 public:
  CMD_Client_OnMatchingUpdate();
  virtual ~CMD_Client_OnMatchingUpdate();

  CMD_Client_OnMatchingUpdate(const CMD_Client_OnMatchingUpdate& from);

  inline CMD_Client_OnMatchingUpdate& operator=(const CMD_Client_OnMatchingUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnMatchingUpdate& default_instance();

  static inline const CMD_Client_OnMatchingUpdate* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnMatchingUpdate*>(
               &_CMD_Client_OnMatchingUpdate_default_instance_);
  }

  void Swap(CMD_Client_OnMatchingUpdate* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnMatchingUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnMatchingUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnMatchingUpdate& from);
  void MergeFrom(const CMD_Client_OnMatchingUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnMatchingUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // int32 modelID = 3;
  void clear_modelid();
  static const int kModelIDFieldNumber = 3;
  ::google::protobuf::int32 modelid() const;
  void set_modelid(::google::protobuf::int32 value);

  // bool enter = 4;
  void clear_enter();
  static const int kEnterFieldNumber = 4;
  bool enter() const;
  void set_enter(bool value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnMatchingUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 modelid_;
  bool enter_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnEndMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnEndMatch) */ {
 public:
  CMD_Client_OnEndMatch();
  virtual ~CMD_Client_OnEndMatch();

  CMD_Client_OnEndMatch(const CMD_Client_OnEndMatch& from);

  inline CMD_Client_OnEndMatch& operator=(const CMD_Client_OnEndMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnEndMatch& default_instance();

  static inline const CMD_Client_OnEndMatch* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnEndMatch*>(
               &_CMD_Client_OnEndMatch_default_instance_);
  }

  void Swap(CMD_Client_OnEndMatch* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnEndMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnEndMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnEndMatch& from);
  void MergeFrom(const CMD_Client_OnEndMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnEndMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string gameServerIP = 2;
  void clear_gameserverip();
  static const int kGameServerIPFieldNumber = 2;
  const ::std::string& gameserverip() const;
  void set_gameserverip(const ::std::string& value);
  #if LANG_CXX11
  void set_gameserverip(::std::string&& value);
  #endif
  void set_gameserverip(const char* value);
  void set_gameserverip(const char* value, size_t size);
  ::std::string* mutable_gameserverip();
  ::std::string* release_gameserverip();
  void set_allocated_gameserverip(::std::string* gameserverip);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // int32 gameServerPort = 3;
  void clear_gameserverport();
  static const int kGameServerPortFieldNumber = 3;
  ::google::protobuf::int32 gameserverport() const;
  void set_gameserverport(::google::protobuf::int32 value);

  // uint64 gameID = 4;
  void clear_gameid();
  static const int kGameIDFieldNumber = 4;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint64 gameServerTokenID = 6;
  void clear_gameservertokenid();
  static const int kGameServerTokenIDFieldNumber = 6;
  ::google::protobuf::uint64 gameservertokenid() const;
  void set_gameservertokenid(::google::protobuf::uint64 value);

  // int32 gameMode = 5;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 5;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // int32 gamePlayerSize = 7;
  void clear_gameplayersize();
  static const int kGamePlayerSizeFieldNumber = 7;
  ::google::protobuf::int32 gameplayersize() const;
  void set_gameplayersize(::google::protobuf::int32 value);

  // int32 topScore = 8;
  void clear_topscore();
  static const int kTopScoreFieldNumber = 8;
  ::google::protobuf::int32 topscore() const;
  void set_topscore(::google::protobuf::int32 value);

  // int32 victory = 9;
  void clear_victory();
  static const int kVictoryFieldNumber = 9;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // int32 defeat = 10;
  void clear_defeat();
  static const int kDefeatFieldNumber = 10;
  ::google::protobuf::int32 defeat() const;
  void set_defeat(::google::protobuf::int32 value);

  // float gameTime = 11;
  void clear_gametime();
  static const int kGameTimeFieldNumber = 11;
  float gametime() const;
  void set_gametime(float value);

  // uint64 roomID = 12;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 12;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnEndMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr gameserverip_;
  int errcode_;
  ::google::protobuf::int32 gameserverport_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 gameservertokenid_;
  ::google::protobuf::int32 gamemode_;
  ::google::protobuf::int32 gameplayersize_;
  ::google::protobuf::int32 topscore_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int32 defeat_;
  float gametime_;
  ::google::protobuf::uint64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnGameOver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnGameOver) */ {
 public:
  CMD_Client_OnGameOver();
  virtual ~CMD_Client_OnGameOver();

  CMD_Client_OnGameOver(const CMD_Client_OnGameOver& from);

  inline CMD_Client_OnGameOver& operator=(const CMD_Client_OnGameOver& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnGameOver& default_instance();

  static inline const CMD_Client_OnGameOver* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnGameOver*>(
               &_CMD_Client_OnGameOver_default_instance_);
  }

  void Swap(CMD_Client_OnGameOver* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnGameOver* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnGameOver* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnGameOver& from);
  void MergeFrom(const CMD_Client_OnGameOver& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnGameOver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gameID = 2;
  void clear_gameid();
  static const int kGameIDFieldNumber = 2;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // int32 gameMode = 3;
  void clear_gamemode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::int32 gamemode() const;
  void set_gamemode(::google::protobuf::int32 value);

  // uint64 roomID = 4;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnGameOver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gameid_;
  int errcode_;
  ::google::protobuf::int32 gamemode_;
  ::google::protobuf::uint64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMD_Client_OnCancelMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMD_Client_OnCancelMatch) */ {
 public:
  CMD_Client_OnCancelMatch();
  virtual ~CMD_Client_OnCancelMatch();

  CMD_Client_OnCancelMatch(const CMD_Client_OnCancelMatch& from);

  inline CMD_Client_OnCancelMatch& operator=(const CMD_Client_OnCancelMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_Client_OnCancelMatch& default_instance();

  static inline const CMD_Client_OnCancelMatch* internal_default_instance() {
    return reinterpret_cast<const CMD_Client_OnCancelMatch*>(
               &_CMD_Client_OnCancelMatch_default_instance_);
  }

  void Swap(CMD_Client_OnCancelMatch* other);

  // implements Message ----------------------------------------------

  inline CMD_Client_OnCancelMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD_Client_OnCancelMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD_Client_OnCancelMatch& from);
  void MergeFrom(const CMD_Client_OnCancelMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD_Client_OnCancelMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ServerError errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::ServerError errcode() const;
  void set_errcode(::ServerError value);

  // @@protoc_insertion_point(class_scope:CMD_Client_OnCancelMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_Commands_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Unkown

// -------------------------------------------------------------------

// CMD_Hello

// int32 version = 1;
inline void CMD_Hello::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 CMD_Hello::version() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.version)
  return version_;
}
inline void CMD_Hello::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.version)
}

// uint64 appID = 2;
inline void CMD_Hello::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hello::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appID)
  return appid_;
}
inline void CMD_Hello::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appID)
}

// int32 appType = 3;
inline void CMD_Hello::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_Hello::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appType)
  return apptype_;
}
inline void CMD_Hello::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appType)
}

// uint64 appGID = 4;
inline void CMD_Hello::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hello::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appGID)
  return appgid_;
}
inline void CMD_Hello::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appGID)
}

// string name = 5;
inline void CMD_Hello::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hello::name() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.name)
  return name_.GetNoArena();
}
inline void CMD_Hello::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hello.name)
}
#if LANG_CXX11
inline void CMD_Hello::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hello.name)
}
#endif
inline void CMD_Hello::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hello.name)
}
inline void CMD_Hello::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hello.name)
}
inline ::std::string* CMD_Hello::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hello.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hello::release_name() {
  // @@protoc_insertion_point(field_release:CMD_Hello.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hello::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hello.name)
}

// -------------------------------------------------------------------

// CMD_HelloCB

// int32 version = 1;
inline void CMD_HelloCB::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 CMD_HelloCB::version() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.version)
  return version_;
}
inline void CMD_HelloCB::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.version)
}

// uint64 appID = 2;
inline void CMD_HelloCB::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_HelloCB::appid() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appID)
  return appid_;
}
inline void CMD_HelloCB::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appID)
}

// int32 appType = 3;
inline void CMD_HelloCB::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_HelloCB::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appType)
  return apptype_;
}
inline void CMD_HelloCB::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appType)
}

// uint64 appGID = 4;
inline void CMD_HelloCB::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_HelloCB::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appGID)
  return appgid_;
}
inline void CMD_HelloCB::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appGID)
}

// string name = 5;
inline void CMD_HelloCB::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_HelloCB::name() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.name)
  return name_.GetNoArena();
}
inline void CMD_HelloCB::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_HelloCB.name)
}
#if LANG_CXX11
inline void CMD_HelloCB::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_HelloCB.name)
}
#endif
inline void CMD_HelloCB::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_HelloCB.name)
}
inline void CMD_HelloCB::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_HelloCB.name)
}
inline ::std::string* CMD_HelloCB::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_HelloCB.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_HelloCB::release_name() {
  // @@protoc_insertion_point(field_release:CMD_HelloCB.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_HelloCB::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_HelloCB.name)
}

// -------------------------------------------------------------------

// CMD_Heartbeat

// uint64 appID = 1;
inline void CMD_Heartbeat::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Heartbeat::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Heartbeat.appID)
  return appid_;
}
inline void CMD_Heartbeat::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Heartbeat.appID)
}

// int32 appType = 2;
inline void CMD_Heartbeat::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_Heartbeat::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Heartbeat.appType)
  return apptype_;
}
inline void CMD_Heartbeat::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Heartbeat.appType)
}

// -------------------------------------------------------------------

// CMD_HeartbeatCB

// uint64 appID = 1;
inline void CMD_HeartbeatCB::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_HeartbeatCB::appid() const {
  // @@protoc_insertion_point(field_get:CMD_HeartbeatCB.appID)
  return appid_;
}
inline void CMD_HeartbeatCB::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HeartbeatCB.appID)
}

// int32 appType = 2;
inline void CMD_HeartbeatCB::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_HeartbeatCB::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_HeartbeatCB.appType)
  return apptype_;
}
inline void CMD_HeartbeatCB::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_HeartbeatCB.appType)
}

// -------------------------------------------------------------------

// CMD_Version_Not_Match

// int32 version = 1;
inline void CMD_Version_Not_Match::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 CMD_Version_Not_Match::version() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.version)
  return version_;
}
inline void CMD_Version_Not_Match::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.version)
}

// uint64 appID = 2;
inline void CMD_Version_Not_Match::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Version_Not_Match::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.appID)
  return appid_;
}
inline void CMD_Version_Not_Match::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.appID)
}

// int32 appType = 3;
inline void CMD_Version_Not_Match::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_Version_Not_Match::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.appType)
  return apptype_;
}
inline void CMD_Version_Not_Match::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.appType)
}

// -------------------------------------------------------------------

// CMD_UpdateServerInfos

// uint64 appID = 1;
inline void CMD_UpdateServerInfos::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_UpdateServerInfos::appid() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appID)
  return appid_;
}
inline void CMD_UpdateServerInfos::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appID)
}

// int32 appType = 2;
inline void CMD_UpdateServerInfos::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_UpdateServerInfos::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appType)
  return apptype_;
}
inline void CMD_UpdateServerInfos::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appType)
}

// string internal_ip = 3;
inline void CMD_UpdateServerInfos::clear_internal_ip() {
  internal_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_UpdateServerInfos::internal_ip() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.internal_ip)
  return internal_ip_.GetNoArena();
}
inline void CMD_UpdateServerInfos::set_internal_ip(const ::std::string& value) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.internal_ip)
}
#if LANG_CXX11
inline void CMD_UpdateServerInfos::set_internal_ip(::std::string&& value) {
  
  internal_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.internal_ip)
}
#endif
inline void CMD_UpdateServerInfos::set_internal_ip(const char* value) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.internal_ip)
}
inline void CMD_UpdateServerInfos::set_internal_ip(const char* value, size_t size) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.internal_ip)
}
inline ::std::string* CMD_UpdateServerInfos::mutable_internal_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.internal_ip)
  return internal_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_UpdateServerInfos::release_internal_ip() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.internal_ip)
  
  return internal_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_UpdateServerInfos::set_allocated_internal_ip(::std::string* internal_ip) {
  if (internal_ip != NULL) {
    
  } else {
    
  }
  internal_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.internal_ip)
}

// uint32 internal_port = 4;
inline void CMD_UpdateServerInfos::clear_internal_port() {
  internal_port_ = 0u;
}
inline ::google::protobuf::uint32 CMD_UpdateServerInfos::internal_port() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.internal_port)
  return internal_port_;
}
inline void CMD_UpdateServerInfos::set_internal_port(::google::protobuf::uint32 value) {
  
  internal_port_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.internal_port)
}

// string external_ip = 5;
inline void CMD_UpdateServerInfos::clear_external_ip() {
  external_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_UpdateServerInfos::external_ip() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.external_ip)
  return external_ip_.GetNoArena();
}
inline void CMD_UpdateServerInfos::set_external_ip(const ::std::string& value) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.external_ip)
}
#if LANG_CXX11
inline void CMD_UpdateServerInfos::set_external_ip(::std::string&& value) {
  
  external_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.external_ip)
}
#endif
inline void CMD_UpdateServerInfos::set_external_ip(const char* value) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.external_ip)
}
inline void CMD_UpdateServerInfos::set_external_ip(const char* value, size_t size) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.external_ip)
}
inline ::std::string* CMD_UpdateServerInfos::mutable_external_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.external_ip)
  return external_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_UpdateServerInfos::release_external_ip() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.external_ip)
  
  return external_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_UpdateServerInfos::set_allocated_external_ip(::std::string* external_ip) {
  if (external_ip != NULL) {
    
  } else {
    
  }
  external_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.external_ip)
}

// uint32 external_port = 6;
inline void CMD_UpdateServerInfos::clear_external_port() {
  external_port_ = 0u;
}
inline ::google::protobuf::uint32 CMD_UpdateServerInfos::external_port() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.external_port)
  return external_port_;
}
inline void CMD_UpdateServerInfos::set_external_port(::google::protobuf::uint32 value) {
  
  external_port_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.external_port)
}

// float load = 7;
inline void CMD_UpdateServerInfos::clear_load() {
  load_ = 0;
}
inline float CMD_UpdateServerInfos::load() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.load)
  return load_;
}
inline void CMD_UpdateServerInfos::set_load(float value) {
  
  load_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.load)
}

// int32 playerNum = 8;
inline void CMD_UpdateServerInfos::clear_playernum() {
  playernum_ = 0;
}
inline ::google::protobuf::int32 CMD_UpdateServerInfos::playernum() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.playerNum)
  return playernum_;
}
inline void CMD_UpdateServerInfos::set_playernum(::google::protobuf::int32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.playerNum)
}

// int32 sessionNum = 9;
inline void CMD_UpdateServerInfos::clear_sessionnum() {
  sessionnum_ = 0;
}
inline ::google::protobuf::int32 CMD_UpdateServerInfos::sessionnum() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.sessionNum)
  return sessionnum_;
}
inline void CMD_UpdateServerInfos::set_sessionnum(::google::protobuf::int32 value) {
  
  sessionnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.sessionNum)
}

// uint64 appGID = 10;
inline void CMD_UpdateServerInfos::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_UpdateServerInfos::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appGID)
  return appgid_;
}
inline void CMD_UpdateServerInfos::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appGID)
}

// string name = 11;
inline void CMD_UpdateServerInfos::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_UpdateServerInfos::name() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.name)
  return name_.GetNoArena();
}
inline void CMD_UpdateServerInfos::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.name)
}
#if LANG_CXX11
inline void CMD_UpdateServerInfos::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.name)
}
#endif
inline void CMD_UpdateServerInfos::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.name)
}
inline void CMD_UpdateServerInfos::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.name)
}
inline ::std::string* CMD_UpdateServerInfos::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_UpdateServerInfos::release_name() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_UpdateServerInfos::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.name)
}

// repeated .CMD_UpdateServerInfos child_srvs = 12;
inline int CMD_UpdateServerInfos::child_srvs_size() const {
  return child_srvs_.size();
}
inline void CMD_UpdateServerInfos::clear_child_srvs() {
  child_srvs_.Clear();
}
inline const ::CMD_UpdateServerInfos& CMD_UpdateServerInfos::child_srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Get(index);
}
inline ::CMD_UpdateServerInfos* CMD_UpdateServerInfos::mutable_child_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Mutable(index);
}
inline ::CMD_UpdateServerInfos* CMD_UpdateServerInfos::add_child_srvs() {
  // @@protoc_insertion_point(field_add:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
CMD_UpdateServerInfos::mutable_child_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_UpdateServerInfos.child_srvs)
  return &child_srvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
CMD_UpdateServerInfos::child_srvs() const {
  // @@protoc_insertion_point(field_list:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_;
}

// -------------------------------------------------------------------

// CMD_QueryServerInfos

// uint64 appID = 1;
inline void CMD_QueryServerInfos::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_QueryServerInfos::appid() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appID)
  return appid_;
}
inline void CMD_QueryServerInfos::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appID)
}

// uint64 appGID = 2;
inline void CMD_QueryServerInfos::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_QueryServerInfos::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appGID)
  return appgid_;
}
inline void CMD_QueryServerInfos::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appGID)
}

// int32 appType = 3;
inline void CMD_QueryServerInfos::clear_apptype() {
  apptype_ = 0;
}
inline ::google::protobuf::int32 CMD_QueryServerInfos::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appType)
  return apptype_;
}
inline void CMD_QueryServerInfos::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appType)
}

// int32 maxNum = 4;
inline void CMD_QueryServerInfos::clear_maxnum() {
  maxnum_ = 0;
}
inline ::google::protobuf::int32 CMD_QueryServerInfos::maxnum() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.maxNum)
  return maxnum_;
}
inline void CMD_QueryServerInfos::set_maxnum(::google::protobuf::int32 value) {
  
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.maxNum)
}

// -------------------------------------------------------------------

// CMD_QueryServerInfosCB

// repeated .CMD_UpdateServerInfos srvs = 1;
inline int CMD_QueryServerInfosCB::srvs_size() const {
  return srvs_.size();
}
inline void CMD_QueryServerInfosCB::clear_srvs() {
  srvs_.Clear();
}
inline const ::CMD_UpdateServerInfos& CMD_QueryServerInfosCB::srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfosCB.srvs)
  return srvs_.Get(index);
}
inline ::CMD_UpdateServerInfos* CMD_QueryServerInfosCB::mutable_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_QueryServerInfosCB.srvs)
  return srvs_.Mutable(index);
}
inline ::CMD_UpdateServerInfos* CMD_QueryServerInfosCB::add_srvs() {
  // @@protoc_insertion_point(field_add:CMD_QueryServerInfosCB.srvs)
  return srvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
CMD_QueryServerInfosCB::mutable_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_QueryServerInfosCB.srvs)
  return &srvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
CMD_QueryServerInfosCB::srvs() const {
  // @@protoc_insertion_point(field_list:CMD_QueryServerInfosCB.srvs)
  return srvs_;
}

// -------------------------------------------------------------------

// CMD_Ping

// uint64 time = 1;
inline void CMD_Ping::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Ping::time() const {
  // @@protoc_insertion_point(field_get:CMD_Ping.time)
  return time_;
}
inline void CMD_Ping::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMD_Ping.time)
}

// -------------------------------------------------------------------

// CMD_Pong

// uint64 time = 1;
inline void CMD_Pong::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Pong::time() const {
  // @@protoc_insertion_point(field_get:CMD_Pong.time)
  return time_;
}
inline void CMD_Pong::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMD_Pong.time)
}

// -------------------------------------------------------------------

// CMD_ForwardPacket

// uint64 requestorID = 1;
inline void CMD_ForwardPacket::clear_requestorid() {
  requestorid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_ForwardPacket::requestorid() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.requestorID)
  return requestorid_;
}
inline void CMD_ForwardPacket::set_requestorid(::google::protobuf::uint64 value) {
  
  requestorid_ = value;
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.requestorID)
}

// bytes datas = 2;
inline void CMD_ForwardPacket::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_ForwardPacket::datas() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.datas)
  return datas_.GetNoArena();
}
inline void CMD_ForwardPacket::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.datas)
}
#if LANG_CXX11
inline void CMD_ForwardPacket::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ForwardPacket.datas)
}
#endif
inline void CMD_ForwardPacket::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ForwardPacket.datas)
}
inline void CMD_ForwardPacket::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ForwardPacket.datas)
}
inline ::std::string* CMD_ForwardPacket::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ForwardPacket.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_ForwardPacket::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_ForwardPacket.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_ForwardPacket::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_ForwardPacket.datas)
}

// int32 msgcmd = 3;
inline void CMD_ForwardPacket::clear_msgcmd() {
  msgcmd_ = 0;
}
inline ::google::protobuf::int32 CMD_ForwardPacket::msgcmd() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.msgcmd)
  return msgcmd_;
}
inline void CMD_ForwardPacket::set_msgcmd(::google::protobuf::int32 value) {
  
  msgcmd_ = value;
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.msgcmd)
}

// -------------------------------------------------------------------

// CMD_RemoteDisconnected

// -------------------------------------------------------------------

// CMD_Directory_ListServers

// -------------------------------------------------------------------

// CMD_Login_Signup

// string commitAccountName = 1;
inline void CMD_Login_Signup::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signup::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Login_Signup::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Login_Signup::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.commitAccountName)
}
#endif
inline void CMD_Login_Signup::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.commitAccountName)
}
inline void CMD_Login_Signup::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.commitAccountName)
}
inline ::std::string* CMD_Login_Signup::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signup::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signup::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.commitAccountName)
}

// string password = 2;
inline void CMD_Login_Signup::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signup::password() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.password)
  return password_.GetNoArena();
}
inline void CMD_Login_Signup::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.password)
}
#if LANG_CXX11
inline void CMD_Login_Signup::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.password)
}
#endif
inline void CMD_Login_Signup::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.password)
}
inline void CMD_Login_Signup::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.password)
}
inline ::std::string* CMD_Login_Signup::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signup::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signup::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.password)
}

// bytes datas = 3;
inline void CMD_Login_Signup::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signup::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.datas)
  return datas_.GetNoArena();
}
inline void CMD_Login_Signup::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.datas)
}
#if LANG_CXX11
inline void CMD_Login_Signup::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.datas)
}
#endif
inline void CMD_Login_Signup::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.datas)
}
inline void CMD_Login_Signup::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.datas)
}
inline ::std::string* CMD_Login_Signup::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signup::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signup::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.datas)
}

// -------------------------------------------------------------------

// CMD_Login_OnSignupCB

// .ServerError errcode = 1;
inline void CMD_Login_OnSignupCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Login_OnSignupCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Login_OnSignupCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.errcode)
}

// string commitAccountName = 2;
inline void CMD_Login_OnSignupCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSignupCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Login_OnSignupCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Login_OnSignupCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.commitAccountName)
}
#endif
inline void CMD_Login_OnSignupCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.commitAccountName)
}
inline void CMD_Login_OnSignupCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.commitAccountName)
}
inline ::std::string* CMD_Login_OnSignupCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSignupCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSignupCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.commitAccountName)
}

// string realAccountName = 3;
inline void CMD_Login_OnSignupCB::clear_realaccountname() {
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSignupCB::realaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.realAccountName)
  return realaccountname_.GetNoArena();
}
inline void CMD_Login_OnSignupCB::set_realaccountname(const ::std::string& value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.realAccountName)
}
#if LANG_CXX11
inline void CMD_Login_OnSignupCB::set_realaccountname(::std::string&& value) {
  
  realaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.realAccountName)
}
#endif
inline void CMD_Login_OnSignupCB::set_realaccountname(const char* value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.realAccountName)
}
inline void CMD_Login_OnSignupCB::set_realaccountname(const char* value, size_t size) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.realAccountName)
}
inline ::std::string* CMD_Login_OnSignupCB::mutable_realaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.realAccountName)
  return realaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSignupCB::release_realaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.realAccountName)
  
  return realaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSignupCB::set_allocated_realaccountname(::std::string* realaccountname) {
  if (realaccountname != NULL) {
    
  } else {
    
  }
  realaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.realAccountName)
}

// bytes datas = 4;
inline void CMD_Login_OnSignupCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSignupCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Login_OnSignupCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.datas)
}
#if LANG_CXX11
inline void CMD_Login_OnSignupCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.datas)
}
#endif
inline void CMD_Login_OnSignupCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.datas)
}
inline void CMD_Login_OnSignupCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.datas)
}
inline ::std::string* CMD_Login_OnSignupCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSignupCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSignupCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.datas)
}

// -------------------------------------------------------------------

// CMD_Login_Signin

// string commitAccountName = 1;
inline void CMD_Login_Signin::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signin::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Login_Signin::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Login_Signin::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.commitAccountName)
}
#endif
inline void CMD_Login_Signin::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.commitAccountName)
}
inline void CMD_Login_Signin::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.commitAccountName)
}
inline ::std::string* CMD_Login_Signin::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signin::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signin::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.commitAccountName)
}

// string password = 2;
inline void CMD_Login_Signin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signin::password() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.password)
  return password_.GetNoArena();
}
inline void CMD_Login_Signin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.password)
}
#if LANG_CXX11
inline void CMD_Login_Signin::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.password)
}
#endif
inline void CMD_Login_Signin::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.password)
}
inline void CMD_Login_Signin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.password)
}
inline ::std::string* CMD_Login_Signin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signin::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.password)
}

// bytes datas = 3;
inline void CMD_Login_Signin::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_Signin::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.datas)
  return datas_.GetNoArena();
}
inline void CMD_Login_Signin::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.datas)
}
#if LANG_CXX11
inline void CMD_Login_Signin::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.datas)
}
#endif
inline void CMD_Login_Signin::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.datas)
}
inline void CMD_Login_Signin::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.datas)
}
inline ::std::string* CMD_Login_Signin::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_Signin::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_Signin::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.datas)
}

// -------------------------------------------------------------------

// CMD_Login_OnSigninCB

// .ServerError errcode = 1;
inline void CMD_Login_OnSigninCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Login_OnSigninCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Login_OnSigninCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.errcode)
}

// string commitAccountName = 2;
inline void CMD_Login_OnSigninCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSigninCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Login_OnSigninCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Login_OnSigninCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.commitAccountName)
}
#endif
inline void CMD_Login_OnSigninCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.commitAccountName)
}
inline void CMD_Login_OnSigninCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.commitAccountName)
}
inline ::std::string* CMD_Login_OnSigninCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSigninCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSigninCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.commitAccountName)
}

// string realAccountName = 3;
inline void CMD_Login_OnSigninCB::clear_realaccountname() {
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSigninCB::realaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.realAccountName)
  return realaccountname_.GetNoArena();
}
inline void CMD_Login_OnSigninCB::set_realaccountname(const ::std::string& value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.realAccountName)
}
#if LANG_CXX11
inline void CMD_Login_OnSigninCB::set_realaccountname(::std::string&& value) {
  
  realaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.realAccountName)
}
#endif
inline void CMD_Login_OnSigninCB::set_realaccountname(const char* value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.realAccountName)
}
inline void CMD_Login_OnSigninCB::set_realaccountname(const char* value, size_t size) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.realAccountName)
}
inline ::std::string* CMD_Login_OnSigninCB::mutable_realaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.realAccountName)
  return realaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSigninCB::release_realaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.realAccountName)
  
  return realaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSigninCB::set_allocated_realaccountname(::std::string* realaccountname) {
  if (realaccountname != NULL) {
    
  } else {
    
  }
  realaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.realAccountName)
}

// bytes datas = 4;
inline void CMD_Login_OnSigninCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnSigninCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Login_OnSigninCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.datas)
}
#if LANG_CXX11
inline void CMD_Login_OnSigninCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.datas)
}
#endif
inline void CMD_Login_OnSigninCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.datas)
}
inline void CMD_Login_OnSigninCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.datas)
}
inline ::std::string* CMD_Login_OnSigninCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnSigninCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnSigninCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.datas)
}

// uint64 foundObjectID = 5;
inline void CMD_Login_OnSigninCB::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Login_OnSigninCB::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.foundObjectID)
  return foundobjectid_;
}
inline void CMD_Login_OnSigninCB::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.foundObjectID)
}

// uint64 foundAppID = 6;
inline void CMD_Login_OnSigninCB::clear_foundappid() {
  foundappid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Login_OnSigninCB::foundappid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.foundAppID)
  return foundappid_;
}
inline void CMD_Login_OnSigninCB::set_foundappid(::google::protobuf::uint64 value) {
  
  foundappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.foundAppID)
}

// -------------------------------------------------------------------

// CMD_Login_OnRequestAllocClientCB

// string ip = 1;
inline void CMD_Login_OnRequestAllocClientCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnRequestAllocClientCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.ip)
  return ip_.GetNoArena();
}
inline void CMD_Login_OnRequestAllocClientCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.ip)
}
#if LANG_CXX11
inline void CMD_Login_OnRequestAllocClientCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnRequestAllocClientCB.ip)
}
#endif
inline void CMD_Login_OnRequestAllocClientCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnRequestAllocClientCB.ip)
}
inline void CMD_Login_OnRequestAllocClientCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnRequestAllocClientCB.ip)
}
inline ::std::string* CMD_Login_OnRequestAllocClientCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnRequestAllocClientCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnRequestAllocClientCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnRequestAllocClientCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnRequestAllocClientCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnRequestAllocClientCB.ip)
}

// int32 port = 2;
inline void CMD_Login_OnRequestAllocClientCB::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Login_OnRequestAllocClientCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.port)
  return port_;
}
inline void CMD_Login_OnRequestAllocClientCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.port)
}

// string commitAccountName = 3;
inline void CMD_Login_OnRequestAllocClientCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Login_OnRequestAllocClientCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
#endif
inline void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
inline void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
inline ::std::string* CMD_Login_OnRequestAllocClientCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Login_OnRequestAllocClientCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Login_OnRequestAllocClientCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}

// .ServerError errcode = 4;
inline void CMD_Login_OnRequestAllocClientCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Login_OnRequestAllocClientCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Login_OnRequestAllocClientCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.errcode)
}

// uint64 tokenID = 5;
inline void CMD_Login_OnRequestAllocClientCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Login_OnRequestAllocClientCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.tokenID)
  return tokenid_;
}
inline void CMD_Login_OnRequestAllocClientCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.tokenID)
}

// -------------------------------------------------------------------

// CMD_Dbmgr_WriteAccount

// uint64 appID = 1;
inline void CMD_Dbmgr_WriteAccount::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_WriteAccount::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.appID)
  return appid_;
}
inline void CMD_Dbmgr_WriteAccount::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.appID)
}

// string commitAccountName = 2;
inline void CMD_Dbmgr_WriteAccount::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_WriteAccount::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Dbmgr_WriteAccount::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Dbmgr_WriteAccount::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.commitAccountName)
}
#endif
inline void CMD_Dbmgr_WriteAccount::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.commitAccountName)
}
inline void CMD_Dbmgr_WriteAccount::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.commitAccountName)
}
inline ::std::string* CMD_Dbmgr_WriteAccount::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_WriteAccount::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_WriteAccount::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.commitAccountName)
}

// string password = 3;
inline void CMD_Dbmgr_WriteAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_WriteAccount::password() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.password)
  return password_.GetNoArena();
}
inline void CMD_Dbmgr_WriteAccount::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.password)
}
#if LANG_CXX11
inline void CMD_Dbmgr_WriteAccount::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.password)
}
#endif
inline void CMD_Dbmgr_WriteAccount::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.password)
}
inline void CMD_Dbmgr_WriteAccount::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.password)
}
inline ::std::string* CMD_Dbmgr_WriteAccount::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_WriteAccount::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_WriteAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.password)
}

// bytes datas = 4;
inline void CMD_Dbmgr_WriteAccount::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_WriteAccount::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.datas)
  return datas_.GetNoArena();
}
inline void CMD_Dbmgr_WriteAccount::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.datas)
}
#if LANG_CXX11
inline void CMD_Dbmgr_WriteAccount::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.datas)
}
#endif
inline void CMD_Dbmgr_WriteAccount::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.datas)
}
inline void CMD_Dbmgr_WriteAccount::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.datas)
}
inline ::std::string* CMD_Dbmgr_WriteAccount::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_WriteAccount::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_WriteAccount::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.datas)
}

// string playerName = 5;
inline void CMD_Dbmgr_WriteAccount::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_WriteAccount::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.playerName)
  return playername_.GetNoArena();
}
inline void CMD_Dbmgr_WriteAccount::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.playerName)
}
#if LANG_CXX11
inline void CMD_Dbmgr_WriteAccount::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.playerName)
}
#endif
inline void CMD_Dbmgr_WriteAccount::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.playerName)
}
inline void CMD_Dbmgr_WriteAccount::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.playerName)
}
inline ::std::string* CMD_Dbmgr_WriteAccount::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_WriteAccount::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_WriteAccount::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.playerName)
}

// int32 modelID = 6;
inline void CMD_Dbmgr_WriteAccount::clear_modelid() {
  modelid_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WriteAccount::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.modelID)
  return modelid_;
}
inline void CMD_Dbmgr_WriteAccount::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.modelID)
}

// int32 exp = 7;
inline void CMD_Dbmgr_WriteAccount::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WriteAccount::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.exp)
  return exp_;
}
inline void CMD_Dbmgr_WriteAccount::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.exp)
}

// int32 gold = 8;
inline void CMD_Dbmgr_WriteAccount::clear_gold() {
  gold_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WriteAccount::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.gold)
  return gold_;
}
inline void CMD_Dbmgr_WriteAccount::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.gold)
}

// -------------------------------------------------------------------

// CMD_Dbmgr_QueryAccount

// string commitAccountName = 1;
inline void CMD_Dbmgr_QueryAccount::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_QueryAccount::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Dbmgr_QueryAccount::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Dbmgr_QueryAccount::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.commitAccountName)
}
#endif
inline void CMD_Dbmgr_QueryAccount::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.commitAccountName)
}
inline void CMD_Dbmgr_QueryAccount::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.commitAccountName)
}
inline ::std::string* CMD_Dbmgr_QueryAccount::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_QueryAccount::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_QueryAccount::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.commitAccountName)
}

// string password = 2;
inline void CMD_Dbmgr_QueryAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_QueryAccount::password() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.password)
  return password_.GetNoArena();
}
inline void CMD_Dbmgr_QueryAccount::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.password)
}
#if LANG_CXX11
inline void CMD_Dbmgr_QueryAccount::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.password)
}
#endif
inline void CMD_Dbmgr_QueryAccount::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.password)
}
inline void CMD_Dbmgr_QueryAccount::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.password)
}
inline ::std::string* CMD_Dbmgr_QueryAccount::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_QueryAccount::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_QueryAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.password)
}

// uint64 queryAppID = 3;
inline void CMD_Dbmgr_QueryAccount::clear_queryappid() {
  queryappid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_QueryAccount::queryappid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.queryAppID)
  return queryappid_;
}
inline void CMD_Dbmgr_QueryAccount::set_queryappid(::google::protobuf::uint64 value) {
  
  queryappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.queryAppID)
}

// int32 queryType = 4;
inline void CMD_Dbmgr_QueryAccount::clear_querytype() {
  querytype_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_QueryAccount::querytype() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.queryType)
  return querytype_;
}
inline void CMD_Dbmgr_QueryAccount::set_querytype(::google::protobuf::int32 value) {
  
  querytype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.queryType)
}

// string datas = 5;
inline void CMD_Dbmgr_QueryAccount::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_QueryAccount::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.datas)
  return datas_.GetNoArena();
}
inline void CMD_Dbmgr_QueryAccount::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.datas)
}
#if LANG_CXX11
inline void CMD_Dbmgr_QueryAccount::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.datas)
}
#endif
inline void CMD_Dbmgr_QueryAccount::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.datas)
}
inline void CMD_Dbmgr_QueryAccount::set_datas(const char* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.datas)
}
inline ::std::string* CMD_Dbmgr_QueryAccount::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_QueryAccount::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_QueryAccount::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.datas)
}

// uint64 accountID = 6;
inline void CMD_Dbmgr_QueryAccount::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_QueryAccount::accountid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.accountID)
  return accountid_;
}
inline void CMD_Dbmgr_QueryAccount::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.accountID)
}

// -------------------------------------------------------------------

// CMD_Dbmgr_UpdateAccountData

// string commitAccountName = 1;
inline void CMD_Dbmgr_UpdateAccountData::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_UpdateAccountData::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
#endif
inline void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
inline void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
inline ::std::string* CMD_Dbmgr_UpdateAccountData::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_UpdateAccountData::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_UpdateAccountData::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}

// string playerName = 2;
inline void CMD_Dbmgr_UpdateAccountData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Dbmgr_UpdateAccountData::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.playerName)
  return playername_.GetNoArena();
}
inline void CMD_Dbmgr_UpdateAccountData::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.playerName)
}
#if LANG_CXX11
inline void CMD_Dbmgr_UpdateAccountData::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_UpdateAccountData.playerName)
}
#endif
inline void CMD_Dbmgr_UpdateAccountData::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_UpdateAccountData.playerName)
}
inline void CMD_Dbmgr_UpdateAccountData::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_UpdateAccountData.playerName)
}
inline ::std::string* CMD_Dbmgr_UpdateAccountData::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_UpdateAccountData.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Dbmgr_UpdateAccountData::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_UpdateAccountData.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Dbmgr_UpdateAccountData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_UpdateAccountData.playerName)
}

// int32 modelID = 3;
inline void CMD_Dbmgr_UpdateAccountData::clear_modelid() {
  modelid_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.modelID)
  return modelid_;
}
inline void CMD_Dbmgr_UpdateAccountData::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.modelID)
}

// int32 exp = 4;
inline void CMD_Dbmgr_UpdateAccountData::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.exp)
  return exp_;
}
inline void CMD_Dbmgr_UpdateAccountData::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.exp)
}

// int32 gold = 5;
inline void CMD_Dbmgr_UpdateAccountData::clear_gold() {
  gold_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.gold)
  return gold_;
}
inline void CMD_Dbmgr_UpdateAccountData::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.gold)
}

// -------------------------------------------------------------------

// CMD_Dbmgr_WritePlayerGameData

// uint64 playerID = 1;
inline void CMD_Dbmgr_WritePlayerGameData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_WritePlayerGameData::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.playerID)
  return playerid_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.playerID)
}

// int32 score = 2;
inline void CMD_Dbmgr_WritePlayerGameData::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::score() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.score)
  return score_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.score)
}

// int32 topscore = 3;
inline void CMD_Dbmgr_WritePlayerGameData::clear_topscore() {
  topscore_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.topscore)
  return topscore_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.topscore)
}

// uint64 gameID = 4;
inline void CMD_Dbmgr_WritePlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_WritePlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.gameID)
  return gameid_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.gameID)
}

// uint32 gameMode = 5;
inline void CMD_Dbmgr_WritePlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Dbmgr_WritePlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.gameMode)
  return gamemode_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.gameMode)
}

// int32 victory = 6;
inline void CMD_Dbmgr_WritePlayerGameData::clear_victory() {
  victory_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.victory)
  return victory_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.victory)
}

// int32 defeat = 7;
inline void CMD_Dbmgr_WritePlayerGameData::clear_defeat() {
  defeat_ = 0;
}
inline ::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.defeat)
  return defeat_;
}
inline void CMD_Dbmgr_WritePlayerGameData::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.defeat)
}

// -------------------------------------------------------------------

// CMD_Dbmgr_QueryPlayerGameData

// uint64 playerID = 1;
inline void CMD_Dbmgr_QueryPlayerGameData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_QueryPlayerGameData::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.playerID)
  return playerid_;
}
inline void CMD_Dbmgr_QueryPlayerGameData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.playerID)
}

// uint64 gameID = 2;
inline void CMD_Dbmgr_QueryPlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Dbmgr_QueryPlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.gameID)
  return gameid_;
}
inline void CMD_Dbmgr_QueryPlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.gameID)
}

// uint32 gameMode = 3;
inline void CMD_Dbmgr_QueryPlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Dbmgr_QueryPlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.gameMode)
  return gamemode_;
}
inline void CMD_Dbmgr_QueryPlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.gameMode)
}

// -------------------------------------------------------------------

// CMD_Halls_PlayerGameData

// int32 exp = 1;
inline void CMD_Halls_PlayerGameData::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_PlayerGameData::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.exp)
  return exp_;
}
inline void CMD_Halls_PlayerGameData::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.exp)
}

// int32 score = 2;
inline void CMD_Halls_PlayerGameData::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_PlayerGameData::score() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.score)
  return score_;
}
inline void CMD_Halls_PlayerGameData::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.score)
}

// uint64 id = 3;
inline void CMD_Halls_PlayerGameData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_PlayerGameData::id() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.id)
  return id_;
}
inline void CMD_Halls_PlayerGameData::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.id)
}

// bool victory = 4;
inline void CMD_Halls_PlayerGameData::clear_victory() {
  victory_ = false;
}
inline bool CMD_Halls_PlayerGameData::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.victory)
  return victory_;
}
inline void CMD_Halls_PlayerGameData::set_victory(bool value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.victory)
}

// -------------------------------------------------------------------

// CMD_Halls_Login

// uint64 tokenID = 1;
inline void CMD_Halls_Login::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_Login::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.tokenID)
  return tokenid_;
}
inline void CMD_Halls_Login::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.tokenID)
}

// string commitAccountName = 2;
inline void CMD_Halls_Login::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_Login::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Halls_Login::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Halls_Login::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_Login.commitAccountName)
}
#endif
inline void CMD_Halls_Login::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_Login.commitAccountName)
}
inline void CMD_Halls_Login::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_Login.commitAccountName)
}
inline ::std::string* CMD_Halls_Login::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_Login.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_Login::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_Login.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_Login::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_Login.commitAccountName)
}

// uint64 hallsID = 3;
inline void CMD_Halls_Login::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_Login::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.hallsID)
  return hallsid_;
}
inline void CMD_Halls_Login::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.hallsID)
}

// uint64 playerID = 4;
inline void CMD_Halls_Login::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_Login::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.playerID)
  return playerid_;
}
inline void CMD_Halls_Login::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.playerID)
}

// -------------------------------------------------------------------

// CMD_Halls_RequestAllocClient

// string commitAccountName = 1;
inline void CMD_Halls_RequestAllocClient::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_RequestAllocClient::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Halls_RequestAllocClient::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Halls_RequestAllocClient::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.commitAccountName)
}
#endif
inline void CMD_Halls_RequestAllocClient::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.commitAccountName)
}
inline void CMD_Halls_RequestAllocClient::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.commitAccountName)
}
inline ::std::string* CMD_Halls_RequestAllocClient::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_RequestAllocClient::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_RequestAllocClient::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.commitAccountName)
}

// string password = 2;
inline void CMD_Halls_RequestAllocClient::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_RequestAllocClient::password() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.password)
  return password_.GetNoArena();
}
inline void CMD_Halls_RequestAllocClient::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.password)
}
#if LANG_CXX11
inline void CMD_Halls_RequestAllocClient::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.password)
}
#endif
inline void CMD_Halls_RequestAllocClient::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.password)
}
inline void CMD_Halls_RequestAllocClient::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.password)
}
inline ::std::string* CMD_Halls_RequestAllocClient::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_RequestAllocClient::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_RequestAllocClient::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.password)
}

// bytes datas = 3;
inline void CMD_Halls_RequestAllocClient::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_RequestAllocClient::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.datas)
  return datas_.GetNoArena();
}
inline void CMD_Halls_RequestAllocClient::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.datas)
}
#if LANG_CXX11
inline void CMD_Halls_RequestAllocClient::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.datas)
}
#endif
inline void CMD_Halls_RequestAllocClient::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.datas)
}
inline void CMD_Halls_RequestAllocClient::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.datas)
}
inline ::std::string* CMD_Halls_RequestAllocClient::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_RequestAllocClient::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_RequestAllocClient::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.datas)
}

// uint64 foundObjectID = 4;
inline void CMD_Halls_RequestAllocClient::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_RequestAllocClient::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.foundObjectID)
  return foundobjectid_;
}
inline void CMD_Halls_RequestAllocClient::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.foundObjectID)
}

// uint64 loginSessionID = 5;
inline void CMD_Halls_RequestAllocClient::clear_loginsessionid() {
  loginsessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_RequestAllocClient::loginsessionid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.loginSessionID)
  return loginsessionid_;
}
inline void CMD_Halls_RequestAllocClient::set_loginsessionid(::google::protobuf::uint64 value) {
  
  loginsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.loginSessionID)
}

// -------------------------------------------------------------------

// CMD_Halls_StartMatch

// uint64 gameID = 1;
inline void CMD_Halls_StartMatch::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_StartMatch::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_StartMatch.gameID)
  return gameid_;
}
inline void CMD_Halls_StartMatch::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_StartMatch.gameID)
}

// int32 gameMode = 2;
inline void CMD_Halls_StartMatch::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_StartMatch::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_StartMatch.gameMode)
  return gamemode_;
}
inline void CMD_Halls_StartMatch::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_StartMatch.gameMode)
}

// -------------------------------------------------------------------

// CMD_Halls_CancelMatch

// -------------------------------------------------------------------

// CMD_Halls_OnRequestCreateRoomCB

// uint64 roomID = 1;
inline void CMD_Halls_OnRequestCreateRoomCB::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnRequestCreateRoomCB::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.roomID)
  return roomid_;
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.roomID)
}

// string ip = 2;
inline void CMD_Halls_OnRequestCreateRoomCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_OnRequestCreateRoomCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.ip)
  return ip_.GetNoArena();
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.ip)
}
#if LANG_CXX11
inline void CMD_Halls_OnRequestCreateRoomCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnRequestCreateRoomCB.ip)
}
#endif
inline void CMD_Halls_OnRequestCreateRoomCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnRequestCreateRoomCB.ip)
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnRequestCreateRoomCB.ip)
}
inline ::std::string* CMD_Halls_OnRequestCreateRoomCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnRequestCreateRoomCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_OnRequestCreateRoomCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnRequestCreateRoomCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnRequestCreateRoomCB.ip)
}

// int32 port = 3;
inline void CMD_Halls_OnRequestCreateRoomCB::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnRequestCreateRoomCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.port)
  return port_;
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.port)
}

// uint64 tokenID = 4;
inline void CMD_Halls_OnRequestCreateRoomCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnRequestCreateRoomCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.tokenID)
  return tokenid_;
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.tokenID)
}

// .ServerError errcode = 5;
inline void CMD_Halls_OnRequestCreateRoomCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Halls_OnRequestCreateRoomCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Halls_OnRequestCreateRoomCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.errcode)
}

// -------------------------------------------------------------------

// CMD_Halls_OnRoomSrvGameOverReport

// uint64 roomID = 1;
inline void CMD_Halls_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
inline void CMD_Halls_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 2;
inline void CMD_Halls_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Halls_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Halls_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 3;
inline int CMD_Halls_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
inline void CMD_Halls_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
inline const ::CMD_Halls_PlayerGameData& CMD_Halls_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Halls_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Halls_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Halls_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Halls_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

// -------------------------------------------------------------------

// CMD_Halls_OnQueryAccountCB

// string commitAccountName = 1;
inline void CMD_Halls_OnQueryAccountCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_OnQueryAccountCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Halls_OnQueryAccountCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
#endif
inline void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
inline void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_OnQueryAccountCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.commitAccountName)
}

// bytes datas = 2;
inline void CMD_Halls_OnQueryAccountCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_OnQueryAccountCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Halls_OnQueryAccountCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.datas)
}
#if LANG_CXX11
inline void CMD_Halls_OnQueryAccountCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.datas)
}
#endif
inline void CMD_Halls_OnQueryAccountCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.datas)
}
inline void CMD_Halls_OnQueryAccountCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.datas)
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_OnQueryAccountCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.datas)
}

// uint64 foundObjectID = 3;
inline void CMD_Halls_OnQueryAccountCB::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnQueryAccountCB::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.foundObjectID)
  return foundobjectid_;
}
inline void CMD_Halls_OnQueryAccountCB::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.foundObjectID)
}

// string playerName = 4;
inline void CMD_Halls_OnQueryAccountCB::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Halls_OnQueryAccountCB::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.playerName)
  return playername_.GetNoArena();
}
inline void CMD_Halls_OnQueryAccountCB::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.playerName)
}
#if LANG_CXX11
inline void CMD_Halls_OnQueryAccountCB::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.playerName)
}
#endif
inline void CMD_Halls_OnQueryAccountCB::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.playerName)
}
inline void CMD_Halls_OnQueryAccountCB::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.playerName)
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Halls_OnQueryAccountCB::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Halls_OnQueryAccountCB::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.playerName)
}

// int32 modelID = 5;
inline void CMD_Halls_OnQueryAccountCB::clear_modelid() {
  modelid_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.modelID)
  return modelid_;
}
inline void CMD_Halls_OnQueryAccountCB::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.modelID)
}

// int32 exp = 6;
inline void CMD_Halls_OnQueryAccountCB::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.exp)
  return exp_;
}
inline void CMD_Halls_OnQueryAccountCB::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.exp)
}

// int32 gold = 7;
inline void CMD_Halls_OnQueryAccountCB::clear_gold() {
  gold_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.gold)
  return gold_;
}
inline void CMD_Halls_OnQueryAccountCB::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.gold)
}

// .ServerError errcode = 8;
inline void CMD_Halls_OnQueryAccountCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Halls_OnQueryAccountCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Halls_OnQueryAccountCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.errcode)
}

// int32 queryType = 9;
inline void CMD_Halls_OnQueryAccountCB::clear_querytype() {
  querytype_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::querytype() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.queryType)
  return querytype_;
}
inline void CMD_Halls_OnQueryAccountCB::set_querytype(::google::protobuf::int32 value) {
  
  querytype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.queryType)
}

// -------------------------------------------------------------------

// CMD_Halls_OnQueryPlayerGameDataCB

// uint64 playerID = 1;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnQueryPlayerGameDataCB::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.playerID)
  return playerid_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.playerID)
}

// int32 score = 2;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::score() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.score)
  return score_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.score)
}

// int32 topscore = 3;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_topscore() {
  topscore_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.topscore)
  return topscore_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.topscore)
}

// uint64 gameID = 4;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_OnQueryPlayerGameDataCB::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.gameID)
  return gameid_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.gameID)
}

// uint32 gameMode = 5;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_gamemode() {
  gamemode_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Halls_OnQueryPlayerGameDataCB::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.gameMode)
  return gamemode_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.gameMode)
}

// int32 victory = 6;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_victory() {
  victory_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.victory)
  return victory_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.victory)
}

// int32 defeat = 7;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_defeat() {
  defeat_ = 0;
}
inline ::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.defeat)
  return defeat_;
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.defeat)
}

// .ServerError errcode = 8;
inline void CMD_Halls_OnQueryPlayerGameDataCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Halls_OnQueryPlayerGameDataCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Halls_OnQueryPlayerGameDataCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.errcode)
}

// -------------------------------------------------------------------

// CMD_Halls_QueryPlayerGameData

// uint64 gameID = 1;
inline void CMD_Halls_QueryPlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Halls_QueryPlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_QueryPlayerGameData.gameID)
  return gameid_;
}
inline void CMD_Halls_QueryPlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_QueryPlayerGameData.gameID)
}

// uint32 gameMode = 2;
inline void CMD_Halls_QueryPlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Halls_QueryPlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_QueryPlayerGameData.gameMode)
  return gamemode_;
}
inline void CMD_Halls_QueryPlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_QueryPlayerGameData.gameMode)
}

// -------------------------------------------------------------------

// CMD_Halls_ListGames

// uint32 page = 1;
inline void CMD_Halls_ListGames::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Halls_ListGames::page() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.page)
  return page_;
}
inline void CMD_Halls_ListGames::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.page)
}

// uint32 type = 2;
inline void CMD_Halls_ListGames::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Halls_ListGames::type() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.type)
  return type_;
}
inline void CMD_Halls_ListGames::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.type)
}

// uint32 maxNum = 3;
inline void CMD_Halls_ListGames::clear_maxnum() {
  maxnum_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Halls_ListGames::maxnum() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.maxNum)
  return maxnum_;
}
inline void CMD_Halls_ListGames::set_maxnum(::google::protobuf::uint32 value) {
  
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.maxNum)
}

// -------------------------------------------------------------------

// CMD_Hallsmgr_RequestAllocClient

// string commitAccountName = 1;
inline void CMD_Hallsmgr_RequestAllocClient::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hallsmgr_RequestAllocClient::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
#endif
inline void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
inline void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hallsmgr_RequestAllocClient::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}

// string password = 2;
inline void CMD_Hallsmgr_RequestAllocClient::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hallsmgr_RequestAllocClient::password() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.password)
  return password_.GetNoArena();
}
inline void CMD_Hallsmgr_RequestAllocClient::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.password)
}
#if LANG_CXX11
inline void CMD_Hallsmgr_RequestAllocClient::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.password)
}
#endif
inline void CMD_Hallsmgr_RequestAllocClient::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.password)
}
inline void CMD_Hallsmgr_RequestAllocClient::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.password)
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hallsmgr_RequestAllocClient::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.password)
}

// bytes datas = 3;
inline void CMD_Hallsmgr_RequestAllocClient::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hallsmgr_RequestAllocClient::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.datas)
  return datas_.GetNoArena();
}
inline void CMD_Hallsmgr_RequestAllocClient::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.datas)
}
#if LANG_CXX11
inline void CMD_Hallsmgr_RequestAllocClient::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.datas)
}
#endif
inline void CMD_Hallsmgr_RequestAllocClient::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.datas)
}
inline void CMD_Hallsmgr_RequestAllocClient::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.datas)
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hallsmgr_RequestAllocClient::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hallsmgr_RequestAllocClient::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.datas)
}

// uint64 foundObjectID = 4;
inline void CMD_Hallsmgr_RequestAllocClient::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hallsmgr_RequestAllocClient::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.foundObjectID)
  return foundobjectid_;
}
inline void CMD_Hallsmgr_RequestAllocClient::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.foundObjectID)
}

// uint64 foundAppID = 5;
inline void CMD_Hallsmgr_RequestAllocClient::clear_foundappid() {
  foundappid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hallsmgr_RequestAllocClient::foundappid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.foundAppID)
  return foundappid_;
}
inline void CMD_Hallsmgr_RequestAllocClient::set_foundappid(::google::protobuf::uint64 value) {
  
  foundappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.foundAppID)
}

// -------------------------------------------------------------------

// CMD_Hallsmgr_OnRequestAllocClientCB

// string ip = 1;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hallsmgr_OnRequestAllocClientCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  return ip_.GetNoArena();
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
#if LANG_CXX11
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
#endif
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
inline ::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}

// int32 port = 2;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Hallsmgr_OnRequestAllocClientCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.port)
  return port_;
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.port)
}

// string commitAccountName = 3;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Hallsmgr_OnRequestAllocClientCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
#if LANG_CXX11
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
#endif
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
inline ::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}

// .ServerError errcode = 4;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Hallsmgr_OnRequestAllocClientCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.errcode)
}

// uint64 loginSessionID = 5;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_loginsessionid() {
  loginsessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hallsmgr_OnRequestAllocClientCB::loginsessionid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.loginSessionID)
  return loginsessionid_;
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_loginsessionid(::google::protobuf::uint64 value) {
  
  loginsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.loginSessionID)
}

// uint64 tokenID = 6;
inline void CMD_Hallsmgr_OnRequestAllocClientCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Hallsmgr_OnRequestAllocClientCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.tokenID)
  return tokenid_;
}
inline void CMD_Hallsmgr_OnRequestAllocClientCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.tokenID)
}

// -------------------------------------------------------------------

// CMD_RoomPlayerInfo

// uint64 playerID = 1;
inline void CMD_RoomPlayerInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_RoomPlayerInfo::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerID)
  return playerid_;
}
inline void CMD_RoomPlayerInfo::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerID)
}

// string clientAddr = 2;
inline void CMD_RoomPlayerInfo::clear_clientaddr() {
  clientaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_RoomPlayerInfo::clientaddr() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.clientAddr)
  return clientaddr_.GetNoArena();
}
inline void CMD_RoomPlayerInfo::set_clientaddr(const ::std::string& value) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.clientAddr)
}
#if LANG_CXX11
inline void CMD_RoomPlayerInfo::set_clientaddr(::std::string&& value) {
  
  clientaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_RoomPlayerInfo.clientAddr)
}
#endif
inline void CMD_RoomPlayerInfo::set_clientaddr(const char* value) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_RoomPlayerInfo.clientAddr)
}
inline void CMD_RoomPlayerInfo::set_clientaddr(const char* value, size_t size) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_RoomPlayerInfo.clientAddr)
}
inline ::std::string* CMD_RoomPlayerInfo::mutable_clientaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_RoomPlayerInfo.clientAddr)
  return clientaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_RoomPlayerInfo::release_clientaddr() {
  // @@protoc_insertion_point(field_release:CMD_RoomPlayerInfo.clientAddr)
  
  return clientaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_RoomPlayerInfo::set_allocated_clientaddr(::std::string* clientaddr) {
  if (clientaddr != NULL) {
    
  } else {
    
  }
  clientaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientaddr);
  // @@protoc_insertion_point(field_set_allocated:CMD_RoomPlayerInfo.clientAddr)
}

// int32 exp = 3;
inline void CMD_RoomPlayerInfo::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::exp() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.exp)
  return exp_;
}
inline void CMD_RoomPlayerInfo::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.exp)
}

// int32 score = 4;
inline void CMD_RoomPlayerInfo::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::score() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.score)
  return score_;
}
inline void CMD_RoomPlayerInfo::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.score)
}

// int32 topscore = 5;
inline void CMD_RoomPlayerInfo::clear_topscore() {
  topscore_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.topscore)
  return topscore_;
}
inline void CMD_RoomPlayerInfo::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.topscore)
}

// int32 victory = 6;
inline void CMD_RoomPlayerInfo::clear_victory() {
  victory_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::victory() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.victory)
  return victory_;
}
inline void CMD_RoomPlayerInfo::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.victory)
}

// int32 defeat = 7;
inline void CMD_RoomPlayerInfo::clear_defeat() {
  defeat_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.defeat)
  return defeat_;
}
inline void CMD_RoomPlayerInfo::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.defeat)
}

// string playerName = 8;
inline void CMD_RoomPlayerInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_RoomPlayerInfo::playername() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerName)
  return playername_.GetNoArena();
}
inline void CMD_RoomPlayerInfo::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerName)
}
#if LANG_CXX11
inline void CMD_RoomPlayerInfo::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_RoomPlayerInfo.playerName)
}
#endif
inline void CMD_RoomPlayerInfo::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_RoomPlayerInfo.playerName)
}
inline void CMD_RoomPlayerInfo::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_RoomPlayerInfo.playerName)
}
inline ::std::string* CMD_RoomPlayerInfo::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_RoomPlayerInfo.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_RoomPlayerInfo::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_RoomPlayerInfo.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_RoomPlayerInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_RoomPlayerInfo.playerName)
}

// int32 playerModelID = 9;
inline void CMD_RoomPlayerInfo::clear_playermodelid() {
  playermodelid_ = 0;
}
inline ::google::protobuf::int32 CMD_RoomPlayerInfo::playermodelid() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerModelID)
  return playermodelid_;
}
inline void CMD_RoomPlayerInfo::set_playermodelid(::google::protobuf::int32 value) {
  
  playermodelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerModelID)
}

// -------------------------------------------------------------------

// CMD_Roommgr_RequestCreateRoom

// uint64 hallsID = 1;
inline void CMD_Roommgr_RequestCreateRoom::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.hallsID)
  return hallsid_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.hallsID)
}

// uint64 gameID = 2;
inline void CMD_Roommgr_RequestCreateRoom::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameID)
  return gameid_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameID)
}

// int32 gameMode = 3;
inline void CMD_Roommgr_RequestCreateRoom::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_Roommgr_RequestCreateRoom::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameMode)
  return gamemode_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameMode)
}

// uint64 roomID = 4;
inline void CMD_Roommgr_RequestCreateRoom::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.roomID)
  return roomid_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.roomID)
}

// int32 maxPlayerNum = 5;
inline void CMD_Roommgr_RequestCreateRoom::clear_maxplayernum() {
  maxplayernum_ = 0;
}
inline ::google::protobuf::int32 CMD_Roommgr_RequestCreateRoom::maxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.maxPlayerNum)
  return maxplayernum_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_maxplayernum(::google::protobuf::int32 value) {
  
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.maxPlayerNum)
}

// float gameTime = 6;
inline void CMD_Roommgr_RequestCreateRoom::clear_gametime() {
  gametime_ = 0;
}
inline float CMD_Roommgr_RequestCreateRoom::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameTime)
  return gametime_;
}
inline void CMD_Roommgr_RequestCreateRoom::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameTime)
}

// repeated .CMD_RoomPlayerInfo players = 7;
inline int CMD_Roommgr_RequestCreateRoom::players_size() const {
  return players_.size();
}
inline void CMD_Roommgr_RequestCreateRoom::clear_players() {
  players_.Clear();
}
inline const ::CMD_RoomPlayerInfo& CMD_Roommgr_RequestCreateRoom::players(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Get(index);
}
inline ::CMD_RoomPlayerInfo* CMD_Roommgr_RequestCreateRoom::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Mutable(index);
}
inline ::CMD_RoomPlayerInfo* CMD_Roommgr_RequestCreateRoom::add_players() {
  // @@protoc_insertion_point(field_add:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_Roommgr_RequestCreateRoom::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Roommgr_RequestCreateRoom.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_Roommgr_RequestCreateRoom::players() const {
  // @@protoc_insertion_point(field_list:CMD_Roommgr_RequestCreateRoom.players)
  return players_;
}

// string exeFile = 8;
inline void CMD_Roommgr_RequestCreateRoom::clear_exefile() {
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Roommgr_RequestCreateRoom::exefile() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.exeFile)
  return exefile_.GetNoArena();
}
inline void CMD_Roommgr_RequestCreateRoom::set_exefile(const ::std::string& value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.exeFile)
}
#if LANG_CXX11
inline void CMD_Roommgr_RequestCreateRoom::set_exefile(::std::string&& value) {
  
  exefile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_RequestCreateRoom.exeFile)
}
#endif
inline void CMD_Roommgr_RequestCreateRoom::set_exefile(const char* value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_RequestCreateRoom.exeFile)
}
inline void CMD_Roommgr_RequestCreateRoom::set_exefile(const char* value, size_t size) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_RequestCreateRoom.exeFile)
}
inline ::std::string* CMD_Roommgr_RequestCreateRoom::mutable_exefile() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.exeFile)
  return exefile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Roommgr_RequestCreateRoom::release_exefile() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_RequestCreateRoom.exeFile)
  
  return exefile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Roommgr_RequestCreateRoom::set_allocated_exefile(::std::string* exefile) {
  if (exefile != NULL) {
    
  } else {
    
  }
  exefile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exefile);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_RequestCreateRoom.exeFile)
}

// string exeOptions = 9;
inline void CMD_Roommgr_RequestCreateRoom::clear_exeoptions() {
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Roommgr_RequestCreateRoom::exeoptions() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.exeOptions)
  return exeoptions_.GetNoArena();
}
inline void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const ::std::string& value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
#if LANG_CXX11
inline void CMD_Roommgr_RequestCreateRoom::set_exeoptions(::std::string&& value) {
  
  exeoptions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
#endif
inline void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const char* value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
inline void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const char* value, size_t size) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
inline ::std::string* CMD_Roommgr_RequestCreateRoom::mutable_exeoptions() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.exeOptions)
  return exeoptions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Roommgr_RequestCreateRoom::release_exeoptions() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_RequestCreateRoom.exeOptions)
  
  return exeoptions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Roommgr_RequestCreateRoom::set_allocated_exeoptions(::std::string* exeoptions) {
  if (exeoptions != NULL) {
    
  } else {
    
  }
  exeoptions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exeoptions);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_RequestCreateRoom.exeOptions)
}

// -------------------------------------------------------------------

// CMD_Roommgr_OnRequestCreateRoomCB

// uint64 hallsID = 1;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.hallsID)
  return hallsid_;
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.hallsID)
}

// uint64 roomID = 2;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.roomID)
  return roomid_;
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.roomID)
}

// string ip = 3;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Roommgr_OnRequestCreateRoomCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  return ip_.GetNoArena();
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
#if LANG_CXX11
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
#endif
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
inline ::std::string* CMD_Roommgr_OnRequestCreateRoomCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Roommgr_OnRequestCreateRoomCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}

// int32 port = 4;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Roommgr_OnRequestCreateRoomCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.port)
  return port_;
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.port)
}

// uint64 tokenID = 5;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.tokenID)
  return tokenid_;
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.tokenID)
}

// .ServerError errcode = 6;
inline void CMD_Roommgr_OnRequestCreateRoomCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Roommgr_OnRequestCreateRoomCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Roommgr_OnRequestCreateRoomCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.errcode)
}

// -------------------------------------------------------------------

// CMD_Roommgr_OnRoomSrvGameOverReport

// uint64 hallsID = 1;
inline void CMD_Roommgr_OnRoomSrvGameOverReport::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_OnRoomSrvGameOverReport::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.hallsID)
  return hallsid_;
}
inline void CMD_Roommgr_OnRoomSrvGameOverReport::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.hallsID)
}

// uint64 roomID = 2;
inline void CMD_Roommgr_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Roommgr_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
inline void CMD_Roommgr_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 3;
inline void CMD_Roommgr_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Roommgr_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Roommgr_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 4;
inline int CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
inline void CMD_Roommgr_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
inline const ::CMD_Halls_PlayerGameData& CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Roommgr_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Roommgr_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Roommgr_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

// -------------------------------------------------------------------

// CMD_Machine_RequestCreateRoom

// uint64 hallsID = 1;
inline void CMD_Machine_RequestCreateRoom::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.hallsID)
  return hallsid_;
}
inline void CMD_Machine_RequestCreateRoom::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.hallsID)
}

// uint64 gameID = 2;
inline void CMD_Machine_RequestCreateRoom::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameID)
  return gameid_;
}
inline void CMD_Machine_RequestCreateRoom::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameID)
}

// int32 gameMode = 3;
inline void CMD_Machine_RequestCreateRoom::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_Machine_RequestCreateRoom::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameMode)
  return gamemode_;
}
inline void CMD_Machine_RequestCreateRoom::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameMode)
}

// uint64 roomID = 4;
inline void CMD_Machine_RequestCreateRoom::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roomID)
  return roomid_;
}
inline void CMD_Machine_RequestCreateRoom::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roomID)
}

// int32 maxPlayerNum = 5;
inline void CMD_Machine_RequestCreateRoom::clear_maxplayernum() {
  maxplayernum_ = 0;
}
inline ::google::protobuf::int32 CMD_Machine_RequestCreateRoom::maxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.maxPlayerNum)
  return maxplayernum_;
}
inline void CMD_Machine_RequestCreateRoom::set_maxplayernum(::google::protobuf::int32 value) {
  
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.maxPlayerNum)
}

// float gameTime = 6;
inline void CMD_Machine_RequestCreateRoom::clear_gametime() {
  gametime_ = 0;
}
inline float CMD_Machine_RequestCreateRoom::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameTime)
  return gametime_;
}
inline void CMD_Machine_RequestCreateRoom::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameTime)
}

// repeated .CMD_RoomPlayerInfo players = 7;
inline int CMD_Machine_RequestCreateRoom::players_size() const {
  return players_.size();
}
inline void CMD_Machine_RequestCreateRoom::clear_players() {
  players_.Clear();
}
inline const ::CMD_RoomPlayerInfo& CMD_Machine_RequestCreateRoom::players(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.players)
  return players_.Get(index);
}
inline ::CMD_RoomPlayerInfo* CMD_Machine_RequestCreateRoom::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.players)
  return players_.Mutable(index);
}
inline ::CMD_RoomPlayerInfo* CMD_Machine_RequestCreateRoom::add_players() {
  // @@protoc_insertion_point(field_add:CMD_Machine_RequestCreateRoom.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_Machine_RequestCreateRoom::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Machine_RequestCreateRoom.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_Machine_RequestCreateRoom::players() const {
  // @@protoc_insertion_point(field_list:CMD_Machine_RequestCreateRoom.players)
  return players_;
}

// string exeFile = 8;
inline void CMD_Machine_RequestCreateRoom::clear_exefile() {
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Machine_RequestCreateRoom::exefile() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.exeFile)
  return exefile_.GetNoArena();
}
inline void CMD_Machine_RequestCreateRoom::set_exefile(const ::std::string& value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.exeFile)
}
#if LANG_CXX11
inline void CMD_Machine_RequestCreateRoom::set_exefile(::std::string&& value) {
  
  exefile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.exeFile)
}
#endif
inline void CMD_Machine_RequestCreateRoom::set_exefile(const char* value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.exeFile)
}
inline void CMD_Machine_RequestCreateRoom::set_exefile(const char* value, size_t size) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.exeFile)
}
inline ::std::string* CMD_Machine_RequestCreateRoom::mutable_exefile() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.exeFile)
  return exefile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Machine_RequestCreateRoom::release_exefile() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.exeFile)
  
  return exefile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Machine_RequestCreateRoom::set_allocated_exefile(::std::string* exefile) {
  if (exefile != NULL) {
    
  } else {
    
  }
  exefile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exefile);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.exeFile)
}

// string exeOptions = 9;
inline void CMD_Machine_RequestCreateRoom::clear_exeoptions() {
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Machine_RequestCreateRoom::exeoptions() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.exeOptions)
  return exeoptions_.GetNoArena();
}
inline void CMD_Machine_RequestCreateRoom::set_exeoptions(const ::std::string& value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.exeOptions)
}
#if LANG_CXX11
inline void CMD_Machine_RequestCreateRoom::set_exeoptions(::std::string&& value) {
  
  exeoptions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.exeOptions)
}
#endif
inline void CMD_Machine_RequestCreateRoom::set_exeoptions(const char* value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.exeOptions)
}
inline void CMD_Machine_RequestCreateRoom::set_exeoptions(const char* value, size_t size) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.exeOptions)
}
inline ::std::string* CMD_Machine_RequestCreateRoom::mutable_exeoptions() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.exeOptions)
  return exeoptions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Machine_RequestCreateRoom::release_exeoptions() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.exeOptions)
  
  return exeoptions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Machine_RequestCreateRoom::set_allocated_exeoptions(::std::string* exeoptions) {
  if (exeoptions != NULL) {
    
  } else {
    
  }
  exeoptions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exeoptions);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.exeOptions)
}

// uint64 tokenID = 10;
inline void CMD_Machine_RequestCreateRoom::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.tokenID)
  return tokenid_;
}
inline void CMD_Machine_RequestCreateRoom::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.tokenID)
}

// string roommgrIP = 11;
inline void CMD_Machine_RequestCreateRoom::clear_roommgrip() {
  roommgrip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Machine_RequestCreateRoom::roommgrip() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roommgrIP)
  return roommgrip_.GetNoArena();
}
inline void CMD_Machine_RequestCreateRoom::set_roommgrip(const ::std::string& value) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roommgrIP)
}
#if LANG_CXX11
inline void CMD_Machine_RequestCreateRoom::set_roommgrip(::std::string&& value) {
  
  roommgrip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.roommgrIP)
}
#endif
inline void CMD_Machine_RequestCreateRoom::set_roommgrip(const char* value) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.roommgrIP)
}
inline void CMD_Machine_RequestCreateRoom::set_roommgrip(const char* value, size_t size) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.roommgrIP)
}
inline ::std::string* CMD_Machine_RequestCreateRoom::mutable_roommgrip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.roommgrIP)
  return roommgrip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Machine_RequestCreateRoom::release_roommgrip() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.roommgrIP)
  
  return roommgrip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Machine_RequestCreateRoom::set_allocated_roommgrip(::std::string* roommgrip) {
  if (roommgrip != NULL) {
    
  } else {
    
  }
  roommgrip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roommgrip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.roommgrIP)
}

// int32 roommgrPort = 12;
inline void CMD_Machine_RequestCreateRoom::clear_roommgrport() {
  roommgrport_ = 0;
}
inline ::google::protobuf::int32 CMD_Machine_RequestCreateRoom::roommgrport() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roommgrPort)
  return roommgrport_;
}
inline void CMD_Machine_RequestCreateRoom::set_roommgrport(::google::protobuf::int32 value) {
  
  roommgrport_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roommgrPort)
}

// -------------------------------------------------------------------

// CMD_Machine_RoomSrvReportAddr

// uint64 hallsID = 1;
inline void CMD_Machine_RoomSrvReportAddr::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RoomSrvReportAddr::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.hallsID)
  return hallsid_;
}
inline void CMD_Machine_RoomSrvReportAddr::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.hallsID)
}

// uint64 roomID = 2;
inline void CMD_Machine_RoomSrvReportAddr::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_RoomSrvReportAddr::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.roomID)
  return roomid_;
}
inline void CMD_Machine_RoomSrvReportAddr::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.roomID)
}

// string ip = 3;
inline void CMD_Machine_RoomSrvReportAddr::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Machine_RoomSrvReportAddr::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.ip)
  return ip_.GetNoArena();
}
inline void CMD_Machine_RoomSrvReportAddr::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.ip)
}
#if LANG_CXX11
inline void CMD_Machine_RoomSrvReportAddr::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RoomSrvReportAddr.ip)
}
#endif
inline void CMD_Machine_RoomSrvReportAddr::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RoomSrvReportAddr.ip)
}
inline void CMD_Machine_RoomSrvReportAddr::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RoomSrvReportAddr.ip)
}
inline ::std::string* CMD_Machine_RoomSrvReportAddr::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RoomSrvReportAddr.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Machine_RoomSrvReportAddr::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RoomSrvReportAddr.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Machine_RoomSrvReportAddr::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RoomSrvReportAddr.ip)
}

// int32 port = 4;
inline void CMD_Machine_RoomSrvReportAddr::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Machine_RoomSrvReportAddr::port() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.port)
  return port_;
}
inline void CMD_Machine_RoomSrvReportAddr::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.port)
}

// .ServerError errcode = 5;
inline void CMD_Machine_RoomSrvReportAddr::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Machine_RoomSrvReportAddr::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Machine_RoomSrvReportAddr::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.errcode)
}

// -------------------------------------------------------------------

// CMD_Machine_OnRoomSrvGameOverReport

// uint64 hallsID = 1;
inline void CMD_Machine_OnRoomSrvGameOverReport::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_OnRoomSrvGameOverReport::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.hallsID)
  return hallsid_;
}
inline void CMD_Machine_OnRoomSrvGameOverReport::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.hallsID)
}

// uint64 roomID = 2;
inline void CMD_Machine_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Machine_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
inline void CMD_Machine_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 3;
inline void CMD_Machine_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Machine_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Machine_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 4;
inline int CMD_Machine_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
inline void CMD_Machine_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
inline const ::CMD_Halls_PlayerGameData& CMD_Machine_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Machine_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
inline ::CMD_Halls_PlayerGameData* CMD_Machine_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Machine_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Machine_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

// -------------------------------------------------------------------

// CMD_ListServersInfo

// string addr = 1;
inline void CMD_ListServersInfo::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_ListServersInfo::addr() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.addr)
  return addr_.GetNoArena();
}
inline void CMD_ListServersInfo::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.addr)
}
#if LANG_CXX11
inline void CMD_ListServersInfo::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ListServersInfo.addr)
}
#endif
inline void CMD_ListServersInfo::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ListServersInfo.addr)
}
inline void CMD_ListServersInfo::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ListServersInfo.addr)
}
inline ::std::string* CMD_ListServersInfo::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ListServersInfo.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_ListServersInfo::release_addr() {
  // @@protoc_insertion_point(field_release:CMD_ListServersInfo.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_ListServersInfo::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:CMD_ListServersInfo.addr)
}

// int32 port = 2;
inline void CMD_ListServersInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_ListServersInfo::port() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.port)
  return port_;
}
inline void CMD_ListServersInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.port)
}

// uint64 groupid = 3;
inline void CMD_ListServersInfo::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_ListServersInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.groupid)
  return groupid_;
}
inline void CMD_ListServersInfo::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.groupid)
}

// string name = 4;
inline void CMD_ListServersInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_ListServersInfo::name() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.name)
  return name_.GetNoArena();
}
inline void CMD_ListServersInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.name)
}
#if LANG_CXX11
inline void CMD_ListServersInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ListServersInfo.name)
}
#endif
inline void CMD_ListServersInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ListServersInfo.name)
}
inline void CMD_ListServersInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ListServersInfo.name)
}
inline ::std::string* CMD_ListServersInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ListServersInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_ListServersInfo::release_name() {
  // @@protoc_insertion_point(field_release:CMD_ListServersInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_ListServersInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_ListServersInfo.name)
}

// uint64 id = 5;
inline void CMD_ListServersInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_ListServersInfo::id() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.id)
  return id_;
}
inline void CMD_ListServersInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.id)
}

// -------------------------------------------------------------------

// CMD_Client_OnListServersCB

// .ServerError errcode = 1;
inline void CMD_Client_OnListServersCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnListServersCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListServersCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnListServersCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListServersCB.errcode)
}

// repeated .CMD_ListServersInfo srvs = 2;
inline int CMD_Client_OnListServersCB::srvs_size() const {
  return srvs_.size();
}
inline void CMD_Client_OnListServersCB::clear_srvs() {
  srvs_.Clear();
}
inline const ::CMD_ListServersInfo& CMD_Client_OnListServersCB::srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListServersCB.srvs)
  return srvs_.Get(index);
}
inline ::CMD_ListServersInfo* CMD_Client_OnListServersCB::mutable_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnListServersCB.srvs)
  return srvs_.Mutable(index);
}
inline ::CMD_ListServersInfo* CMD_Client_OnListServersCB::add_srvs() {
  // @@protoc_insertion_point(field_add:CMD_Client_OnListServersCB.srvs)
  return srvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >*
CMD_Client_OnListServersCB::mutable_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Client_OnListServersCB.srvs)
  return &srvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >&
CMD_Client_OnListServersCB::srvs() const {
  // @@protoc_insertion_point(field_list:CMD_Client_OnListServersCB.srvs)
  return srvs_;
}

// -------------------------------------------------------------------

// CMD_Client_OnSignupCB

// .ServerError errcode = 1;
inline void CMD_Client_OnSignupCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnSignupCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSignupCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnSignupCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSignupCB.errcode)
}

// bytes datas = 2;
inline void CMD_Client_OnSignupCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnSignupCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSignupCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Client_OnSignupCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSignupCB.datas)
}
#if LANG_CXX11
inline void CMD_Client_OnSignupCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSignupCB.datas)
}
#endif
inline void CMD_Client_OnSignupCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSignupCB.datas)
}
inline void CMD_Client_OnSignupCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSignupCB.datas)
}
inline ::std::string* CMD_Client_OnSignupCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSignupCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnSignupCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSignupCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnSignupCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSignupCB.datas)
}

// -------------------------------------------------------------------

// CMD_Client_OnSigninCB

// .ServerError errcode = 1;
inline void CMD_Client_OnSigninCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnSigninCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnSigninCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.errcode)
}

// bytes datas = 2;
inline void CMD_Client_OnSigninCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnSigninCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Client_OnSigninCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.datas)
}
#if LANG_CXX11
inline void CMD_Client_OnSigninCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSigninCB.datas)
}
#endif
inline void CMD_Client_OnSigninCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSigninCB.datas)
}
inline void CMD_Client_OnSigninCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSigninCB.datas)
}
inline ::std::string* CMD_Client_OnSigninCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSigninCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnSigninCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSigninCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnSigninCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSigninCB.datas)
}

// string addr = 3;
inline void CMD_Client_OnSigninCB::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnSigninCB::addr() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.addr)
  return addr_.GetNoArena();
}
inline void CMD_Client_OnSigninCB::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.addr)
}
#if LANG_CXX11
inline void CMD_Client_OnSigninCB::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSigninCB.addr)
}
#endif
inline void CMD_Client_OnSigninCB::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSigninCB.addr)
}
inline void CMD_Client_OnSigninCB::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSigninCB.addr)
}
inline ::std::string* CMD_Client_OnSigninCB::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSigninCB.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnSigninCB::release_addr() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSigninCB.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnSigninCB::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSigninCB.addr)
}

// int32 port = 4;
inline void CMD_Client_OnSigninCB::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnSigninCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.port)
  return port_;
}
inline void CMD_Client_OnSigninCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.port)
}

// uint64 tokenID = 5;
inline void CMD_Client_OnSigninCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnSigninCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.tokenID)
  return tokenid_;
}
inline void CMD_Client_OnSigninCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.tokenID)
}

// -------------------------------------------------------------------

// CMD_PlayerContext

// uint64 playerID = 1;
inline void CMD_PlayerContext::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_PlayerContext::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerID)
  return playerid_;
}
inline void CMD_PlayerContext::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerID)
}

// string playerName = 2;
inline void CMD_PlayerContext::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_PlayerContext::playername() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerName)
  return playername_.GetNoArena();
}
inline void CMD_PlayerContext::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerName)
}
#if LANG_CXX11
inline void CMD_PlayerContext::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_PlayerContext.playerName)
}
#endif
inline void CMD_PlayerContext::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_PlayerContext.playerName)
}
inline void CMD_PlayerContext::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_PlayerContext.playerName)
}
inline ::std::string* CMD_PlayerContext::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_PlayerContext::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_PlayerContext.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_PlayerContext::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_PlayerContext.playerName)
}

// int32 playerModelID = 3;
inline void CMD_PlayerContext::clear_playermodelid() {
  playermodelid_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::playermodelid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerModelID)
  return playermodelid_;
}
inline void CMD_PlayerContext::set_playermodelid(::google::protobuf::int32 value) {
  
  playermodelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerModelID)
}

// int32 exp = 4;
inline void CMD_PlayerContext::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::exp() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.exp)
  return exp_;
}
inline void CMD_PlayerContext::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.exp)
}

// uint64 roomID = 5;
inline void CMD_PlayerContext::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_PlayerContext::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.roomID)
  return roomid_;
}
inline void CMD_PlayerContext::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.roomID)
}

// uint64 gameID = 6;
inline void CMD_PlayerContext::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_PlayerContext::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameID)
  return gameid_;
}
inline void CMD_PlayerContext::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameID)
}

// int32 gameMode = 7;
inline void CMD_PlayerContext::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameMode)
  return gamemode_;
}
inline void CMD_PlayerContext::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameMode)
}

// string gameServerIP = 8;
inline void CMD_PlayerContext::clear_gameserverip() {
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_PlayerContext::gameserverip() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerIP)
  return gameserverip_.GetNoArena();
}
inline void CMD_PlayerContext::set_gameserverip(const ::std::string& value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerIP)
}
#if LANG_CXX11
inline void CMD_PlayerContext::set_gameserverip(::std::string&& value) {
  
  gameserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_PlayerContext.gameServerIP)
}
#endif
inline void CMD_PlayerContext::set_gameserverip(const char* value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_PlayerContext.gameServerIP)
}
inline void CMD_PlayerContext::set_gameserverip(const char* value, size_t size) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_PlayerContext.gameServerIP)
}
inline ::std::string* CMD_PlayerContext::mutable_gameserverip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.gameServerIP)
  return gameserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_PlayerContext::release_gameserverip() {
  // @@protoc_insertion_point(field_release:CMD_PlayerContext.gameServerIP)
  
  return gameserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_PlayerContext::set_allocated_gameserverip(::std::string* gameserverip) {
  if (gameserverip != NULL) {
    
  } else {
    
  }
  gameserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserverip);
  // @@protoc_insertion_point(field_set_allocated:CMD_PlayerContext.gameServerIP)
}

// int32 gameServerPort = 9;
inline void CMD_PlayerContext::clear_gameserverport() {
  gameserverport_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::gameserverport() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerPort)
  return gameserverport_;
}
inline void CMD_PlayerContext::set_gameserverport(::google::protobuf::int32 value) {
  
  gameserverport_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerPort)
}

// uint64 gameServerTokenID = 10;
inline void CMD_PlayerContext::clear_gameservertokenid() {
  gameservertokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_PlayerContext::gameservertokenid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerTokenID)
  return gameservertokenid_;
}
inline void CMD_PlayerContext::set_gameservertokenid(::google::protobuf::uint64 value) {
  
  gameservertokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerTokenID)
}

// int32 gameMaxPlayerNum = 11;
inline void CMD_PlayerContext::clear_gamemaxplayernum() {
  gamemaxplayernum_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::gamemaxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameMaxPlayerNum)
  return gamemaxplayernum_;
}
inline void CMD_PlayerContext::set_gamemaxplayernum(::google::protobuf::int32 value) {
  
  gamemaxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameMaxPlayerNum)
}

// float gameTime = 12;
inline void CMD_PlayerContext::clear_gametime() {
  gametime_ = 0;
}
inline float CMD_PlayerContext::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameTime)
  return gametime_;
}
inline void CMD_PlayerContext::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameTime)
}

// int32 playerGameTopScore = 13;
inline void CMD_PlayerContext::clear_playergametopscore() {
  playergametopscore_ = 0;
}
inline ::google::protobuf::int32 CMD_PlayerContext::playergametopscore() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerGameTopScore)
  return playergametopscore_;
}
inline void CMD_PlayerContext::set_playergametopscore(::google::protobuf::int32 value) {
  
  playergametopscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerGameTopScore)
}

// repeated .CMD_RoomPlayerInfo gamePlayers = 14;
inline int CMD_PlayerContext::gameplayers_size() const {
  return gameplayers_.size();
}
inline void CMD_PlayerContext::clear_gameplayers() {
  gameplayers_.Clear();
}
inline const ::CMD_RoomPlayerInfo& CMD_PlayerContext::gameplayers(int index) const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Get(index);
}
inline ::CMD_RoomPlayerInfo* CMD_PlayerContext::mutable_gameplayers(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Mutable(index);
}
inline ::CMD_RoomPlayerInfo* CMD_PlayerContext::add_gameplayers() {
  // @@protoc_insertion_point(field_add:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_PlayerContext::mutable_gameplayers() {
  // @@protoc_insertion_point(field_mutable_list:CMD_PlayerContext.gamePlayers)
  return &gameplayers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_PlayerContext::gameplayers() const {
  // @@protoc_insertion_point(field_list:CMD_PlayerContext.gamePlayers)
  return gameplayers_;
}

// -------------------------------------------------------------------

// CMD_Client_UpdatePlayerContext

// .CMD_PlayerContext playerContext = 1;
inline bool CMD_Client_UpdatePlayerContext::has_playercontext() const {
  return this != internal_default_instance() && playercontext_ != NULL;
}
inline void CMD_Client_UpdatePlayerContext::clear_playercontext() {
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) delete playercontext_;
  playercontext_ = NULL;
}
inline const ::CMD_PlayerContext& CMD_Client_UpdatePlayerContext::playercontext() const {
  // @@protoc_insertion_point(field_get:CMD_Client_UpdatePlayerContext.playerContext)
  return playercontext_ != NULL ? *playercontext_
                         : *::CMD_PlayerContext::internal_default_instance();
}
inline ::CMD_PlayerContext* CMD_Client_UpdatePlayerContext::mutable_playercontext() {
  
  if (playercontext_ == NULL) {
    playercontext_ = new ::CMD_PlayerContext;
  }
  // @@protoc_insertion_point(field_mutable:CMD_Client_UpdatePlayerContext.playerContext)
  return playercontext_;
}
inline ::CMD_PlayerContext* CMD_Client_UpdatePlayerContext::release_playercontext() {
  // @@protoc_insertion_point(field_release:CMD_Client_UpdatePlayerContext.playerContext)
  
  ::CMD_PlayerContext* temp = playercontext_;
  playercontext_ = NULL;
  return temp;
}
inline void CMD_Client_UpdatePlayerContext::set_allocated_playercontext(::CMD_PlayerContext* playercontext) {
  delete playercontext_;
  playercontext_ = playercontext;
  if (playercontext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_UpdatePlayerContext.playerContext)
}

// -------------------------------------------------------------------

// CMD_GameModeInfos

// uint32 gameModeID = 1;
inline void CMD_GameModeInfos::clear_gamemodeid() {
  gamemodeid_ = 0u;
}
inline ::google::protobuf::uint32 CMD_GameModeInfos::gamemodeid() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameModeID)
  return gamemodeid_;
}
inline void CMD_GameModeInfos::set_gamemodeid(::google::protobuf::uint32 value) {
  
  gamemodeid_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameModeID)
}

// string gameModeName = 2;
inline void CMD_GameModeInfos::clear_gamemodename() {
  gamemodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_GameModeInfos::gamemodename() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameModeName)
  return gamemodename_.GetNoArena();
}
inline void CMD_GameModeInfos::set_gamemodename(const ::std::string& value) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameModeName)
}
#if LANG_CXX11
inline void CMD_GameModeInfos::set_gamemodename(::std::string&& value) {
  
  gamemodename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameModeInfos.gameModeName)
}
#endif
inline void CMD_GameModeInfos::set_gamemodename(const char* value) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameModeInfos.gameModeName)
}
inline void CMD_GameModeInfos::set_gamemodename(const char* value, size_t size) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameModeInfos.gameModeName)
}
inline ::std::string* CMD_GameModeInfos::mutable_gamemodename() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameModeInfos.gameModeName)
  return gamemodename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_GameModeInfos::release_gamemodename() {
  // @@protoc_insertion_point(field_release:CMD_GameModeInfos.gameModeName)
  
  return gamemodename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_GameModeInfos::set_allocated_gamemodename(::std::string* gamemodename) {
  if (gamemodename != NULL) {
    
  } else {
    
  }
  gamemodename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamemodename);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameModeInfos.gameModeName)
}

// uint32 playerMax = 3;
inline void CMD_GameModeInfos::clear_playermax() {
  playermax_ = 0u;
}
inline ::google::protobuf::uint32 CMD_GameModeInfos::playermax() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.playerMax)
  return playermax_;
}
inline void CMD_GameModeInfos::set_playermax(::google::protobuf::uint32 value) {
  
  playermax_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.playerMax)
}

// uint32 gameTime = 4;
inline void CMD_GameModeInfos::clear_gametime() {
  gametime_ = 0u;
}
inline ::google::protobuf::uint32 CMD_GameModeInfos::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameTime)
  return gametime_;
}
inline void CMD_GameModeInfos::set_gametime(::google::protobuf::uint32 value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameTime)
}

// -------------------------------------------------------------------

// CMD_GameInfos

// uint64 gameID = 1;
inline void CMD_GameInfos::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_GameInfos::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameID)
  return gameid_;
}
inline void CMD_GameInfos::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameID)
}

// uint32 gameMode = 2;
inline void CMD_GameInfos::clear_gamemode() {
  gamemode_ = 0u;
}
inline ::google::protobuf::uint32 CMD_GameInfos::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameMode)
  return gamemode_;
}
inline void CMD_GameInfos::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameMode)
}

// uint32 type = 3;
inline void CMD_GameInfos::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 CMD_GameInfos::type() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.type)
  return type_;
}
inline void CMD_GameInfos::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.type)
}

// string gameName = 4;
inline void CMD_GameInfos::clear_gamename() {
  gamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_GameInfos::gamename() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameName)
  return gamename_.GetNoArena();
}
inline void CMD_GameInfos::set_gamename(const ::std::string& value) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameName)
}
#if LANG_CXX11
inline void CMD_GameInfos::set_gamename(::std::string&& value) {
  
  gamename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.gameName)
}
#endif
inline void CMD_GameInfos::set_gamename(const char* value) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.gameName)
}
inline void CMD_GameInfos::set_gamename(const char* value, size_t size) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.gameName)
}
inline ::std::string* CMD_GameInfos::mutable_gamename() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.gameName)
  return gamename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_GameInfos::release_gamename() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.gameName)
  
  return gamename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_GameInfos::set_allocated_gamename(::std::string* gamename) {
  if (gamename != NULL) {
    
  } else {
    
  }
  gamename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamename);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.gameName)
}

// string url_icon = 5;
inline void CMD_GameInfos::clear_url_icon() {
  url_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_GameInfos::url_icon() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.url_icon)
  return url_icon_.GetNoArena();
}
inline void CMD_GameInfos::set_url_icon(const ::std::string& value) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.url_icon)
}
#if LANG_CXX11
inline void CMD_GameInfos::set_url_icon(::std::string&& value) {
  
  url_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.url_icon)
}
#endif
inline void CMD_GameInfos::set_url_icon(const char* value) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.url_icon)
}
inline void CMD_GameInfos::set_url_icon(const char* value, size_t size) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.url_icon)
}
inline ::std::string* CMD_GameInfos::mutable_url_icon() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.url_icon)
  return url_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_GameInfos::release_url_icon() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.url_icon)
  
  return url_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_GameInfos::set_allocated_url_icon(::std::string* url_icon) {
  if (url_icon != NULL) {
    
  } else {
    
  }
  url_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_icon);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.url_icon)
}

// string url_apk = 6;
inline void CMD_GameInfos::clear_url_apk() {
  url_apk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_GameInfos::url_apk() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.url_apk)
  return url_apk_.GetNoArena();
}
inline void CMD_GameInfos::set_url_apk(const ::std::string& value) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.url_apk)
}
#if LANG_CXX11
inline void CMD_GameInfos::set_url_apk(::std::string&& value) {
  
  url_apk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.url_apk)
}
#endif
inline void CMD_GameInfos::set_url_apk(const char* value) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.url_apk)
}
inline void CMD_GameInfos::set_url_apk(const char* value, size_t size) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.url_apk)
}
inline ::std::string* CMD_GameInfos::mutable_url_apk() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.url_apk)
  return url_apk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_GameInfos::release_url_apk() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.url_apk)
  
  return url_apk_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_GameInfos::set_allocated_url_apk(::std::string* url_apk) {
  if (url_apk != NULL) {
    
  } else {
    
  }
  url_apk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_apk);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.url_apk)
}

// repeated .CMD_GameModeInfos gameModes = 7;
inline int CMD_GameInfos::gamemodes_size() const {
  return gamemodes_.size();
}
inline void CMD_GameInfos::clear_gamemodes() {
  gamemodes_.Clear();
}
inline const ::CMD_GameModeInfos& CMD_GameInfos::gamemodes(int index) const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameModes)
  return gamemodes_.Get(index);
}
inline ::CMD_GameModeInfos* CMD_GameInfos::mutable_gamemodes(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.gameModes)
  return gamemodes_.Mutable(index);
}
inline ::CMD_GameModeInfos* CMD_GameInfos::add_gamemodes() {
  // @@protoc_insertion_point(field_add:CMD_GameInfos.gameModes)
  return gamemodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >*
CMD_GameInfos::mutable_gamemodes() {
  // @@protoc_insertion_point(field_mutable_list:CMD_GameInfos.gameModes)
  return &gamemodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >&
CMD_GameInfos::gamemodes() const {
  // @@protoc_insertion_point(field_list:CMD_GameInfos.gameModes)
  return gamemodes_;
}

// -------------------------------------------------------------------

// CMD_Client_OnListGamesCB

// uint32 page = 1;
inline void CMD_Client_OnListGamesCB::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Client_OnListGamesCB::page() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.page)
  return page_;
}
inline void CMD_Client_OnListGamesCB::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.page)
}

// uint32 type = 2;
inline void CMD_Client_OnListGamesCB::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Client_OnListGamesCB::type() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.type)
  return type_;
}
inline void CMD_Client_OnListGamesCB::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.type)
}

// uint32 totalGamesNum = 3;
inline void CMD_Client_OnListGamesCB::clear_totalgamesnum() {
  totalgamesnum_ = 0u;
}
inline ::google::protobuf::uint32 CMD_Client_OnListGamesCB::totalgamesnum() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.totalGamesNum)
  return totalgamesnum_;
}
inline void CMD_Client_OnListGamesCB::set_totalgamesnum(::google::protobuf::uint32 value) {
  
  totalgamesnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.totalGamesNum)
}

// repeated .CMD_GameInfos gameInfos = 4;
inline int CMD_Client_OnListGamesCB::gameinfos_size() const {
  return gameinfos_.size();
}
inline void CMD_Client_OnListGamesCB::clear_gameinfos() {
  gameinfos_.Clear();
}
inline const ::CMD_GameInfos& CMD_Client_OnListGamesCB::gameinfos(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Get(index);
}
inline ::CMD_GameInfos* CMD_Client_OnListGamesCB::mutable_gameinfos(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Mutable(index);
}
inline ::CMD_GameInfos* CMD_Client_OnListGamesCB::add_gameinfos() {
  // @@protoc_insertion_point(field_add:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >*
CMD_Client_OnListGamesCB::mutable_gameinfos() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Client_OnListGamesCB.gameInfos)
  return &gameinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >&
CMD_Client_OnListGamesCB::gameinfos() const {
  // @@protoc_insertion_point(field_list:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_;
}

// -------------------------------------------------------------------

// CMD_Client_OnLoginCB

// .ServerError errcode = 1;
inline void CMD_Client_OnLoginCB::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnLoginCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnLoginCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.errcode)
}

// bytes datas = 2;
inline void CMD_Client_OnLoginCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnLoginCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.datas)
  return datas_.GetNoArena();
}
inline void CMD_Client_OnLoginCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.datas)
}
#if LANG_CXX11
inline void CMD_Client_OnLoginCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnLoginCB.datas)
}
#endif
inline void CMD_Client_OnLoginCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnLoginCB.datas)
}
inline void CMD_Client_OnLoginCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnLoginCB.datas)
}
inline ::std::string* CMD_Client_OnLoginCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnLoginCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnLoginCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnLoginCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnLoginCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnLoginCB.datas)
}

// .CMD_PlayerContext playerContext = 3;
inline bool CMD_Client_OnLoginCB::has_playercontext() const {
  return this != internal_default_instance() && playercontext_ != NULL;
}
inline void CMD_Client_OnLoginCB::clear_playercontext() {
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) delete playercontext_;
  playercontext_ = NULL;
}
inline const ::CMD_PlayerContext& CMD_Client_OnLoginCB::playercontext() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.playerContext)
  return playercontext_ != NULL ? *playercontext_
                         : *::CMD_PlayerContext::internal_default_instance();
}
inline ::CMD_PlayerContext* CMD_Client_OnLoginCB::mutable_playercontext() {
  
  if (playercontext_ == NULL) {
    playercontext_ = new ::CMD_PlayerContext;
  }
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnLoginCB.playerContext)
  return playercontext_;
}
inline ::CMD_PlayerContext* CMD_Client_OnLoginCB::release_playercontext() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnLoginCB.playerContext)
  
  ::CMD_PlayerContext* temp = playercontext_;
  playercontext_ = NULL;
  return temp;
}
inline void CMD_Client_OnLoginCB::set_allocated_playercontext(::CMD_PlayerContext* playercontext) {
  delete playercontext_;
  playercontext_ = playercontext;
  if (playercontext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnLoginCB.playerContext)
}

// uint64 hallsID = 4;
inline void CMD_Client_OnLoginCB::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnLoginCB::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.hallsID)
  return hallsid_;
}
inline void CMD_Client_OnLoginCB::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.hallsID)
}

// -------------------------------------------------------------------

// CMD_Client_OnMatchingUpdate

// string name = 1;
inline void CMD_Client_OnMatchingUpdate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnMatchingUpdate::name() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.name)
  return name_.GetNoArena();
}
inline void CMD_Client_OnMatchingUpdate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.name)
}
#if LANG_CXX11
inline void CMD_Client_OnMatchingUpdate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnMatchingUpdate.name)
}
#endif
inline void CMD_Client_OnMatchingUpdate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnMatchingUpdate.name)
}
inline void CMD_Client_OnMatchingUpdate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnMatchingUpdate.name)
}
inline ::std::string* CMD_Client_OnMatchingUpdate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnMatchingUpdate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnMatchingUpdate::release_name() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnMatchingUpdate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnMatchingUpdate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnMatchingUpdate.name)
}

// uint64 id = 2;
inline void CMD_Client_OnMatchingUpdate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnMatchingUpdate::id() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.id)
  return id_;
}
inline void CMD_Client_OnMatchingUpdate::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.id)
}

// int32 modelID = 3;
inline void CMD_Client_OnMatchingUpdate::clear_modelid() {
  modelid_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnMatchingUpdate::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.modelID)
  return modelid_;
}
inline void CMD_Client_OnMatchingUpdate::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.modelID)
}

// bool enter = 4;
inline void CMD_Client_OnMatchingUpdate::clear_enter() {
  enter_ = false;
}
inline bool CMD_Client_OnMatchingUpdate::enter() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.enter)
  return enter_;
}
inline void CMD_Client_OnMatchingUpdate::set_enter(bool value) {
  
  enter_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.enter)
}

// -------------------------------------------------------------------

// CMD_Client_OnEndMatch

// .ServerError errcode = 1;
inline void CMD_Client_OnEndMatch::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnEndMatch::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnEndMatch::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.errcode)
}

// string gameServerIP = 2;
inline void CMD_Client_OnEndMatch::clear_gameserverip() {
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMD_Client_OnEndMatch::gameserverip() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerIP)
  return gameserverip_.GetNoArena();
}
inline void CMD_Client_OnEndMatch::set_gameserverip(const ::std::string& value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerIP)
}
#if LANG_CXX11
inline void CMD_Client_OnEndMatch::set_gameserverip(::std::string&& value) {
  
  gameserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnEndMatch.gameServerIP)
}
#endif
inline void CMD_Client_OnEndMatch::set_gameserverip(const char* value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnEndMatch.gameServerIP)
}
inline void CMD_Client_OnEndMatch::set_gameserverip(const char* value, size_t size) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnEndMatch.gameServerIP)
}
inline ::std::string* CMD_Client_OnEndMatch::mutable_gameserverip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnEndMatch.gameServerIP)
  return gameserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMD_Client_OnEndMatch::release_gameserverip() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnEndMatch.gameServerIP)
  
  return gameserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMD_Client_OnEndMatch::set_allocated_gameserverip(::std::string* gameserverip) {
  if (gameserverip != NULL) {
    
  } else {
    
  }
  gameserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserverip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnEndMatch.gameServerIP)
}

// int32 gameServerPort = 3;
inline void CMD_Client_OnEndMatch::clear_gameserverport() {
  gameserverport_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::gameserverport() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerPort)
  return gameserverport_;
}
inline void CMD_Client_OnEndMatch::set_gameserverport(::google::protobuf::int32 value) {
  
  gameserverport_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerPort)
}

// uint64 gameID = 4;
inline void CMD_Client_OnEndMatch::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnEndMatch::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameID)
  return gameid_;
}
inline void CMD_Client_OnEndMatch::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameID)
}

// int32 gameMode = 5;
inline void CMD_Client_OnEndMatch::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameMode)
  return gamemode_;
}
inline void CMD_Client_OnEndMatch::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameMode)
}

// uint64 gameServerTokenID = 6;
inline void CMD_Client_OnEndMatch::clear_gameservertokenid() {
  gameservertokenid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnEndMatch::gameservertokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerTokenID)
  return gameservertokenid_;
}
inline void CMD_Client_OnEndMatch::set_gameservertokenid(::google::protobuf::uint64 value) {
  
  gameservertokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerTokenID)
}

// int32 gamePlayerSize = 7;
inline void CMD_Client_OnEndMatch::clear_gameplayersize() {
  gameplayersize_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::gameplayersize() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gamePlayerSize)
  return gameplayersize_;
}
inline void CMD_Client_OnEndMatch::set_gameplayersize(::google::protobuf::int32 value) {
  
  gameplayersize_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gamePlayerSize)
}

// int32 topScore = 8;
inline void CMD_Client_OnEndMatch::clear_topscore() {
  topscore_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.topScore)
  return topscore_;
}
inline void CMD_Client_OnEndMatch::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.topScore)
}

// int32 victory = 9;
inline void CMD_Client_OnEndMatch::clear_victory() {
  victory_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.victory)
  return victory_;
}
inline void CMD_Client_OnEndMatch::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.victory)
}

// int32 defeat = 10;
inline void CMD_Client_OnEndMatch::clear_defeat() {
  defeat_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnEndMatch::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.defeat)
  return defeat_;
}
inline void CMD_Client_OnEndMatch::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.defeat)
}

// float gameTime = 11;
inline void CMD_Client_OnEndMatch::clear_gametime() {
  gametime_ = 0;
}
inline float CMD_Client_OnEndMatch::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameTime)
  return gametime_;
}
inline void CMD_Client_OnEndMatch::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameTime)
}

// uint64 roomID = 12;
inline void CMD_Client_OnEndMatch::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnEndMatch::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.roomID)
  return roomid_;
}
inline void CMD_Client_OnEndMatch::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.roomID)
}

// -------------------------------------------------------------------

// CMD_Client_OnGameOver

// .ServerError errcode = 1;
inline void CMD_Client_OnGameOver::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnGameOver::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnGameOver::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.errcode)
}

// uint64 gameID = 2;
inline void CMD_Client_OnGameOver::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnGameOver::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.gameID)
  return gameid_;
}
inline void CMD_Client_OnGameOver::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.gameID)
}

// int32 gameMode = 3;
inline void CMD_Client_OnGameOver::clear_gamemode() {
  gamemode_ = 0;
}
inline ::google::protobuf::int32 CMD_Client_OnGameOver::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.gameMode)
  return gamemode_;
}
inline void CMD_Client_OnGameOver::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.gameMode)
}

// uint64 roomID = 4;
inline void CMD_Client_OnGameOver::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMD_Client_OnGameOver::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.roomID)
  return roomid_;
}
inline void CMD_Client_OnGameOver::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.roomID)
}

// -------------------------------------------------------------------

// CMD_Client_OnCancelMatch

// .ServerError errcode = 1;
inline void CMD_Client_OnCancelMatch::clear_errcode() {
  errcode_ = 0;
}
inline ::ServerError CMD_Client_OnCancelMatch::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnCancelMatch.errcode)
  return static_cast< ::ServerError >(errcode_);
}
inline void CMD_Client_OnCancelMatch::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnCancelMatch.errcode)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMD>() {
  return ::CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Commands_2eproto__INCLUDED
