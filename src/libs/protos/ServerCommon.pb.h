// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerCommon.proto

#ifndef PROTOBUF_ServerCommon_2eproto__INCLUDED
#define PROTOBUF_ServerCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ServerCommon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ServerCommon_2eproto

enum ServerError {
  OK = 0,
  ACCOUNT_EXIST = 1,
  ACCOUNT_OR_PASSWORD_ERROR = 2,
  NOT_FOUND = 3,
  SERVER_NOT_READY = 4,
  FREQUENT_OPERATION = 5,
  INVALID_TOKEN = 6,
  OBJECT_NOT_FOUND = 7,
  PLAYING = 8,
  MATCH_FAILED = 9,
  CREATE_ROOM_PROCESS_FAILED = 10,
  TIMEOUT = 11,
  CONNECT_ERROR = 12,
  DISCONNECTED = 13,
  CREATE_ERROR = 14,
  AUTH_FAILED = 15,
  ServerError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerError_IsValid(int value);
const ServerError ServerError_MIN = OK;
const ServerError ServerError_MAX = AUTH_FAILED;
const int ServerError_ARRAYSIZE = ServerError_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerError_descriptor();
inline const ::std::string& ServerError_Name(ServerError value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerError_descriptor(), value);
}
inline bool ServerError_Parse(
    const ::std::string& name, ServerError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerError>(
    ServerError_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ServerError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerError>() {
  return ::ServerError_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerCommon_2eproto__INCLUDED
