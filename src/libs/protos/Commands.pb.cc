// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Commands.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Commands.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CMD_UnkownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Unkown> {
} _CMD_Unkown_default_instance_;
class CMD_HelloDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Hello> {
} _CMD_Hello_default_instance_;
class CMD_HelloCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_HelloCB> {
} _CMD_HelloCB_default_instance_;
class CMD_HeartbeatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Heartbeat> {
} _CMD_Heartbeat_default_instance_;
class CMD_HeartbeatCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_HeartbeatCB> {
} _CMD_HeartbeatCB_default_instance_;
class CMD_Version_Not_MatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Version_Not_Match> {
} _CMD_Version_Not_Match_default_instance_;
class CMD_UpdateServerInfosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_UpdateServerInfos> {
} _CMD_UpdateServerInfos_default_instance_;
class CMD_QueryServerInfosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_QueryServerInfos> {
} _CMD_QueryServerInfos_default_instance_;
class CMD_QueryServerInfosCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_QueryServerInfosCB> {
} _CMD_QueryServerInfosCB_default_instance_;
class CMD_PingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Ping> {
} _CMD_Ping_default_instance_;
class CMD_PongDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Pong> {
} _CMD_Pong_default_instance_;
class CMD_ForwardPacketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_ForwardPacket> {
} _CMD_ForwardPacket_default_instance_;
class CMD_RemoteDisconnectedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_RemoteDisconnected> {
} _CMD_RemoteDisconnected_default_instance_;
class CMD_Directory_ListServersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Directory_ListServers> {
} _CMD_Directory_ListServers_default_instance_;
class CMD_Login_SignupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Login_Signup> {
} _CMD_Login_Signup_default_instance_;
class CMD_Login_OnSignupCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Login_OnSignupCB> {
} _CMD_Login_OnSignupCB_default_instance_;
class CMD_Login_SigninDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Login_Signin> {
} _CMD_Login_Signin_default_instance_;
class CMD_Login_OnSigninCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Login_OnSigninCB> {
} _CMD_Login_OnSigninCB_default_instance_;
class CMD_Login_OnRequestAllocClientCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Login_OnRequestAllocClientCB> {
} _CMD_Login_OnRequestAllocClientCB_default_instance_;
class CMD_Dbmgr_WriteAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Dbmgr_WriteAccount> {
} _CMD_Dbmgr_WriteAccount_default_instance_;
class CMD_Dbmgr_QueryAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Dbmgr_QueryAccount> {
} _CMD_Dbmgr_QueryAccount_default_instance_;
class CMD_Dbmgr_UpdateAccountDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Dbmgr_UpdateAccountData> {
} _CMD_Dbmgr_UpdateAccountData_default_instance_;
class CMD_Dbmgr_WritePlayerGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Dbmgr_WritePlayerGameData> {
} _CMD_Dbmgr_WritePlayerGameData_default_instance_;
class CMD_Dbmgr_QueryPlayerGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Dbmgr_QueryPlayerGameData> {
} _CMD_Dbmgr_QueryPlayerGameData_default_instance_;
class CMD_Halls_PlayerGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_PlayerGameData> {
} _CMD_Halls_PlayerGameData_default_instance_;
class CMD_Halls_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_Login> {
} _CMD_Halls_Login_default_instance_;
class CMD_Halls_RequestAllocClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_RequestAllocClient> {
} _CMD_Halls_RequestAllocClient_default_instance_;
class CMD_Halls_StartMatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_StartMatch> {
} _CMD_Halls_StartMatch_default_instance_;
class CMD_Halls_CancelMatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_CancelMatch> {
} _CMD_Halls_CancelMatch_default_instance_;
class CMD_Halls_OnRequestCreateRoomCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_OnRequestCreateRoomCB> {
} _CMD_Halls_OnRequestCreateRoomCB_default_instance_;
class CMD_Halls_OnRoomSrvGameOverReportDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_OnRoomSrvGameOverReport> {
} _CMD_Halls_OnRoomSrvGameOverReport_default_instance_;
class CMD_Halls_OnQueryAccountCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_OnQueryAccountCB> {
} _CMD_Halls_OnQueryAccountCB_default_instance_;
class CMD_Halls_OnQueryPlayerGameDataCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_OnQueryPlayerGameDataCB> {
} _CMD_Halls_OnQueryPlayerGameDataCB_default_instance_;
class CMD_Halls_QueryPlayerGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_QueryPlayerGameData> {
} _CMD_Halls_QueryPlayerGameData_default_instance_;
class CMD_Halls_ListGamesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Halls_ListGames> {
} _CMD_Halls_ListGames_default_instance_;
class CMD_Hallsmgr_RequestAllocClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Hallsmgr_RequestAllocClient> {
} _CMD_Hallsmgr_RequestAllocClient_default_instance_;
class CMD_Hallsmgr_OnRequestAllocClientCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Hallsmgr_OnRequestAllocClientCB> {
} _CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_;
class CMD_RoomPlayerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_RoomPlayerInfo> {
} _CMD_RoomPlayerInfo_default_instance_;
class CMD_Roommgr_RequestCreateRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Roommgr_RequestCreateRoom> {
} _CMD_Roommgr_RequestCreateRoom_default_instance_;
class CMD_Roommgr_OnRequestCreateRoomCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Roommgr_OnRequestCreateRoomCB> {
} _CMD_Roommgr_OnRequestCreateRoomCB_default_instance_;
class CMD_Roommgr_OnRoomSrvGameOverReportDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Roommgr_OnRoomSrvGameOverReport> {
} _CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_;
class CMD_Machine_RequestCreateRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Machine_RequestCreateRoom> {
} _CMD_Machine_RequestCreateRoom_default_instance_;
class CMD_Machine_RoomSrvReportAddrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Machine_RoomSrvReportAddr> {
} _CMD_Machine_RoomSrvReportAddr_default_instance_;
class CMD_Machine_OnRoomSrvGameOverReportDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Machine_OnRoomSrvGameOverReport> {
} _CMD_Machine_OnRoomSrvGameOverReport_default_instance_;
class CMD_ListServersInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_ListServersInfo> {
} _CMD_ListServersInfo_default_instance_;
class CMD_Client_OnListServersCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnListServersCB> {
} _CMD_Client_OnListServersCB_default_instance_;
class CMD_Client_OnSignupCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnSignupCB> {
} _CMD_Client_OnSignupCB_default_instance_;
class CMD_Client_OnSigninCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnSigninCB> {
} _CMD_Client_OnSigninCB_default_instance_;
class CMD_PlayerContextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_PlayerContext> {
} _CMD_PlayerContext_default_instance_;
class CMD_Client_UpdatePlayerContextDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_UpdatePlayerContext> {
} _CMD_Client_UpdatePlayerContext_default_instance_;
class CMD_GameModeInfosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_GameModeInfos> {
} _CMD_GameModeInfos_default_instance_;
class CMD_GameInfosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_GameInfos> {
} _CMD_GameInfos_default_instance_;
class CMD_Client_OnListGamesCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnListGamesCB> {
} _CMD_Client_OnListGamesCB_default_instance_;
class CMD_Client_OnLoginCBDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnLoginCB> {
} _CMD_Client_OnLoginCB_default_instance_;
class CMD_Client_OnMatchingUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnMatchingUpdate> {
} _CMD_Client_OnMatchingUpdate_default_instance_;
class CMD_Client_OnEndMatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnEndMatch> {
} _CMD_Client_OnEndMatch_default_instance_;
class CMD_Client_OnGameOverDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnGameOver> {
} _CMD_Client_OnGameOver_default_instance_;
class CMD_Client_OnCancelMatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_Client_OnCancelMatch> {
} _CMD_Client_OnCancelMatch_default_instance_;

namespace protobuf_Commands_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[58];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Unkown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, appgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hello, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, appgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HelloCB, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Heartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Heartbeat, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Heartbeat, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HeartbeatCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HeartbeatCB, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_HeartbeatCB, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Version_Not_Match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Version_Not_Match, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Version_Not_Match, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Version_Not_Match, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, internal_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, internal_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, external_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, external_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, playernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, sessionnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, appgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_UpdateServerInfos, child_srvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfos, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfos, appgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfos, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfos, maxnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfosCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_QueryServerInfosCB, srvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Ping, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Pong, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ForwardPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ForwardPacket, requestorid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ForwardPacket, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ForwardPacket, msgcmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RemoteDisconnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Directory_ListServers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signup, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signup, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signup, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSignupCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSignupCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSignupCB, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSignupCB, realaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSignupCB, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signin, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signin, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_Signin, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, realaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, foundobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnSigninCB, foundappid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Login_OnRequestAllocClientCB, tokenid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WriteAccount, gold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, queryappid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, querytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryAccount, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_UpdateAccountData, gold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, topscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, victory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_WritePlayerGameData, defeat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryPlayerGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryPlayerGameData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryPlayerGameData, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Dbmgr_QueryPlayerGameData, gamemode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_PlayerGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_PlayerGameData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_PlayerGameData, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_PlayerGameData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_PlayerGameData, victory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_Login, tokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_Login, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_Login, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_Login, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, foundobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_RequestAllocClient, loginsessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_StartMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_StartMatch, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_StartMatch, gamemode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_CancelMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, tokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRequestCreateRoomCB, errcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRoomSrvGameOverReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRoomSrvGameOverReport, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRoomSrvGameOverReport, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnRoomSrvGameOverReport, playerdatas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, foundobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryAccountCB, querytype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, topscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, victory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, defeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_OnQueryPlayerGameDataCB, errcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_QueryPlayerGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_QueryPlayerGameData, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_QueryPlayerGameData, gamemode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_ListGames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_ListGames, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_ListGames, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Halls_ListGames, maxnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, foundobjectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_RequestAllocClient, foundappid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, commitaccountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, loginsessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Hallsmgr_OnRequestAllocClientCB, tokenid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, clientaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, topscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, victory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, defeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_RoomPlayerInfo, playermodelid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, maxplayernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, exefile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_RequestCreateRoom, exeoptions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, tokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRequestCreateRoomCB, errcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRoomSrvGameOverReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRoomSrvGameOverReport, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRoomSrvGameOverReport, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRoomSrvGameOverReport, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Roommgr_OnRoomSrvGameOverReport, playerdatas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, maxplayernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, exefile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, exeoptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, tokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, roommgrip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RequestCreateRoom, roommgrport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_RoomSrvReportAddr, errcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_OnRoomSrvGameOverReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_OnRoomSrvGameOverReport, hallsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_OnRoomSrvGameOverReport, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_OnRoomSrvGameOverReport, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Machine_OnRoomSrvGameOverReport, playerdatas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ListServersInfo, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListServersCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListServersCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListServersCB, srvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSignupCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSignupCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSignupCB, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnSigninCB, tokenid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, playermodelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gameserverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gameserverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gameservertokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gamemaxplayernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, playergametopscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_PlayerContext, gameplayers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_UpdatePlayerContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_UpdatePlayerContext, playercontext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameModeInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameModeInfos, gamemodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameModeInfos, gamemodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameModeInfos, playermax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameModeInfos, gametime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, gamename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, url_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, url_apk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_GameInfos, gamemodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListGamesCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListGamesCB, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListGamesCB, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListGamesCB, totalgamesnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnListGamesCB, gameinfos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnLoginCB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnLoginCB, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnLoginCB, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnLoginCB, playercontext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnLoginCB, hallsid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnMatchingUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnMatchingUpdate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnMatchingUpdate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnMatchingUpdate, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnMatchingUpdate, enter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gameserverip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gameserverport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gameservertokenid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gameplayersize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, topscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, victory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, defeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnEndMatch, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnGameOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnGameOver, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnGameOver, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnGameOver, gamemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnGameOver, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnCancelMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_Client_OnCancelMatch, errcode_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CMD_Unkown)},
  { 4, -1, sizeof(CMD_Hello)},
  { 13, -1, sizeof(CMD_HelloCB)},
  { 22, -1, sizeof(CMD_Heartbeat)},
  { 28, -1, sizeof(CMD_HeartbeatCB)},
  { 34, -1, sizeof(CMD_Version_Not_Match)},
  { 41, -1, sizeof(CMD_UpdateServerInfos)},
  { 57, -1, sizeof(CMD_QueryServerInfos)},
  { 65, -1, sizeof(CMD_QueryServerInfosCB)},
  { 70, -1, sizeof(CMD_Ping)},
  { 75, -1, sizeof(CMD_Pong)},
  { 80, -1, sizeof(CMD_ForwardPacket)},
  { 87, -1, sizeof(CMD_RemoteDisconnected)},
  { 91, -1, sizeof(CMD_Directory_ListServers)},
  { 95, -1, sizeof(CMD_Login_Signup)},
  { 102, -1, sizeof(CMD_Login_OnSignupCB)},
  { 110, -1, sizeof(CMD_Login_Signin)},
  { 117, -1, sizeof(CMD_Login_OnSigninCB)},
  { 127, -1, sizeof(CMD_Login_OnRequestAllocClientCB)},
  { 136, -1, sizeof(CMD_Dbmgr_WriteAccount)},
  { 148, -1, sizeof(CMD_Dbmgr_QueryAccount)},
  { 158, -1, sizeof(CMD_Dbmgr_UpdateAccountData)},
  { 167, -1, sizeof(CMD_Dbmgr_WritePlayerGameData)},
  { 178, -1, sizeof(CMD_Dbmgr_QueryPlayerGameData)},
  { 185, -1, sizeof(CMD_Halls_PlayerGameData)},
  { 193, -1, sizeof(CMD_Halls_Login)},
  { 201, -1, sizeof(CMD_Halls_RequestAllocClient)},
  { 210, -1, sizeof(CMD_Halls_StartMatch)},
  { 216, -1, sizeof(CMD_Halls_CancelMatch)},
  { 220, -1, sizeof(CMD_Halls_OnRequestCreateRoomCB)},
  { 229, -1, sizeof(CMD_Halls_OnRoomSrvGameOverReport)},
  { 236, -1, sizeof(CMD_Halls_OnQueryAccountCB)},
  { 249, -1, sizeof(CMD_Halls_OnQueryPlayerGameDataCB)},
  { 261, -1, sizeof(CMD_Halls_QueryPlayerGameData)},
  { 267, -1, sizeof(CMD_Halls_ListGames)},
  { 274, -1, sizeof(CMD_Hallsmgr_RequestAllocClient)},
  { 283, -1, sizeof(CMD_Hallsmgr_OnRequestAllocClientCB)},
  { 293, -1, sizeof(CMD_RoomPlayerInfo)},
  { 306, -1, sizeof(CMD_Roommgr_RequestCreateRoom)},
  { 319, -1, sizeof(CMD_Roommgr_OnRequestCreateRoomCB)},
  { 329, -1, sizeof(CMD_Roommgr_OnRoomSrvGameOverReport)},
  { 337, -1, sizeof(CMD_Machine_RequestCreateRoom)},
  { 353, -1, sizeof(CMD_Machine_RoomSrvReportAddr)},
  { 362, -1, sizeof(CMD_Machine_OnRoomSrvGameOverReport)},
  { 370, -1, sizeof(CMD_ListServersInfo)},
  { 379, -1, sizeof(CMD_Client_OnListServersCB)},
  { 385, -1, sizeof(CMD_Client_OnSignupCB)},
  { 391, -1, sizeof(CMD_Client_OnSigninCB)},
  { 400, -1, sizeof(CMD_PlayerContext)},
  { 418, -1, sizeof(CMD_Client_UpdatePlayerContext)},
  { 423, -1, sizeof(CMD_GameModeInfos)},
  { 431, -1, sizeof(CMD_GameInfos)},
  { 442, -1, sizeof(CMD_Client_OnListGamesCB)},
  { 450, -1, sizeof(CMD_Client_OnLoginCB)},
  { 458, -1, sizeof(CMD_Client_OnMatchingUpdate)},
  { 466, -1, sizeof(CMD_Client_OnEndMatch)},
  { 482, -1, sizeof(CMD_Client_OnGameOver)},
  { 490, -1, sizeof(CMD_Client_OnCancelMatch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Unkown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Hello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_HelloCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Heartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_HeartbeatCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Version_Not_Match_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_UpdateServerInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_QueryServerInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_QueryServerInfosCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Pong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_ForwardPacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_RemoteDisconnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Directory_ListServers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Login_Signup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Login_OnSignupCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Login_Signin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Login_OnSigninCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Login_OnRequestAllocClientCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Dbmgr_WriteAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Dbmgr_QueryAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Dbmgr_UpdateAccountData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Dbmgr_WritePlayerGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Dbmgr_QueryPlayerGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_PlayerGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_RequestAllocClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_StartMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_CancelMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_OnRequestCreateRoomCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_OnRoomSrvGameOverReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_OnQueryAccountCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_OnQueryPlayerGameDataCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_QueryPlayerGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Halls_ListGames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Hallsmgr_RequestAllocClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_RoomPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Roommgr_RequestCreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Roommgr_OnRequestCreateRoomCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Machine_RequestCreateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Machine_RoomSrvReportAddr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Machine_OnRoomSrvGameOverReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_ListServersInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnListServersCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnSignupCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnSigninCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_PlayerContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_UpdatePlayerContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_GameModeInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_GameInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnListGamesCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnLoginCB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnMatchingUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnEndMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnGameOver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_Client_OnCancelMatch_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Commands.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 58);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMD_Unkown_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMD_Hello_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CMD_HelloCB_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CMD_Heartbeat_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CMD_HeartbeatCB_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CMD_Version_Not_Match_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CMD_UpdateServerInfos_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CMD_QueryServerInfos_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CMD_QueryServerInfosCB_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CMD_Ping_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CMD_Pong_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CMD_ForwardPacket_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CMD_RemoteDisconnected_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CMD_Directory_ListServers_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CMD_Login_Signup_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CMD_Login_OnSignupCB_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CMD_Login_Signin_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CMD_Login_OnSigninCB_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CMD_Login_OnRequestAllocClientCB_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CMD_Dbmgr_WriteAccount_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CMD_Dbmgr_QueryAccount_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CMD_Dbmgr_UpdateAccountData_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CMD_Dbmgr_WritePlayerGameData_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CMD_Dbmgr_QueryPlayerGameData_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CMD_Halls_PlayerGameData_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CMD_Halls_Login_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CMD_Halls_RequestAllocClient_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CMD_Halls_StartMatch_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CMD_Halls_CancelMatch_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CMD_Halls_OnRequestCreateRoomCB_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CMD_Halls_OnRoomSrvGameOverReport_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CMD_Halls_OnQueryAccountCB_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CMD_Halls_OnQueryPlayerGameDataCB_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _CMD_Halls_QueryPlayerGameData_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _CMD_Halls_ListGames_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _CMD_Hallsmgr_RequestAllocClient_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CMD_RoomPlayerInfo_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _CMD_Roommgr_RequestCreateRoom_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CMD_Roommgr_OnRequestCreateRoomCB_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CMD_Machine_RequestCreateRoom_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CMD_Machine_RoomSrvReportAddr_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CMD_Machine_OnRoomSrvGameOverReport_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _CMD_ListServersInfo_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CMD_Client_OnListServersCB_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _CMD_Client_OnSignupCB_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _CMD_Client_OnSigninCB_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CMD_PlayerContext_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _CMD_Client_UpdatePlayerContext_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _CMD_GameModeInfos_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _CMD_GameInfos_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _CMD_Client_OnListGamesCB_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _CMD_Client_OnLoginCB_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CMD_Client_OnMatchingUpdate_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _CMD_Client_OnEndMatch_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CMD_Client_OnGameOver_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _CMD_Client_OnCancelMatch_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_ServerCommon_2eproto::InitDefaults();
  _CMD_Unkown_default_instance_.DefaultConstruct();
  _CMD_Hello_default_instance_.DefaultConstruct();
  _CMD_HelloCB_default_instance_.DefaultConstruct();
  _CMD_Heartbeat_default_instance_.DefaultConstruct();
  _CMD_HeartbeatCB_default_instance_.DefaultConstruct();
  _CMD_Version_Not_Match_default_instance_.DefaultConstruct();
  _CMD_UpdateServerInfos_default_instance_.DefaultConstruct();
  _CMD_QueryServerInfos_default_instance_.DefaultConstruct();
  _CMD_QueryServerInfosCB_default_instance_.DefaultConstruct();
  _CMD_Ping_default_instance_.DefaultConstruct();
  _CMD_Pong_default_instance_.DefaultConstruct();
  _CMD_ForwardPacket_default_instance_.DefaultConstruct();
  _CMD_RemoteDisconnected_default_instance_.DefaultConstruct();
  _CMD_Directory_ListServers_default_instance_.DefaultConstruct();
  _CMD_Login_Signup_default_instance_.DefaultConstruct();
  _CMD_Login_OnSignupCB_default_instance_.DefaultConstruct();
  _CMD_Login_Signin_default_instance_.DefaultConstruct();
  _CMD_Login_OnSigninCB_default_instance_.DefaultConstruct();
  _CMD_Login_OnRequestAllocClientCB_default_instance_.DefaultConstruct();
  _CMD_Dbmgr_WriteAccount_default_instance_.DefaultConstruct();
  _CMD_Dbmgr_QueryAccount_default_instance_.DefaultConstruct();
  _CMD_Dbmgr_UpdateAccountData_default_instance_.DefaultConstruct();
  _CMD_Dbmgr_WritePlayerGameData_default_instance_.DefaultConstruct();
  _CMD_Dbmgr_QueryPlayerGameData_default_instance_.DefaultConstruct();
  _CMD_Halls_PlayerGameData_default_instance_.DefaultConstruct();
  _CMD_Halls_Login_default_instance_.DefaultConstruct();
  _CMD_Halls_RequestAllocClient_default_instance_.DefaultConstruct();
  _CMD_Halls_StartMatch_default_instance_.DefaultConstruct();
  _CMD_Halls_CancelMatch_default_instance_.DefaultConstruct();
  _CMD_Halls_OnRequestCreateRoomCB_default_instance_.DefaultConstruct();
  _CMD_Halls_OnRoomSrvGameOverReport_default_instance_.DefaultConstruct();
  _CMD_Halls_OnQueryAccountCB_default_instance_.DefaultConstruct();
  _CMD_Halls_OnQueryPlayerGameDataCB_default_instance_.DefaultConstruct();
  _CMD_Halls_QueryPlayerGameData_default_instance_.DefaultConstruct();
  _CMD_Halls_ListGames_default_instance_.DefaultConstruct();
  _CMD_Hallsmgr_RequestAllocClient_default_instance_.DefaultConstruct();
  _CMD_Hallsmgr_OnRequestAllocClientCB_default_instance_.DefaultConstruct();
  _CMD_RoomPlayerInfo_default_instance_.DefaultConstruct();
  _CMD_Roommgr_RequestCreateRoom_default_instance_.DefaultConstruct();
  _CMD_Roommgr_OnRequestCreateRoomCB_default_instance_.DefaultConstruct();
  _CMD_Roommgr_OnRoomSrvGameOverReport_default_instance_.DefaultConstruct();
  _CMD_Machine_RequestCreateRoom_default_instance_.DefaultConstruct();
  _CMD_Machine_RoomSrvReportAddr_default_instance_.DefaultConstruct();
  _CMD_Machine_OnRoomSrvGameOverReport_default_instance_.DefaultConstruct();
  _CMD_ListServersInfo_default_instance_.DefaultConstruct();
  _CMD_Client_OnListServersCB_default_instance_.DefaultConstruct();
  _CMD_Client_OnSignupCB_default_instance_.DefaultConstruct();
  _CMD_Client_OnSigninCB_default_instance_.DefaultConstruct();
  _CMD_PlayerContext_default_instance_.DefaultConstruct();
  _CMD_Client_UpdatePlayerContext_default_instance_.DefaultConstruct();
  _CMD_GameModeInfos_default_instance_.DefaultConstruct();
  _CMD_GameInfos_default_instance_.DefaultConstruct();
  _CMD_Client_OnListGamesCB_default_instance_.DefaultConstruct();
  _CMD_Client_OnLoginCB_default_instance_.DefaultConstruct();
  _CMD_Client_OnMatchingUpdate_default_instance_.DefaultConstruct();
  _CMD_Client_OnEndMatch_default_instance_.DefaultConstruct();
  _CMD_Client_OnGameOver_default_instance_.DefaultConstruct();
  _CMD_Client_OnCancelMatch_default_instance_.DefaultConstruct();
  _CMD_Client_UpdatePlayerContext_default_instance_.get_mutable()->playercontext_ = const_cast< ::CMD_PlayerContext*>(
      ::CMD_PlayerContext::internal_default_instance());
  _CMD_Client_OnLoginCB_default_instance_.get_mutable()->playercontext_ = const_cast< ::CMD_PlayerContext*>(
      ::CMD_PlayerContext::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016Commands.proto\032\022ServerCommon.proto\"\014\n\n"
      "CMD_Unkown\"Z\n\tCMD_Hello\022\017\n\007version\030\001 \001(\005"
      "\022\r\n\005appID\030\002 \001(\004\022\017\n\007appType\030\003 \001(\005\022\016\n\006appG"
      "ID\030\004 \001(\004\022\014\n\004name\030\005 \001(\t\"\\\n\013CMD_HelloCB\022\017\n"
      "\007version\030\001 \001(\005\022\r\n\005appID\030\002 \001(\004\022\017\n\007appType"
      "\030\003 \001(\005\022\016\n\006appGID\030\004 \001(\004\022\014\n\004name\030\005 \001(\t\"/\n\r"
      "CMD_Heartbeat\022\r\n\005appID\030\001 \001(\004\022\017\n\007appType\030"
      "\002 \001(\005\"1\n\017CMD_HeartbeatCB\022\r\n\005appID\030\001 \001(\004\022"
      "\017\n\007appType\030\002 \001(\005\"H\n\025CMD_Version_Not_Matc"
      "h\022\017\n\007version\030\001 \001(\005\022\r\n\005appID\030\002 \001(\004\022\017\n\007app"
      "Type\030\003 \001(\005\"\216\002\n\025CMD_UpdateServerInfos\022\r\n\005"
      "appID\030\001 \001(\004\022\017\n\007appType\030\002 \001(\005\022\023\n\013internal"
      "_ip\030\003 \001(\t\022\025\n\rinternal_port\030\004 \001(\r\022\023\n\013exte"
      "rnal_ip\030\005 \001(\t\022\025\n\rexternal_port\030\006 \001(\r\022\014\n\004"
      "load\030\007 \001(\002\022\021\n\tplayerNum\030\010 \001(\005\022\022\n\nsession"
      "Num\030\t \001(\005\022\016\n\006appGID\030\n \001(\004\022\014\n\004name\030\013 \001(\t\022"
      "*\n\nchild_srvs\030\014 \003(\0132\026.CMD_UpdateServerIn"
      "fos\"V\n\024CMD_QueryServerInfos\022\r\n\005appID\030\001 \001"
      "(\004\022\016\n\006appGID\030\002 \001(\004\022\017\n\007appType\030\003 \001(\005\022\016\n\006m"
      "axNum\030\004 \001(\005\">\n\026CMD_QueryServerInfosCB\022$\n"
      "\004srvs\030\001 \003(\0132\026.CMD_UpdateServerInfos\"\030\n\010C"
      "MD_Ping\022\014\n\004time\030\001 \001(\004\"\030\n\010CMD_Pong\022\014\n\004tim"
      "e\030\001 \001(\004\"G\n\021CMD_ForwardPacket\022\023\n\013requesto"
      "rID\030\001 \001(\004\022\r\n\005datas\030\002 \001(\014\022\016\n\006msgcmd\030\003 \001(\005"
      "\"\030\n\026CMD_RemoteDisconnected\"\033\n\031CMD_Direct"
      "ory_ListServers\"N\n\020CMD_Login_Signup\022\031\n\021c"
      "ommitAccountName\030\001 \001(\t\022\020\n\010password\030\002 \001(\t"
      "\022\r\n\005datas\030\003 \001(\014\"x\n\024CMD_Login_OnSignupCB\022"
      "\035\n\007errcode\030\001 \001(\0162\014.ServerError\022\031\n\021commit"
      "AccountName\030\002 \001(\t\022\027\n\017realAccountName\030\003 \001"
      "(\t\022\r\n\005datas\030\004 \001(\014\"N\n\020CMD_Login_Signin\022\031\n"
      "\021commitAccountName\030\001 \001(\t\022\020\n\010password\030\002 \001"
      "(\t\022\r\n\005datas\030\003 \001(\014\"\243\001\n\024CMD_Login_OnSignin"
      "CB\022\035\n\007errcode\030\001 \001(\0162\014.ServerError\022\031\n\021com"
      "mitAccountName\030\002 \001(\t\022\027\n\017realAccountName\030"
      "\003 \001(\t\022\r\n\005datas\030\004 \001(\014\022\025\n\rfoundObjectID\030\005 "
      "\001(\004\022\022\n\nfoundAppID\030\006 \001(\004\"\207\001\n CMD_Login_On"
      "RequestAllocClientCB\022\n\n\002ip\030\001 \001(\t\022\014\n\004port"
      "\030\002 \001(\005\022\031\n\021commitAccountName\030\003 \001(\t\022\035\n\007err"
      "code\030\004 \001(\0162\014.ServerError\022\017\n\007tokenID\030\005 \001("
      "\004\"\243\001\n\026CMD_Dbmgr_WriteAccount\022\r\n\005appID\030\001 "
      "\001(\004\022\031\n\021commitAccountName\030\002 \001(\t\022\020\n\010passwo"
      "rd\030\003 \001(\t\022\r\n\005datas\030\004 \001(\014\022\022\n\nplayerName\030\005 "
      "\001(\t\022\017\n\007modelID\030\006 \001(\005\022\013\n\003exp\030\007 \001(\005\022\014\n\004gol"
      "d\030\010 \001(\005\"\216\001\n\026CMD_Dbmgr_QueryAccount\022\031\n\021co"
      "mmitAccountName\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022"
      "\022\n\nqueryAppID\030\003 \001(\004\022\021\n\tqueryType\030\004 \001(\005\022\r"
      "\n\005datas\030\005 \001(\t\022\021\n\taccountID\030\006 \001(\004\"x\n\033CMD_"
      "Dbmgr_UpdateAccountData\022\031\n\021commitAccount"
      "Name\030\001 \001(\t\022\022\n\nplayerName\030\002 \001(\t\022\017\n\007modelI"
      "D\030\003 \001(\005\022\013\n\003exp\030\004 \001(\005\022\014\n\004gold\030\005 \001(\005\"\225\001\n\035C"
      "MD_Dbmgr_WritePlayerGameData\022\020\n\010playerID"
      "\030\001 \001(\004\022\r\n\005score\030\002 \001(\005\022\020\n\010topscore\030\003 \001(\005\022"
      "\016\n\006gameID\030\004 \001(\004\022\020\n\010gameMode\030\005 \001(\r\022\017\n\007vic"
      "tory\030\006 \001(\005\022\016\n\006defeat\030\007 \001(\005\"S\n\035CMD_Dbmgr_"
      "QueryPlayerGameData\022\020\n\010playerID\030\001 \001(\004\022\016\n"
      "\006gameID\030\002 \001(\004\022\020\n\010gameMode\030\003 \001(\r\"S\n\030CMD_H"
      "alls_PlayerGameData\022\013\n\003exp\030\001 \001(\005\022\r\n\005scor"
      "e\030\002 \001(\005\022\n\n\002id\030\003 \001(\004\022\017\n\007victory\030\004 \001(\010\"`\n\017"
      "CMD_Halls_Login\022\017\n\007tokenID\030\001 \001(\004\022\031\n\021comm"
      "itAccountName\030\002 \001(\t\022\017\n\007hallsID\030\003 \001(\004\022\020\n\010"
      "playerID\030\004 \001(\004\"\211\001\n\034CMD_Halls_RequestAllo"
      "cClient\022\031\n\021commitAccountName\030\001 \001(\t\022\020\n\010pa"
      "ssword\030\002 \001(\t\022\r\n\005datas\030\003 \001(\014\022\025\n\rfoundObje"
      "ctID\030\004 \001(\004\022\026\n\016loginSessionID\030\005 \001(\004\"8\n\024CM"
      "D_Halls_StartMatch\022\016\n\006gameID\030\001 \001(\004\022\020\n\010ga"
      "meMode\030\002 \001(\005\"\027\n\025CMD_Halls_CancelMatch\"{\n"
      "\037CMD_Halls_OnRequestCreateRoomCB\022\016\n\006room"
      "ID\030\001 \001(\004\022\n\n\002ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\022\017\n\007to"
      "kenID\030\004 \001(\004\022\035\n\007errcode\030\005 \001(\0162\014.ServerErr"
      "or\"\202\001\n!CMD_Halls_OnRoomSrvGameOverReport"
      "\022\016\n\006roomID\030\001 \001(\004\022\035\n\007errcode\030\002 \001(\0162\014.Serv"
      "erError\022.\n\013playerdatas\030\003 \003(\0132\031.CMD_Halls"
      "_PlayerGameData\"\317\001\n\032CMD_Halls_OnQueryAcc"
      "ountCB\022\031\n\021commitAccountName\030\001 \001(\t\022\r\n\005dat"
      "as\030\002 \001(\014\022\025\n\rfoundObjectID\030\003 \001(\004\022\022\n\nplaye"
      "rName\030\004 \001(\t\022\017\n\007modelID\030\005 \001(\005\022\013\n\003exp\030\006 \001("
      "\005\022\014\n\004gold\030\007 \001(\005\022\035\n\007errcode\030\010 \001(\0162\014.Serve"
      "rError\022\021\n\tqueryType\030\t \001(\005\"\270\001\n!CMD_Halls_"
      "OnQueryPlayerGameDataCB\022\020\n\010playerID\030\001 \001("
      "\004\022\r\n\005score\030\002 \001(\005\022\020\n\010topscore\030\003 \001(\005\022\016\n\006ga"
      "meID\030\004 \001(\004\022\020\n\010gameMode\030\005 \001(\r\022\017\n\007victory\030"
      "\006 \001(\005\022\016\n\006defeat\030\007 \001(\005\022\035\n\007errcode\030\010 \001(\0162\014"
      ".ServerError\"A\n\035CMD_Halls_QueryPlayerGam"
      "eData\022\016\n\006gameID\030\001 \001(\004\022\020\n\010gameMode\030\002 \001(\r\""
      "A\n\023CMD_Halls_ListGames\022\014\n\004page\030\001 \001(\r\022\014\n\004"
      "type\030\002 \001(\r\022\016\n\006maxNum\030\003 \001(\r\"\210\001\n\037CMD_Halls"
      "mgr_RequestAllocClient\022\031\n\021commitAccountN"
      "ame\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\r\n\005datas\030\003 \001"
      "(\014\022\025\n\rfoundObjectID\030\004 \001(\004\022\022\n\nfoundAppID\030"
      "\005 \001(\004\"\242\001\n#CMD_Hallsmgr_OnRequestAllocCli"
      "entCB\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\031\n\021commi"
      "tAccountName\030\003 \001(\t\022\035\n\007errcode\030\004 \001(\0162\014.Se"
      "rverError\022\026\n\016loginSessionID\030\005 \001(\004\022\017\n\007tok"
      "enID\030\006 \001(\004\"\264\001\n\022CMD_RoomPlayerInfo\022\020\n\010pla"
      "yerID\030\001 \001(\004\022\022\n\nclientAddr\030\002 \001(\t\022\013\n\003exp\030\003"
      " \001(\005\022\r\n\005score\030\004 \001(\005\022\020\n\010topscore\030\005 \001(\005\022\017\n"
      "\007victory\030\006 \001(\005\022\016\n\006defeat\030\007 \001(\005\022\022\n\nplayer"
      "Name\030\010 \001(\t\022\025\n\rplayerModelID\030\t \001(\005\"\325\001\n\035CM"
      "D_Roommgr_RequestCreateRoom\022\017\n\007hallsID\030\001"
      " \001(\004\022\016\n\006gameID\030\002 \001(\004\022\020\n\010gameMode\030\003 \001(\005\022\016"
      "\n\006roomID\030\004 \001(\004\022\024\n\014maxPlayerNum\030\005 \001(\005\022\020\n\010"
      "gameTime\030\006 \001(\002\022$\n\007players\030\007 \003(\0132\023.CMD_Ro"
      "omPlayerInfo\022\017\n\007exeFile\030\010 \001(\t\022\022\n\nexeOpti"
      "ons\030\t \001(\t\"\216\001\n!CMD_Roommgr_OnRequestCreat"
      "eRoomCB\022\017\n\007hallsID\030\001 \001(\004\022\016\n\006roomID\030\002 \001(\004"
      "\022\n\n\002ip\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\017\n\007tokenID\030\005 "
      "\001(\004\022\035\n\007errcode\030\006 \001(\0162\014.ServerError\"\225\001\n#C"
      "MD_Roommgr_OnRoomSrvGameOverReport\022\017\n\007ha"
      "llsID\030\001 \001(\004\022\016\n\006roomID\030\002 \001(\004\022\035\n\007errcode\030\003"
      " \001(\0162\014.ServerError\022.\n\013playerdatas\030\004 \003(\0132"
      "\031.CMD_Halls_PlayerGameData\"\216\002\n\035CMD_Machi"
      "ne_RequestCreateRoom\022\017\n\007hallsID\030\001 \001(\004\022\016\n"
      "\006gameID\030\002 \001(\004\022\020\n\010gameMode\030\003 \001(\005\022\016\n\006roomI"
      "D\030\004 \001(\004\022\024\n\014maxPlayerNum\030\005 \001(\005\022\020\n\010gameTim"
      "e\030\006 \001(\002\022$\n\007players\030\007 \003(\0132\023.CMD_RoomPlaye"
      "rInfo\022\017\n\007exeFile\030\010 \001(\t\022\022\n\nexeOptions\030\t \001"
      "(\t\022\017\n\007tokenID\030\n \001(\004\022\021\n\troommgrIP\030\013 \001(\t\022\023"
      "\n\013roommgrPort\030\014 \001(\005\"y\n\035CMD_Machine_RoomS"
      "rvReportAddr\022\017\n\007hallsID\030\001 \001(\004\022\016\n\006roomID\030"
      "\002 \001(\004\022\n\n\002ip\030\003 \001(\t\022\014\n\004port\030\004 \001(\005\022\035\n\007errco"
      "de\030\005 \001(\0162\014.ServerError\"\225\001\n#CMD_Machine_O"
      "nRoomSrvGameOverReport\022\017\n\007hallsID\030\001 \001(\004\022"
      "\016\n\006roomID\030\002 \001(\004\022\035\n\007errcode\030\003 \001(\0162\014.Serve"
      "rError\022.\n\013playerdatas\030\004 \003(\0132\031.CMD_Halls_"
      "PlayerGameData\"\\\n\023CMD_ListServersInfo\022\014\n"
      "\004addr\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\017\n\007groupid\030\003 \001"
      "(\004\022\014\n\004name\030\004 \001(\t\022\n\n\002id\030\005 \001(\004\"_\n\032CMD_Clie"
      "nt_OnListServersCB\022\035\n\007errcode\030\001 \001(\0162\014.Se"
      "rverError\022\"\n\004srvs\030\002 \003(\0132\024.CMD_ListServer"
      "sInfo\"E\n\025CMD_Client_OnSignupCB\022\035\n\007errcod"
      "e\030\001 \001(\0162\014.ServerError\022\r\n\005datas\030\002 \001(\014\"r\n\025"
      "CMD_Client_OnSigninCB\022\035\n\007errcode\030\001 \001(\0162\014"
      ".ServerError\022\r\n\005datas\030\002 \001(\014\022\014\n\004addr\030\003 \001("
      "\t\022\014\n\004port\030\004 \001(\005\022\017\n\007tokenID\030\005 \001(\004\"\312\002\n\021CMD"
      "_PlayerContext\022\020\n\010playerID\030\001 \001(\004\022\022\n\nplay"
      "erName\030\002 \001(\t\022\025\n\rplayerModelID\030\003 \001(\005\022\013\n\003e"
      "xp\030\004 \001(\005\022\016\n\006roomID\030\005 \001(\004\022\016\n\006gameID\030\006 \001(\004"
      "\022\020\n\010gameMode\030\007 \001(\005\022\024\n\014gameServerIP\030\010 \001(\t"
      "\022\026\n\016gameServerPort\030\t \001(\005\022\031\n\021gameServerTo"
      "kenID\030\n \001(\004\022\030\n\020gameMaxPlayerNum\030\013 \001(\005\022\020\n"
      "\010gameTime\030\014 \001(\002\022\032\n\022playerGameTopScore\030\r "
      "\001(\005\022(\n\013gamePlayers\030\016 \003(\0132\023.CMD_RoomPlaye"
      "rInfo\"K\n\036CMD_Client_UpdatePlayerContext\022"
      ")\n\rplayerContext\030\001 \001(\0132\022.CMD_PlayerConte"
      "xt\"b\n\021CMD_GameModeInfos\022\022\n\ngameModeID\030\001 "
      "\001(\r\022\024\n\014gameModeName\030\002 \001(\t\022\021\n\tplayerMax\030\003"
      " \001(\r\022\020\n\010gameTime\030\004 \001(\r\"\233\001\n\rCMD_GameInfos"
      "\022\016\n\006gameID\030\001 \001(\004\022\020\n\010gameMode\030\002 \001(\r\022\014\n\004ty"
      "pe\030\003 \001(\r\022\020\n\010gameName\030\004 \001(\t\022\020\n\010url_icon\030\005"
      " \001(\t\022\017\n\007url_apk\030\006 \001(\t\022%\n\tgameModes\030\007 \003(\013"
      "2\022.CMD_GameModeInfos\"p\n\030CMD_Client_OnLis"
      "tGamesCB\022\014\n\004page\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\025\n\r"
      "totalGamesNum\030\003 \001(\r\022!\n\tgameInfos\030\004 \003(\0132\016"
      ".CMD_GameInfos\"\200\001\n\024CMD_Client_OnLoginCB\022"
      "\035\n\007errcode\030\001 \001(\0162\014.ServerError\022\r\n\005datas\030"
      "\002 \001(\014\022)\n\rplayerContext\030\003 \001(\0132\022.CMD_Playe"
      "rContext\022\017\n\007hallsID\030\004 \001(\004\"W\n\033CMD_Client_"
      "OnMatchingUpdate\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001"
      "(\004\022\017\n\007modelID\030\003 \001(\005\022\r\n\005enter\030\004 \001(\010\"\216\002\n\025C"
      "MD_Client_OnEndMatch\022\035\n\007errcode\030\001 \001(\0162\014."
      "ServerError\022\024\n\014gameServerIP\030\002 \001(\t\022\026\n\016gam"
      "eServerPort\030\003 \001(\005\022\016\n\006gameID\030\004 \001(\004\022\020\n\010gam"
      "eMode\030\005 \001(\005\022\031\n\021gameServerTokenID\030\006 \001(\004\022\026"
      "\n\016gamePlayerSize\030\007 \001(\005\022\020\n\010topScore\030\010 \001(\005"
      "\022\017\n\007victory\030\t \001(\005\022\016\n\006defeat\030\n \001(\005\022\020\n\010gam"
      "eTime\030\013 \001(\002\022\016\n\006roomID\030\014 \001(\004\"h\n\025CMD_Clien"
      "t_OnGameOver\022\035\n\007errcode\030\001 \001(\0162\014.ServerEr"
      "ror\022\016\n\006gameID\030\002 \001(\004\022\020\n\010gameMode\030\003 \001(\005\022\016\n"
      "\006roomID\030\004 \001(\004\"9\n\030CMD_Client_OnCancelMatc"
      "h\022\035\n\007errcode\030\001 \001(\0162\014.ServerError*\225\r\n\003CMD"
      "\022\n\n\006Unkown\020\000\022\t\n\005Hello\020\001\022\013\n\007HelloCB\020\002\022\r\n\t"
      "Heartbeat\020\003\022\017\n\013HeartbeatCB\020\004\022\025\n\021Version_"
      "Not_Match\020\005\022\025\n\021UpdateServerInfos\020\006\022\024\n\020Qu"
      "eryServerInfos\020\007\022\026\n\022QueryServerInfosCB\020\010"
      "\022\010\n\004Ping\020\t\022\010\n\004Pong\020\n\022\021\n\rForwardPacket\020\013\022"
      "\026\n\022RemoteDisconnected\020\014\022\023\n\017Directory_Beg"
      "in\020e\022\031\n\025Directory_ListServers\020f\022\022\n\rDirec"
      "tory_End\020\310\001\022\020\n\013Login_Begin\020\311\001\022\021\n\014Login_S"
      "ignup\020\312\001\022\025\n\020Login_OnSignupCB\020\313\001\022\021\n\014Login"
      "_Signin\020\314\001\022\025\n\020Login_OnSigninCB\020\315\001\022!\n\034Log"
      "in_OnRequestAllocClientCB\020\316\001\022\016\n\tLogin_En"
      "d\020\254\002\022\020\n\013Dbmgr_Begin\020\255\002\022\027\n\022Dbmgr_WriteAcc"
      "ount\020\256\002\022\027\n\022Dbmgr_QueryAccount\020\257\002\022\034\n\027Dbmg"
      "r_UpdateAccountData\020\260\002\022\036\n\031Dbmgr_WritePla"
      "yerGameData\020\261\002\022\036\n\031Dbmgr_QueryPlayerGameD"
      "ata\020\262\002\022\016\n\tDbmgr_End\020\220\003\022\024\n\017Connector_Begi"
      "n\020\221\003\022\022\n\rConnector_End\020\364\003\022\020\n\013Halls_Begin\020"
      "\365\003\022\020\n\013Halls_Login\020\366\003\022\035\n\030Halls_RequestAll"
      "ocClient\020\367\003\022\025\n\020Halls_StartMatch\020\370\003\022\026\n\021Ha"
      "lls_CancelMatch\020\371\003\022 \n\033Halls_OnRequestCre"
      "ateRoomCB\020\372\003\022\"\n\035Halls_OnRoomSrvGameOverR"
      "eport\020\373\003\022\033\n\026Halls_OnQueryAccountCB\020\374\003\022\"\n"
      "\035Halls_OnQueryPlayerGameDataCB\020\375\003\022\036\n\031Hal"
      "ls_QueryPlayerGameData\020\376\003\022\024\n\017Halls_ListG"
      "ames\020\377\003\022\016\n\tHalls_End\020\330\004\022\023\n\016Hallsmgr_Begi"
      "n\020\331\004\022 \n\033Hallsmgr_RequestAllocClient\020\332\004\022$"
      "\n\037Hallsmgr_OnRequestAllocClientCB\020\333\004\022\021\n\014"
      "Hallsmgr_End\020\274\005\022\022\n\rRoommgr_Begin\020\275\005\022\036\n\031R"
      "oommgr_RequestCreateRoom\020\276\005\022\"\n\035Roommgr_O"
      "nRequestCreateRoomCB\020\277\005\022$\n\037Roommgr_OnRoo"
      "mSrvGameOverReport\020\300\005\022\020\n\013Roommgr_End\020\240\006\022"
      "\022\n\rMachine_Begin\020\241\006\022\036\n\031Machine_RequestCr"
      "eateRoom\020\242\006\022\036\n\031Machine_RoomSrvReportAddr"
      "\020\243\006\022$\n\037Machine_OnRoomSrvGameOverReport\020\244"
      "\006\022\020\n\013Machine_End\020\204\007\022\021\n\014Client_Begin\020\205\007\022\033"
      "\n\026Client_OnListServersCB\020\206\007\022\026\n\021Client_On"
      "SignupCB\020\207\007\022\026\n\021Client_OnSigninCB\020\210\007\022\025\n\020C"
      "lient_OnLoginCB\020\211\007\022\034\n\027Client_OnMatchingU"
      "pdate\020\212\007\022\026\n\021Client_OnEndMatch\020\213\007\022\026\n\021Clie"
      "nt_OnGameOver\020\214\007\022\031\n\024Client_OnCancelMatch"
      "\020\215\007\022\037\n\032Client_UpdatePlayerContext\020\216\007\022\031\n\024"
      "Client_OnListGamesCB\020\217\007\022\017\n\nClient_End\020\350\007"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8528);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Commands.proto", &protobuf_RegisterTypes);
  ::protobuf_ServerCommon_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Commands_2eproto

const ::google::protobuf::EnumDescriptor* CMD_descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_enum_descriptors[0];
}
bool CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 101:
    case 102:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 400:
    case 401:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 600:
    case 601:
    case 602:
    case 603:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 800:
    case 801:
    case 802:
    case 803:
    case 804:
    case 900:
    case 901:
    case 902:
    case 903:
    case 904:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 1000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Unkown::CMD_Unkown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Unkown)
}
CMD_Unkown::CMD_Unkown(const CMD_Unkown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMD_Unkown)
}

void CMD_Unkown::SharedCtor() {
  _cached_size_ = 0;
}

CMD_Unkown::~CMD_Unkown() {
  // @@protoc_insertion_point(destructor:CMD_Unkown)
  SharedDtor();
}

void CMD_Unkown::SharedDtor() {
}

void CMD_Unkown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Unkown::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[0].descriptor;
}

const CMD_Unkown& CMD_Unkown::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Unkown* CMD_Unkown::New(::google::protobuf::Arena* arena) const {
  CMD_Unkown* n = new CMD_Unkown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Unkown::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Unkown)
}

bool CMD_Unkown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Unkown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Unkown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Unkown)
  return false;
#undef DO_
}

void CMD_Unkown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Unkown)
  // @@protoc_insertion_point(serialize_end:CMD_Unkown)
}

::google::protobuf::uint8* CMD_Unkown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Unkown)
  // @@protoc_insertion_point(serialize_to_array_end:CMD_Unkown)
  return target;
}

size_t CMD_Unkown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Unkown)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Unkown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Unkown)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Unkown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Unkown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Unkown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Unkown)
    MergeFrom(*source);
  }
}

void CMD_Unkown::MergeFrom(const CMD_Unkown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Unkown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CMD_Unkown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Unkown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Unkown::CopyFrom(const CMD_Unkown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Unkown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Unkown::IsInitialized() const {
  return true;
}

void CMD_Unkown::Swap(CMD_Unkown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Unkown::InternalSwap(CMD_Unkown* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Unkown::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Unkown

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Hello::kVersionFieldNumber;
const int CMD_Hello::kAppIDFieldNumber;
const int CMD_Hello::kAppTypeFieldNumber;
const int CMD_Hello::kAppGIDFieldNumber;
const int CMD_Hello::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Hello::CMD_Hello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Hello)
}
CMD_Hello::CMD_Hello(const CMD_Hello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Hello)
}

void CMD_Hello::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  _cached_size_ = 0;
}

CMD_Hello::~CMD_Hello() {
  // @@protoc_insertion_point(destructor:CMD_Hello)
  SharedDtor();
}

void CMD_Hello::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Hello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Hello::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[1].descriptor;
}

const CMD_Hello& CMD_Hello::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Hello* CMD_Hello::New(::google::protobuf::Arena* arena) const {
  CMD_Hello* n = new CMD_Hello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Hello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Hello)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
}

bool CMD_Hello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Hello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appGID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Hello.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Hello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Hello)
  return false;
#undef DO_
}

void CMD_Hello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Hello)
  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->appid(), output);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apptype(), output);
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->appgid(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hello.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Hello)
}

::google::protobuf::uint8* CMD_Hello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Hello)
  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->appid(), target);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apptype(), target);
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->appgid(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hello.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Hello)
  return target;
}

size_t CMD_Hello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Hello)
  size_t total_size = 0;

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Hello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Hello)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Hello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Hello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Hello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Hello)
    MergeFrom(*source);
  }
}

void CMD_Hello::MergeFrom(const CMD_Hello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Hello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.appgid() != 0) {
    set_appgid(from.appgid());
  }
}

void CMD_Hello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Hello::CopyFrom(const CMD_Hello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Hello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Hello::IsInitialized() const {
  return true;
}

void CMD_Hello::Swap(CMD_Hello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Hello::InternalSwap(CMD_Hello* other) {
  name_.Swap(&other->name_);
  std::swap(appid_, other->appid_);
  std::swap(version_, other->version_);
  std::swap(apptype_, other->apptype_);
  std::swap(appgid_, other->appgid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Hello::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Hello

// int32 version = 1;
void CMD_Hello::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 CMD_Hello::version() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.version)
  return version_;
}
void CMD_Hello::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.version)
}

// uint64 appID = 2;
void CMD_Hello::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hello::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appID)
  return appid_;
}
void CMD_Hello::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appID)
}

// int32 appType = 3;
void CMD_Hello::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_Hello::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appType)
  return apptype_;
}
void CMD_Hello::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appType)
}

// uint64 appGID = 4;
void CMD_Hello::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hello::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.appGID)
  return appgid_;
}
void CMD_Hello::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hello.appGID)
}

// string name = 5;
void CMD_Hello::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hello::name() const {
  // @@protoc_insertion_point(field_get:CMD_Hello.name)
  return name_.GetNoArena();
}
void CMD_Hello::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hello.name)
}
#if LANG_CXX11
void CMD_Hello::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hello.name)
}
#endif
void CMD_Hello::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hello.name)
}
void CMD_Hello::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hello.name)
}
::std::string* CMD_Hello::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hello.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hello::release_name() {
  // @@protoc_insertion_point(field_release:CMD_Hello.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hello::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hello.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_HelloCB::kVersionFieldNumber;
const int CMD_HelloCB::kAppIDFieldNumber;
const int CMD_HelloCB::kAppTypeFieldNumber;
const int CMD_HelloCB::kAppGIDFieldNumber;
const int CMD_HelloCB::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_HelloCB::CMD_HelloCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_HelloCB)
}
CMD_HelloCB::CMD_HelloCB(const CMD_HelloCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  // @@protoc_insertion_point(copy_constructor:CMD_HelloCB)
}

void CMD_HelloCB::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  _cached_size_ = 0;
}

CMD_HelloCB::~CMD_HelloCB() {
  // @@protoc_insertion_point(destructor:CMD_HelloCB)
  SharedDtor();
}

void CMD_HelloCB::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_HelloCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_HelloCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[2].descriptor;
}

const CMD_HelloCB& CMD_HelloCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_HelloCB* CMD_HelloCB::New(::google::protobuf::Arena* arena) const {
  CMD_HelloCB* n = new CMD_HelloCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_HelloCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_HelloCB)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
}

bool CMD_HelloCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_HelloCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appGID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_HelloCB.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_HelloCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_HelloCB)
  return false;
#undef DO_
}

void CMD_HelloCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_HelloCB)
  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->appid(), output);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apptype(), output);
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->appgid(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_HelloCB.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_HelloCB)
}

::google::protobuf::uint8* CMD_HelloCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_HelloCB)
  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->appid(), target);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apptype(), target);
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->appgid(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_HelloCB.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_HelloCB)
  return target;
}

size_t CMD_HelloCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_HelloCB)
  size_t total_size = 0;

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // uint64 appGID = 4;
  if (this->appgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_HelloCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_HelloCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_HelloCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_HelloCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_HelloCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_HelloCB)
    MergeFrom(*source);
  }
}

void CMD_HelloCB::MergeFrom(const CMD_HelloCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_HelloCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.appgid() != 0) {
    set_appgid(from.appgid());
  }
}

void CMD_HelloCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_HelloCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_HelloCB::CopyFrom(const CMD_HelloCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_HelloCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_HelloCB::IsInitialized() const {
  return true;
}

void CMD_HelloCB::Swap(CMD_HelloCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_HelloCB::InternalSwap(CMD_HelloCB* other) {
  name_.Swap(&other->name_);
  std::swap(appid_, other->appid_);
  std::swap(version_, other->version_);
  std::swap(apptype_, other->apptype_);
  std::swap(appgid_, other->appgid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_HelloCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_HelloCB

// int32 version = 1;
void CMD_HelloCB::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 CMD_HelloCB::version() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.version)
  return version_;
}
void CMD_HelloCB::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.version)
}

// uint64 appID = 2;
void CMD_HelloCB::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_HelloCB::appid() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appID)
  return appid_;
}
void CMD_HelloCB::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appID)
}

// int32 appType = 3;
void CMD_HelloCB::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_HelloCB::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appType)
  return apptype_;
}
void CMD_HelloCB::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appType)
}

// uint64 appGID = 4;
void CMD_HelloCB::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_HelloCB::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.appGID)
  return appgid_;
}
void CMD_HelloCB::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HelloCB.appGID)
}

// string name = 5;
void CMD_HelloCB::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_HelloCB::name() const {
  // @@protoc_insertion_point(field_get:CMD_HelloCB.name)
  return name_.GetNoArena();
}
void CMD_HelloCB::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_HelloCB.name)
}
#if LANG_CXX11
void CMD_HelloCB::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_HelloCB.name)
}
#endif
void CMD_HelloCB::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_HelloCB.name)
}
void CMD_HelloCB::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_HelloCB.name)
}
::std::string* CMD_HelloCB::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_HelloCB.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_HelloCB::release_name() {
  // @@protoc_insertion_point(field_release:CMD_HelloCB.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_HelloCB::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_HelloCB.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Heartbeat::kAppIDFieldNumber;
const int CMD_Heartbeat::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Heartbeat::CMD_Heartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Heartbeat)
}
CMD_Heartbeat::CMD_Heartbeat(const CMD_Heartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  // @@protoc_insertion_point(copy_constructor:CMD_Heartbeat)
}

void CMD_Heartbeat::SharedCtor() {
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  _cached_size_ = 0;
}

CMD_Heartbeat::~CMD_Heartbeat() {
  // @@protoc_insertion_point(destructor:CMD_Heartbeat)
  SharedDtor();
}

void CMD_Heartbeat::SharedDtor() {
}

void CMD_Heartbeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Heartbeat::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[3].descriptor;
}

const CMD_Heartbeat& CMD_Heartbeat::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Heartbeat* CMD_Heartbeat::New(::google::protobuf::Arena* arena) const {
  CMD_Heartbeat* n = new CMD_Heartbeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Heartbeat)
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
}

bool CMD_Heartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Heartbeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Heartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Heartbeat)
  return false;
#undef DO_
}

void CMD_Heartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Heartbeat)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->apptype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Heartbeat)
}

::google::protobuf::uint8* CMD_Heartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Heartbeat)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->apptype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Heartbeat)
  return target;
}

size_t CMD_Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Heartbeat)
  size_t total_size = 0;

  // uint64 appID = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Heartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Heartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Heartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Heartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Heartbeat)
    MergeFrom(*source);
  }
}

void CMD_Heartbeat::MergeFrom(const CMD_Heartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Heartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
}

void CMD_Heartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Heartbeat::CopyFrom(const CMD_Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Heartbeat::IsInitialized() const {
  return true;
}

void CMD_Heartbeat::Swap(CMD_Heartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Heartbeat::InternalSwap(CMD_Heartbeat* other) {
  std::swap(appid_, other->appid_);
  std::swap(apptype_, other->apptype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Heartbeat::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Heartbeat

// uint64 appID = 1;
void CMD_Heartbeat::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Heartbeat::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Heartbeat.appID)
  return appid_;
}
void CMD_Heartbeat::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Heartbeat.appID)
}

// int32 appType = 2;
void CMD_Heartbeat::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_Heartbeat::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Heartbeat.appType)
  return apptype_;
}
void CMD_Heartbeat::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Heartbeat.appType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_HeartbeatCB::kAppIDFieldNumber;
const int CMD_HeartbeatCB::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_HeartbeatCB::CMD_HeartbeatCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_HeartbeatCB)
}
CMD_HeartbeatCB::CMD_HeartbeatCB(const CMD_HeartbeatCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  // @@protoc_insertion_point(copy_constructor:CMD_HeartbeatCB)
}

void CMD_HeartbeatCB::SharedCtor() {
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  _cached_size_ = 0;
}

CMD_HeartbeatCB::~CMD_HeartbeatCB() {
  // @@protoc_insertion_point(destructor:CMD_HeartbeatCB)
  SharedDtor();
}

void CMD_HeartbeatCB::SharedDtor() {
}

void CMD_HeartbeatCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_HeartbeatCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[4].descriptor;
}

const CMD_HeartbeatCB& CMD_HeartbeatCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_HeartbeatCB* CMD_HeartbeatCB::New(::google::protobuf::Arena* arena) const {
  CMD_HeartbeatCB* n = new CMD_HeartbeatCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_HeartbeatCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_HeartbeatCB)
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
}

bool CMD_HeartbeatCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_HeartbeatCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_HeartbeatCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_HeartbeatCB)
  return false;
#undef DO_
}

void CMD_HeartbeatCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_HeartbeatCB)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->apptype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_HeartbeatCB)
}

::google::protobuf::uint8* CMD_HeartbeatCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_HeartbeatCB)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->apptype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_HeartbeatCB)
  return target;
}

size_t CMD_HeartbeatCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_HeartbeatCB)
  size_t total_size = 0;

  // uint64 appID = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_HeartbeatCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_HeartbeatCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_HeartbeatCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_HeartbeatCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_HeartbeatCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_HeartbeatCB)
    MergeFrom(*source);
  }
}

void CMD_HeartbeatCB::MergeFrom(const CMD_HeartbeatCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_HeartbeatCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
}

void CMD_HeartbeatCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_HeartbeatCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_HeartbeatCB::CopyFrom(const CMD_HeartbeatCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_HeartbeatCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_HeartbeatCB::IsInitialized() const {
  return true;
}

void CMD_HeartbeatCB::Swap(CMD_HeartbeatCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_HeartbeatCB::InternalSwap(CMD_HeartbeatCB* other) {
  std::swap(appid_, other->appid_);
  std::swap(apptype_, other->apptype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_HeartbeatCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_HeartbeatCB

// uint64 appID = 1;
void CMD_HeartbeatCB::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_HeartbeatCB::appid() const {
  // @@protoc_insertion_point(field_get:CMD_HeartbeatCB.appID)
  return appid_;
}
void CMD_HeartbeatCB::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_HeartbeatCB.appID)
}

// int32 appType = 2;
void CMD_HeartbeatCB::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_HeartbeatCB::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_HeartbeatCB.appType)
  return apptype_;
}
void CMD_HeartbeatCB::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_HeartbeatCB.appType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Version_Not_Match::kVersionFieldNumber;
const int CMD_Version_Not_Match::kAppIDFieldNumber;
const int CMD_Version_Not_Match::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Version_Not_Match::CMD_Version_Not_Match()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Version_Not_Match)
}
CMD_Version_Not_Match::CMD_Version_Not_Match(const CMD_Version_Not_Match& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  // @@protoc_insertion_point(copy_constructor:CMD_Version_Not_Match)
}

void CMD_Version_Not_Match::SharedCtor() {
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
  _cached_size_ = 0;
}

CMD_Version_Not_Match::~CMD_Version_Not_Match() {
  // @@protoc_insertion_point(destructor:CMD_Version_Not_Match)
  SharedDtor();
}

void CMD_Version_Not_Match::SharedDtor() {
}

void CMD_Version_Not_Match::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Version_Not_Match::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[5].descriptor;
}

const CMD_Version_Not_Match& CMD_Version_Not_Match::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Version_Not_Match* CMD_Version_Not_Match::New(::google::protobuf::Arena* arena) const {
  CMD_Version_Not_Match* n = new CMD_Version_Not_Match;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Version_Not_Match::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Version_Not_Match)
  ::memset(&appid_, 0, reinterpret_cast<char*>(&apptype_) -
    reinterpret_cast<char*>(&appid_) + sizeof(apptype_));
}

bool CMD_Version_Not_Match::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Version_Not_Match)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Version_Not_Match)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Version_Not_Match)
  return false;
#undef DO_
}

void CMD_Version_Not_Match::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Version_Not_Match)
  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->appid(), output);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apptype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Version_Not_Match)
}

::google::protobuf::uint8* CMD_Version_Not_Match::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Version_Not_Match)
  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // uint64 appID = 2;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->appid(), target);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apptype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Version_Not_Match)
  return target;
}

size_t CMD_Version_Not_Match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Version_Not_Match)
  size_t total_size = 0;

  // uint64 appID = 2;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Version_Not_Match::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Version_Not_Match)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Version_Not_Match* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Version_Not_Match>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Version_Not_Match)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Version_Not_Match)
    MergeFrom(*source);
  }
}

void CMD_Version_Not_Match::MergeFrom(const CMD_Version_Not_Match& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Version_Not_Match)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
}

void CMD_Version_Not_Match::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Version_Not_Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Version_Not_Match::CopyFrom(const CMD_Version_Not_Match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Version_Not_Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Version_Not_Match::IsInitialized() const {
  return true;
}

void CMD_Version_Not_Match::Swap(CMD_Version_Not_Match* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Version_Not_Match::InternalSwap(CMD_Version_Not_Match* other) {
  std::swap(appid_, other->appid_);
  std::swap(version_, other->version_);
  std::swap(apptype_, other->apptype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Version_Not_Match::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Version_Not_Match

// int32 version = 1;
void CMD_Version_Not_Match::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 CMD_Version_Not_Match::version() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.version)
  return version_;
}
void CMD_Version_Not_Match::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.version)
}

// uint64 appID = 2;
void CMD_Version_Not_Match::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Version_Not_Match::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.appID)
  return appid_;
}
void CMD_Version_Not_Match::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.appID)
}

// int32 appType = 3;
void CMD_Version_Not_Match::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_Version_Not_Match::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_Version_Not_Match.appType)
  return apptype_;
}
void CMD_Version_Not_Match::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Version_Not_Match.appType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_UpdateServerInfos::kAppIDFieldNumber;
const int CMD_UpdateServerInfos::kAppTypeFieldNumber;
const int CMD_UpdateServerInfos::kInternalIpFieldNumber;
const int CMD_UpdateServerInfos::kInternalPortFieldNumber;
const int CMD_UpdateServerInfos::kExternalIpFieldNumber;
const int CMD_UpdateServerInfos::kExternalPortFieldNumber;
const int CMD_UpdateServerInfos::kLoadFieldNumber;
const int CMD_UpdateServerInfos::kPlayerNumFieldNumber;
const int CMD_UpdateServerInfos::kSessionNumFieldNumber;
const int CMD_UpdateServerInfos::kAppGIDFieldNumber;
const int CMD_UpdateServerInfos::kNameFieldNumber;
const int CMD_UpdateServerInfos::kChildSrvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_UpdateServerInfos::CMD_UpdateServerInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_UpdateServerInfos)
}
CMD_UpdateServerInfos::CMD_UpdateServerInfos(const CMD_UpdateServerInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_srvs_(from.child_srvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  internal_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.internal_ip().size() > 0) {
    internal_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_ip_);
  }
  external_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.external_ip().size() > 0) {
    external_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_ip_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  // @@protoc_insertion_point(copy_constructor:CMD_UpdateServerInfos)
}

void CMD_UpdateServerInfos::SharedCtor() {
  internal_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
  _cached_size_ = 0;
}

CMD_UpdateServerInfos::~CMD_UpdateServerInfos() {
  // @@protoc_insertion_point(destructor:CMD_UpdateServerInfos)
  SharedDtor();
}

void CMD_UpdateServerInfos::SharedDtor() {
  internal_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_UpdateServerInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_UpdateServerInfos::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[6].descriptor;
}

const CMD_UpdateServerInfos& CMD_UpdateServerInfos::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_UpdateServerInfos* CMD_UpdateServerInfos::New(::google::protobuf::Arena* arena) const {
  CMD_UpdateServerInfos* n = new CMD_UpdateServerInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_UpdateServerInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_UpdateServerInfos)
  child_srvs_.Clear();
  internal_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&appgid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(appgid_));
}

bool CMD_UpdateServerInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_UpdateServerInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string internal_ip = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->internal_ip().data(), this->internal_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_UpdateServerInfos.internal_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 internal_port = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &internal_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string external_ip = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->external_ip().data(), this->external_ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_UpdateServerInfos.external_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 external_port = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &external_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float load = 7;
      case 7: {
        if (tag == 61u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playerNum = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sessionNum = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appGID = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_UpdateServerInfos.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_UpdateServerInfos child_srvs = 12;
      case 12: {
        if (tag == 98u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_child_srvs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_UpdateServerInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_UpdateServerInfos)
  return false;
#undef DO_
}

void CMD_UpdateServerInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_UpdateServerInfos)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->apptype(), output);
  }

  // string internal_ip = 3;
  if (this->internal_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_ip().data(), this->internal_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.internal_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->internal_ip(), output);
  }

  // uint32 internal_port = 4;
  if (this->internal_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->internal_port(), output);
  }

  // string external_ip = 5;
  if (this->external_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_ip().data(), this->external_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.external_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->external_ip(), output);
  }

  // uint32 external_port = 6;
  if (this->external_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->external_port(), output);
  }

  // float load = 7;
  if (this->load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->load(), output);
  }

  // int32 playerNum = 8;
  if (this->playernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->playernum(), output);
  }

  // int32 sessionNum = 9;
  if (this->sessionnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->sessionnum(), output);
  }

  // uint64 appGID = 10;
  if (this->appgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->appgid(), output);
  }

  // string name = 11;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->name(), output);
  }

  // repeated .CMD_UpdateServerInfos child_srvs = 12;
  for (unsigned int i = 0, n = this->child_srvs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->child_srvs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_UpdateServerInfos)
}

::google::protobuf::uint8* CMD_UpdateServerInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_UpdateServerInfos)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->apptype(), target);
  }

  // string internal_ip = 3;
  if (this->internal_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_ip().data(), this->internal_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.internal_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->internal_ip(), target);
  }

  // uint32 internal_port = 4;
  if (this->internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->internal_port(), target);
  }

  // string external_ip = 5;
  if (this->external_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_ip().data(), this->external_ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.external_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->external_ip(), target);
  }

  // uint32 external_port = 6;
  if (this->external_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->external_port(), target);
  }

  // float load = 7;
  if (this->load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->load(), target);
  }

  // int32 playerNum = 8;
  if (this->playernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->playernum(), target);
  }

  // int32 sessionNum = 9;
  if (this->sessionnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->sessionnum(), target);
  }

  // uint64 appGID = 10;
  if (this->appgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->appgid(), target);
  }

  // string name = 11;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_UpdateServerInfos.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->name(), target);
  }

  // repeated .CMD_UpdateServerInfos child_srvs = 12;
  for (unsigned int i = 0, n = this->child_srvs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->child_srvs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_UpdateServerInfos)
  return target;
}

size_t CMD_UpdateServerInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_UpdateServerInfos)
  size_t total_size = 0;

  // repeated .CMD_UpdateServerInfos child_srvs = 12;
  {
    unsigned int count = this->child_srvs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->child_srvs(i));
    }
  }

  // string internal_ip = 3;
  if (this->internal_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->internal_ip());
  }

  // string external_ip = 5;
  if (this->external_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->external_ip());
  }

  // string name = 11;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 appID = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 appType = 2;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // uint32 internal_port = 4;
  if (this->internal_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->internal_port());
  }

  // uint32 external_port = 6;
  if (this->external_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->external_port());
  }

  // float load = 7;
  if (this->load() != 0) {
    total_size += 1 + 4;
  }

  // int32 playerNum = 8;
  if (this->playernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  // int32 sessionNum = 9;
  if (this->sessionnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionnum());
  }

  // uint64 appGID = 10;
  if (this->appgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_UpdateServerInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_UpdateServerInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_UpdateServerInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_UpdateServerInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_UpdateServerInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_UpdateServerInfos)
    MergeFrom(*source);
  }
}

void CMD_UpdateServerInfos::MergeFrom(const CMD_UpdateServerInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_UpdateServerInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  child_srvs_.MergeFrom(from.child_srvs_);
  if (from.internal_ip().size() > 0) {

    internal_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_ip_);
  }
  if (from.external_ip().size() > 0) {

    external_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_ip_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.internal_port() != 0) {
    set_internal_port(from.internal_port());
  }
  if (from.external_port() != 0) {
    set_external_port(from.external_port());
  }
  if (from.load() != 0) {
    set_load(from.load());
  }
  if (from.playernum() != 0) {
    set_playernum(from.playernum());
  }
  if (from.sessionnum() != 0) {
    set_sessionnum(from.sessionnum());
  }
  if (from.appgid() != 0) {
    set_appgid(from.appgid());
  }
}

void CMD_UpdateServerInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_UpdateServerInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_UpdateServerInfos::CopyFrom(const CMD_UpdateServerInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_UpdateServerInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_UpdateServerInfos::IsInitialized() const {
  return true;
}

void CMD_UpdateServerInfos::Swap(CMD_UpdateServerInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_UpdateServerInfos::InternalSwap(CMD_UpdateServerInfos* other) {
  child_srvs_.UnsafeArenaSwap(&other->child_srvs_);
  internal_ip_.Swap(&other->internal_ip_);
  external_ip_.Swap(&other->external_ip_);
  name_.Swap(&other->name_);
  std::swap(appid_, other->appid_);
  std::swap(apptype_, other->apptype_);
  std::swap(internal_port_, other->internal_port_);
  std::swap(external_port_, other->external_port_);
  std::swap(load_, other->load_);
  std::swap(playernum_, other->playernum_);
  std::swap(sessionnum_, other->sessionnum_);
  std::swap(appgid_, other->appgid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_UpdateServerInfos::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_UpdateServerInfos

// uint64 appID = 1;
void CMD_UpdateServerInfos::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_UpdateServerInfos::appid() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appID)
  return appid_;
}
void CMD_UpdateServerInfos::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appID)
}

// int32 appType = 2;
void CMD_UpdateServerInfos::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_UpdateServerInfos::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appType)
  return apptype_;
}
void CMD_UpdateServerInfos::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appType)
}

// string internal_ip = 3;
void CMD_UpdateServerInfos::clear_internal_ip() {
  internal_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_UpdateServerInfos::internal_ip() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.internal_ip)
  return internal_ip_.GetNoArena();
}
void CMD_UpdateServerInfos::set_internal_ip(const ::std::string& value) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.internal_ip)
}
#if LANG_CXX11
void CMD_UpdateServerInfos::set_internal_ip(::std::string&& value) {
  
  internal_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.internal_ip)
}
#endif
void CMD_UpdateServerInfos::set_internal_ip(const char* value) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.internal_ip)
}
void CMD_UpdateServerInfos::set_internal_ip(const char* value, size_t size) {
  
  internal_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.internal_ip)
}
::std::string* CMD_UpdateServerInfos::mutable_internal_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.internal_ip)
  return internal_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_UpdateServerInfos::release_internal_ip() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.internal_ip)
  
  return internal_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_UpdateServerInfos::set_allocated_internal_ip(::std::string* internal_ip) {
  if (internal_ip != NULL) {
    
  } else {
    
  }
  internal_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.internal_ip)
}

// uint32 internal_port = 4;
void CMD_UpdateServerInfos::clear_internal_port() {
  internal_port_ = 0u;
}
::google::protobuf::uint32 CMD_UpdateServerInfos::internal_port() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.internal_port)
  return internal_port_;
}
void CMD_UpdateServerInfos::set_internal_port(::google::protobuf::uint32 value) {
  
  internal_port_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.internal_port)
}

// string external_ip = 5;
void CMD_UpdateServerInfos::clear_external_ip() {
  external_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_UpdateServerInfos::external_ip() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.external_ip)
  return external_ip_.GetNoArena();
}
void CMD_UpdateServerInfos::set_external_ip(const ::std::string& value) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.external_ip)
}
#if LANG_CXX11
void CMD_UpdateServerInfos::set_external_ip(::std::string&& value) {
  
  external_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.external_ip)
}
#endif
void CMD_UpdateServerInfos::set_external_ip(const char* value) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.external_ip)
}
void CMD_UpdateServerInfos::set_external_ip(const char* value, size_t size) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.external_ip)
}
::std::string* CMD_UpdateServerInfos::mutable_external_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.external_ip)
  return external_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_UpdateServerInfos::release_external_ip() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.external_ip)
  
  return external_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_UpdateServerInfos::set_allocated_external_ip(::std::string* external_ip) {
  if (external_ip != NULL) {
    
  } else {
    
  }
  external_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.external_ip)
}

// uint32 external_port = 6;
void CMD_UpdateServerInfos::clear_external_port() {
  external_port_ = 0u;
}
::google::protobuf::uint32 CMD_UpdateServerInfos::external_port() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.external_port)
  return external_port_;
}
void CMD_UpdateServerInfos::set_external_port(::google::protobuf::uint32 value) {
  
  external_port_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.external_port)
}

// float load = 7;
void CMD_UpdateServerInfos::clear_load() {
  load_ = 0;
}
float CMD_UpdateServerInfos::load() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.load)
  return load_;
}
void CMD_UpdateServerInfos::set_load(float value) {
  
  load_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.load)
}

// int32 playerNum = 8;
void CMD_UpdateServerInfos::clear_playernum() {
  playernum_ = 0;
}
::google::protobuf::int32 CMD_UpdateServerInfos::playernum() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.playerNum)
  return playernum_;
}
void CMD_UpdateServerInfos::set_playernum(::google::protobuf::int32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.playerNum)
}

// int32 sessionNum = 9;
void CMD_UpdateServerInfos::clear_sessionnum() {
  sessionnum_ = 0;
}
::google::protobuf::int32 CMD_UpdateServerInfos::sessionnum() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.sessionNum)
  return sessionnum_;
}
void CMD_UpdateServerInfos::set_sessionnum(::google::protobuf::int32 value) {
  
  sessionnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.sessionNum)
}

// uint64 appGID = 10;
void CMD_UpdateServerInfos::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_UpdateServerInfos::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.appGID)
  return appgid_;
}
void CMD_UpdateServerInfos::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.appGID)
}

// string name = 11;
void CMD_UpdateServerInfos::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_UpdateServerInfos::name() const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.name)
  return name_.GetNoArena();
}
void CMD_UpdateServerInfos::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_UpdateServerInfos.name)
}
#if LANG_CXX11
void CMD_UpdateServerInfos::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_UpdateServerInfos.name)
}
#endif
void CMD_UpdateServerInfos::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_UpdateServerInfos.name)
}
void CMD_UpdateServerInfos::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_UpdateServerInfos.name)
}
::std::string* CMD_UpdateServerInfos::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_UpdateServerInfos::release_name() {
  // @@protoc_insertion_point(field_release:CMD_UpdateServerInfos.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_UpdateServerInfos::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_UpdateServerInfos.name)
}

// repeated .CMD_UpdateServerInfos child_srvs = 12;
int CMD_UpdateServerInfos::child_srvs_size() const {
  return child_srvs_.size();
}
void CMD_UpdateServerInfos::clear_child_srvs() {
  child_srvs_.Clear();
}
const ::CMD_UpdateServerInfos& CMD_UpdateServerInfos::child_srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Get(index);
}
::CMD_UpdateServerInfos* CMD_UpdateServerInfos::mutable_child_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Mutable(index);
}
::CMD_UpdateServerInfos* CMD_UpdateServerInfos::add_child_srvs() {
  // @@protoc_insertion_point(field_add:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
CMD_UpdateServerInfos::mutable_child_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_UpdateServerInfos.child_srvs)
  return &child_srvs_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
CMD_UpdateServerInfos::child_srvs() const {
  // @@protoc_insertion_point(field_list:CMD_UpdateServerInfos.child_srvs)
  return child_srvs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_QueryServerInfos::kAppIDFieldNumber;
const int CMD_QueryServerInfos::kAppGIDFieldNumber;
const int CMD_QueryServerInfos::kAppTypeFieldNumber;
const int CMD_QueryServerInfos::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_QueryServerInfos::CMD_QueryServerInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_QueryServerInfos)
}
CMD_QueryServerInfos::CMD_QueryServerInfos(const CMD_QueryServerInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&appid_) + sizeof(maxnum_));
  // @@protoc_insertion_point(copy_constructor:CMD_QueryServerInfos)
}

void CMD_QueryServerInfos::SharedCtor() {
  ::memset(&appid_, 0, reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&appid_) + sizeof(maxnum_));
  _cached_size_ = 0;
}

CMD_QueryServerInfos::~CMD_QueryServerInfos() {
  // @@protoc_insertion_point(destructor:CMD_QueryServerInfos)
  SharedDtor();
}

void CMD_QueryServerInfos::SharedDtor() {
}

void CMD_QueryServerInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_QueryServerInfos::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[7].descriptor;
}

const CMD_QueryServerInfos& CMD_QueryServerInfos::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_QueryServerInfos* CMD_QueryServerInfos::New(::google::protobuf::Arena* arena) const {
  CMD_QueryServerInfos* n = new CMD_QueryServerInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_QueryServerInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_QueryServerInfos)
  ::memset(&appid_, 0, reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&appid_) + sizeof(maxnum_));
}

bool CMD_QueryServerInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_QueryServerInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 appGID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 appType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxNum = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_QueryServerInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_QueryServerInfos)
  return false;
#undef DO_
}

void CMD_QueryServerInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_QueryServerInfos)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // uint64 appGID = 2;
  if (this->appgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->appgid(), output);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->apptype(), output);
  }

  // int32 maxNum = 4;
  if (this->maxnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_QueryServerInfos)
}

::google::protobuf::uint8* CMD_QueryServerInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_QueryServerInfos)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // uint64 appGID = 2;
  if (this->appgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->appgid(), target);
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->apptype(), target);
  }

  // int32 maxNum = 4;
  if (this->maxnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_QueryServerInfos)
  return target;
}

size_t CMD_QueryServerInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_QueryServerInfos)
  size_t total_size = 0;

  // uint64 appID = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // uint64 appGID = 2;
  if (this->appgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appgid());
  }

  // int32 appType = 3;
  if (this->apptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // int32 maxNum = 4;
  if (this->maxnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_QueryServerInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_QueryServerInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_QueryServerInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_QueryServerInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_QueryServerInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_QueryServerInfos)
    MergeFrom(*source);
  }
}

void CMD_QueryServerInfos::MergeFrom(const CMD_QueryServerInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_QueryServerInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.appgid() != 0) {
    set_appgid(from.appgid());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.maxnum() != 0) {
    set_maxnum(from.maxnum());
  }
}

void CMD_QueryServerInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_QueryServerInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_QueryServerInfos::CopyFrom(const CMD_QueryServerInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_QueryServerInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_QueryServerInfos::IsInitialized() const {
  return true;
}

void CMD_QueryServerInfos::Swap(CMD_QueryServerInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_QueryServerInfos::InternalSwap(CMD_QueryServerInfos* other) {
  std::swap(appid_, other->appid_);
  std::swap(appgid_, other->appgid_);
  std::swap(apptype_, other->apptype_);
  std::swap(maxnum_, other->maxnum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_QueryServerInfos::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_QueryServerInfos

// uint64 appID = 1;
void CMD_QueryServerInfos::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_QueryServerInfos::appid() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appID)
  return appid_;
}
void CMD_QueryServerInfos::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appID)
}

// uint64 appGID = 2;
void CMD_QueryServerInfos::clear_appgid() {
  appgid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_QueryServerInfos::appgid() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appGID)
  return appgid_;
}
void CMD_QueryServerInfos::set_appgid(::google::protobuf::uint64 value) {
  
  appgid_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appGID)
}

// int32 appType = 3;
void CMD_QueryServerInfos::clear_apptype() {
  apptype_ = 0;
}
::google::protobuf::int32 CMD_QueryServerInfos::apptype() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.appType)
  return apptype_;
}
void CMD_QueryServerInfos::set_apptype(::google::protobuf::int32 value) {
  
  apptype_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.appType)
}

// int32 maxNum = 4;
void CMD_QueryServerInfos::clear_maxnum() {
  maxnum_ = 0;
}
::google::protobuf::int32 CMD_QueryServerInfos::maxnum() const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfos.maxNum)
  return maxnum_;
}
void CMD_QueryServerInfos::set_maxnum(::google::protobuf::int32 value) {
  
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_QueryServerInfos.maxNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_QueryServerInfosCB::kSrvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_QueryServerInfosCB::CMD_QueryServerInfosCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_QueryServerInfosCB)
}
CMD_QueryServerInfosCB::CMD_QueryServerInfosCB(const CMD_QueryServerInfosCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      srvs_(from.srvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMD_QueryServerInfosCB)
}

void CMD_QueryServerInfosCB::SharedCtor() {
  _cached_size_ = 0;
}

CMD_QueryServerInfosCB::~CMD_QueryServerInfosCB() {
  // @@protoc_insertion_point(destructor:CMD_QueryServerInfosCB)
  SharedDtor();
}

void CMD_QueryServerInfosCB::SharedDtor() {
}

void CMD_QueryServerInfosCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_QueryServerInfosCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[8].descriptor;
}

const CMD_QueryServerInfosCB& CMD_QueryServerInfosCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_QueryServerInfosCB* CMD_QueryServerInfosCB::New(::google::protobuf::Arena* arena) const {
  CMD_QueryServerInfosCB* n = new CMD_QueryServerInfosCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_QueryServerInfosCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_QueryServerInfosCB)
  srvs_.Clear();
}

bool CMD_QueryServerInfosCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_QueryServerInfosCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMD_UpdateServerInfos srvs = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_srvs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_QueryServerInfosCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_QueryServerInfosCB)
  return false;
#undef DO_
}

void CMD_QueryServerInfosCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_QueryServerInfosCB)
  // repeated .CMD_UpdateServerInfos srvs = 1;
  for (unsigned int i = 0, n = this->srvs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->srvs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_QueryServerInfosCB)
}

::google::protobuf::uint8* CMD_QueryServerInfosCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_QueryServerInfosCB)
  // repeated .CMD_UpdateServerInfos srvs = 1;
  for (unsigned int i = 0, n = this->srvs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->srvs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_QueryServerInfosCB)
  return target;
}

size_t CMD_QueryServerInfosCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_QueryServerInfosCB)
  size_t total_size = 0;

  // repeated .CMD_UpdateServerInfos srvs = 1;
  {
    unsigned int count = this->srvs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->srvs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_QueryServerInfosCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_QueryServerInfosCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_QueryServerInfosCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_QueryServerInfosCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_QueryServerInfosCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_QueryServerInfosCB)
    MergeFrom(*source);
  }
}

void CMD_QueryServerInfosCB::MergeFrom(const CMD_QueryServerInfosCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_QueryServerInfosCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srvs_.MergeFrom(from.srvs_);
}

void CMD_QueryServerInfosCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_QueryServerInfosCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_QueryServerInfosCB::CopyFrom(const CMD_QueryServerInfosCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_QueryServerInfosCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_QueryServerInfosCB::IsInitialized() const {
  return true;
}

void CMD_QueryServerInfosCB::Swap(CMD_QueryServerInfosCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_QueryServerInfosCB::InternalSwap(CMD_QueryServerInfosCB* other) {
  srvs_.UnsafeArenaSwap(&other->srvs_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_QueryServerInfosCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_QueryServerInfosCB

// repeated .CMD_UpdateServerInfos srvs = 1;
int CMD_QueryServerInfosCB::srvs_size() const {
  return srvs_.size();
}
void CMD_QueryServerInfosCB::clear_srvs() {
  srvs_.Clear();
}
const ::CMD_UpdateServerInfos& CMD_QueryServerInfosCB::srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_QueryServerInfosCB.srvs)
  return srvs_.Get(index);
}
::CMD_UpdateServerInfos* CMD_QueryServerInfosCB::mutable_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_QueryServerInfosCB.srvs)
  return srvs_.Mutable(index);
}
::CMD_UpdateServerInfos* CMD_QueryServerInfosCB::add_srvs() {
  // @@protoc_insertion_point(field_add:CMD_QueryServerInfosCB.srvs)
  return srvs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >*
CMD_QueryServerInfosCB::mutable_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_QueryServerInfosCB.srvs)
  return &srvs_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_UpdateServerInfos >&
CMD_QueryServerInfosCB::srvs() const {
  // @@protoc_insertion_point(field_list:CMD_QueryServerInfosCB.srvs)
  return srvs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Ping::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Ping::CMD_Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Ping)
}
CMD_Ping::CMD_Ping(const CMD_Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:CMD_Ping)
}

void CMD_Ping::SharedCtor() {
  time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CMD_Ping::~CMD_Ping() {
  // @@protoc_insertion_point(destructor:CMD_Ping)
  SharedDtor();
}

void CMD_Ping::SharedDtor() {
}

void CMD_Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Ping::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[9].descriptor;
}

const CMD_Ping& CMD_Ping::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Ping* CMD_Ping::New(::google::protobuf::Arena* arena) const {
  CMD_Ping* n = new CMD_Ping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Ping)
  time_ = GOOGLE_ULONGLONG(0);
}

bool CMD_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Ping)
  return false;
#undef DO_
}

void CMD_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Ping)
  // uint64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Ping)
}

::google::protobuf::uint8* CMD_Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Ping)
  // uint64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Ping)
  return target;
}

size_t CMD_Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Ping)
  size_t total_size = 0;

  // uint64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Ping)
    MergeFrom(*source);
  }
}

void CMD_Ping::MergeFrom(const CMD_Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void CMD_Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Ping::CopyFrom(const CMD_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Ping::IsInitialized() const {
  return true;
}

void CMD_Ping::Swap(CMD_Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Ping::InternalSwap(CMD_Ping* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Ping::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Ping

// uint64 time = 1;
void CMD_Ping::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Ping::time() const {
  // @@protoc_insertion_point(field_get:CMD_Ping.time)
  return time_;
}
void CMD_Ping::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMD_Ping.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Pong::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Pong::CMD_Pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Pong)
}
CMD_Pong::CMD_Pong(const CMD_Pong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:CMD_Pong)
}

void CMD_Pong::SharedCtor() {
  time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CMD_Pong::~CMD_Pong() {
  // @@protoc_insertion_point(destructor:CMD_Pong)
  SharedDtor();
}

void CMD_Pong::SharedDtor() {
}

void CMD_Pong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Pong::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[10].descriptor;
}

const CMD_Pong& CMD_Pong::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Pong* CMD_Pong::New(::google::protobuf::Arena* arena) const {
  CMD_Pong* n = new CMD_Pong;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Pong)
  time_ = GOOGLE_ULONGLONG(0);
}

bool CMD_Pong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Pong)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 time = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Pong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Pong)
  return false;
#undef DO_
}

void CMD_Pong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Pong)
  // uint64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Pong)
}

::google::protobuf::uint8* CMD_Pong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Pong)
  // uint64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Pong)
  return target;
}

size_t CMD_Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Pong)
  size_t total_size = 0;

  // uint64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Pong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Pong)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Pong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Pong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Pong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Pong)
    MergeFrom(*source);
  }
}

void CMD_Pong::MergeFrom(const CMD_Pong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Pong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void CMD_Pong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Pong::CopyFrom(const CMD_Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Pong::IsInitialized() const {
  return true;
}

void CMD_Pong::Swap(CMD_Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Pong::InternalSwap(CMD_Pong* other) {
  std::swap(time_, other->time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Pong::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Pong

// uint64 time = 1;
void CMD_Pong::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Pong::time() const {
  // @@protoc_insertion_point(field_get:CMD_Pong.time)
  return time_;
}
void CMD_Pong::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMD_Pong.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_ForwardPacket::kRequestorIDFieldNumber;
const int CMD_ForwardPacket::kDatasFieldNumber;
const int CMD_ForwardPacket::kMsgcmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_ForwardPacket::CMD_ForwardPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_ForwardPacket)
}
CMD_ForwardPacket::CMD_ForwardPacket(const CMD_ForwardPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  ::memcpy(&requestorid_, &from.requestorid_,
    reinterpret_cast<char*>(&msgcmd_) -
    reinterpret_cast<char*>(&requestorid_) + sizeof(msgcmd_));
  // @@protoc_insertion_point(copy_constructor:CMD_ForwardPacket)
}

void CMD_ForwardPacket::SharedCtor() {
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestorid_, 0, reinterpret_cast<char*>(&msgcmd_) -
    reinterpret_cast<char*>(&requestorid_) + sizeof(msgcmd_));
  _cached_size_ = 0;
}

CMD_ForwardPacket::~CMD_ForwardPacket() {
  // @@protoc_insertion_point(destructor:CMD_ForwardPacket)
  SharedDtor();
}

void CMD_ForwardPacket::SharedDtor() {
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_ForwardPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_ForwardPacket::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[11].descriptor;
}

const CMD_ForwardPacket& CMD_ForwardPacket::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_ForwardPacket* CMD_ForwardPacket::New(::google::protobuf::Arena* arena) const {
  CMD_ForwardPacket* n = new CMD_ForwardPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_ForwardPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_ForwardPacket)
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestorid_, 0, reinterpret_cast<char*>(&msgcmd_) -
    reinterpret_cast<char*>(&requestorid_) + sizeof(msgcmd_));
}

bool CMD_ForwardPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_ForwardPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 requestorID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msgcmd = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgcmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_ForwardPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_ForwardPacket)
  return false;
#undef DO_
}

void CMD_ForwardPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_ForwardPacket)
  // uint64 requestorID = 1;
  if (this->requestorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestorid(), output);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->datas(), output);
  }

  // int32 msgcmd = 3;
  if (this->msgcmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->msgcmd(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_ForwardPacket)
}

::google::protobuf::uint8* CMD_ForwardPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_ForwardPacket)
  // uint64 requestorID = 1;
  if (this->requestorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestorid(), target);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->datas(), target);
  }

  // int32 msgcmd = 3;
  if (this->msgcmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->msgcmd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_ForwardPacket)
  return target;
}

size_t CMD_ForwardPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_ForwardPacket)
  size_t total_size = 0;

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // uint64 requestorID = 1;
  if (this->requestorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestorid());
  }

  // int32 msgcmd = 3;
  if (this->msgcmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_ForwardPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_ForwardPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_ForwardPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_ForwardPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_ForwardPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_ForwardPacket)
    MergeFrom(*source);
  }
}

void CMD_ForwardPacket::MergeFrom(const CMD_ForwardPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_ForwardPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.requestorid() != 0) {
    set_requestorid(from.requestorid());
  }
  if (from.msgcmd() != 0) {
    set_msgcmd(from.msgcmd());
  }
}

void CMD_ForwardPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_ForwardPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_ForwardPacket::CopyFrom(const CMD_ForwardPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_ForwardPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_ForwardPacket::IsInitialized() const {
  return true;
}

void CMD_ForwardPacket::Swap(CMD_ForwardPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_ForwardPacket::InternalSwap(CMD_ForwardPacket* other) {
  datas_.Swap(&other->datas_);
  std::swap(requestorid_, other->requestorid_);
  std::swap(msgcmd_, other->msgcmd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_ForwardPacket::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_ForwardPacket

// uint64 requestorID = 1;
void CMD_ForwardPacket::clear_requestorid() {
  requestorid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_ForwardPacket::requestorid() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.requestorID)
  return requestorid_;
}
void CMD_ForwardPacket::set_requestorid(::google::protobuf::uint64 value) {
  
  requestorid_ = value;
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.requestorID)
}

// bytes datas = 2;
void CMD_ForwardPacket::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_ForwardPacket::datas() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.datas)
  return datas_.GetNoArena();
}
void CMD_ForwardPacket::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.datas)
}
#if LANG_CXX11
void CMD_ForwardPacket::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ForwardPacket.datas)
}
#endif
void CMD_ForwardPacket::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ForwardPacket.datas)
}
void CMD_ForwardPacket::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ForwardPacket.datas)
}
::std::string* CMD_ForwardPacket::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ForwardPacket.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_ForwardPacket::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_ForwardPacket.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_ForwardPacket::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_ForwardPacket.datas)
}

// int32 msgcmd = 3;
void CMD_ForwardPacket::clear_msgcmd() {
  msgcmd_ = 0;
}
::google::protobuf::int32 CMD_ForwardPacket::msgcmd() const {
  // @@protoc_insertion_point(field_get:CMD_ForwardPacket.msgcmd)
  return msgcmd_;
}
void CMD_ForwardPacket::set_msgcmd(::google::protobuf::int32 value) {
  
  msgcmd_ = value;
  // @@protoc_insertion_point(field_set:CMD_ForwardPacket.msgcmd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_RemoteDisconnected::CMD_RemoteDisconnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_RemoteDisconnected)
}
CMD_RemoteDisconnected::CMD_RemoteDisconnected(const CMD_RemoteDisconnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMD_RemoteDisconnected)
}

void CMD_RemoteDisconnected::SharedCtor() {
  _cached_size_ = 0;
}

CMD_RemoteDisconnected::~CMD_RemoteDisconnected() {
  // @@protoc_insertion_point(destructor:CMD_RemoteDisconnected)
  SharedDtor();
}

void CMD_RemoteDisconnected::SharedDtor() {
}

void CMD_RemoteDisconnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_RemoteDisconnected::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[12].descriptor;
}

const CMD_RemoteDisconnected& CMD_RemoteDisconnected::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_RemoteDisconnected* CMD_RemoteDisconnected::New(::google::protobuf::Arena* arena) const {
  CMD_RemoteDisconnected* n = new CMD_RemoteDisconnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_RemoteDisconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_RemoteDisconnected)
}

bool CMD_RemoteDisconnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_RemoteDisconnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_RemoteDisconnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_RemoteDisconnected)
  return false;
#undef DO_
}

void CMD_RemoteDisconnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_RemoteDisconnected)
  // @@protoc_insertion_point(serialize_end:CMD_RemoteDisconnected)
}

::google::protobuf::uint8* CMD_RemoteDisconnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_RemoteDisconnected)
  // @@protoc_insertion_point(serialize_to_array_end:CMD_RemoteDisconnected)
  return target;
}

size_t CMD_RemoteDisconnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_RemoteDisconnected)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_RemoteDisconnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_RemoteDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_RemoteDisconnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_RemoteDisconnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_RemoteDisconnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_RemoteDisconnected)
    MergeFrom(*source);
  }
}

void CMD_RemoteDisconnected::MergeFrom(const CMD_RemoteDisconnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_RemoteDisconnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CMD_RemoteDisconnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_RemoteDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_RemoteDisconnected::CopyFrom(const CMD_RemoteDisconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_RemoteDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_RemoteDisconnected::IsInitialized() const {
  return true;
}

void CMD_RemoteDisconnected::Swap(CMD_RemoteDisconnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_RemoteDisconnected::InternalSwap(CMD_RemoteDisconnected* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_RemoteDisconnected::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_RemoteDisconnected

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Directory_ListServers::CMD_Directory_ListServers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Directory_ListServers)
}
CMD_Directory_ListServers::CMD_Directory_ListServers(const CMD_Directory_ListServers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMD_Directory_ListServers)
}

void CMD_Directory_ListServers::SharedCtor() {
  _cached_size_ = 0;
}

CMD_Directory_ListServers::~CMD_Directory_ListServers() {
  // @@protoc_insertion_point(destructor:CMD_Directory_ListServers)
  SharedDtor();
}

void CMD_Directory_ListServers::SharedDtor() {
}

void CMD_Directory_ListServers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Directory_ListServers::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[13].descriptor;
}

const CMD_Directory_ListServers& CMD_Directory_ListServers::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Directory_ListServers* CMD_Directory_ListServers::New(::google::protobuf::Arena* arena) const {
  CMD_Directory_ListServers* n = new CMD_Directory_ListServers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Directory_ListServers::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Directory_ListServers)
}

bool CMD_Directory_ListServers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Directory_ListServers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Directory_ListServers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Directory_ListServers)
  return false;
#undef DO_
}

void CMD_Directory_ListServers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Directory_ListServers)
  // @@protoc_insertion_point(serialize_end:CMD_Directory_ListServers)
}

::google::protobuf::uint8* CMD_Directory_ListServers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Directory_ListServers)
  // @@protoc_insertion_point(serialize_to_array_end:CMD_Directory_ListServers)
  return target;
}

size_t CMD_Directory_ListServers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Directory_ListServers)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Directory_ListServers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Directory_ListServers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Directory_ListServers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Directory_ListServers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Directory_ListServers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Directory_ListServers)
    MergeFrom(*source);
  }
}

void CMD_Directory_ListServers::MergeFrom(const CMD_Directory_ListServers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Directory_ListServers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CMD_Directory_ListServers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Directory_ListServers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Directory_ListServers::CopyFrom(const CMD_Directory_ListServers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Directory_ListServers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Directory_ListServers::IsInitialized() const {
  return true;
}

void CMD_Directory_ListServers::Swap(CMD_Directory_ListServers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Directory_ListServers::InternalSwap(CMD_Directory_ListServers* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Directory_ListServers::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Directory_ListServers

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Login_Signup::kCommitAccountNameFieldNumber;
const int CMD_Login_Signup::kPasswordFieldNumber;
const int CMD_Login_Signup::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Login_Signup::CMD_Login_Signup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Login_Signup)
}
CMD_Login_Signup::CMD_Login_Signup(const CMD_Login_Signup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  // @@protoc_insertion_point(copy_constructor:CMD_Login_Signup)
}

void CMD_Login_Signup::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CMD_Login_Signup::~CMD_Login_Signup() {
  // @@protoc_insertion_point(destructor:CMD_Login_Signup)
  SharedDtor();
}

void CMD_Login_Signup::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Login_Signup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Login_Signup::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[14].descriptor;
}

const CMD_Login_Signup& CMD_Login_Signup::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Login_Signup* CMD_Login_Signup::New(::google::protobuf::Arena* arena) const {
  CMD_Login_Signup* n = new CMD_Login_Signup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Login_Signup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Login_Signup)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMD_Login_Signup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Login_Signup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_Signup.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_Signup.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Login_Signup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Login_Signup)
  return false;
#undef DO_
}

void CMD_Login_Signup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Login_Signup)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signup.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signup.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->datas(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Login_Signup)
}

::google::protobuf::uint8* CMD_Login_Signup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Login_Signup)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signup.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signup.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->datas(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Login_Signup)
  return target;
}

size_t CMD_Login_Signup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Login_Signup)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Login_Signup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Login_Signup)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Login_Signup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Login_Signup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Login_Signup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Login_Signup)
    MergeFrom(*source);
  }
}

void CMD_Login_Signup::MergeFrom(const CMD_Login_Signup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Login_Signup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
}

void CMD_Login_Signup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Login_Signup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Login_Signup::CopyFrom(const CMD_Login_Signup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Login_Signup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Login_Signup::IsInitialized() const {
  return true;
}

void CMD_Login_Signup::Swap(CMD_Login_Signup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Login_Signup::InternalSwap(CMD_Login_Signup* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Login_Signup::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Login_Signup

// string commitAccountName = 1;
void CMD_Login_Signup::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signup::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Login_Signup::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.commitAccountName)
}
#if LANG_CXX11
void CMD_Login_Signup::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.commitAccountName)
}
#endif
void CMD_Login_Signup::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.commitAccountName)
}
void CMD_Login_Signup::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.commitAccountName)
}
::std::string* CMD_Login_Signup::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signup::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signup::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.commitAccountName)
}

// string password = 2;
void CMD_Login_Signup::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signup::password() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.password)
  return password_.GetNoArena();
}
void CMD_Login_Signup::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.password)
}
#if LANG_CXX11
void CMD_Login_Signup::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.password)
}
#endif
void CMD_Login_Signup::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.password)
}
void CMD_Login_Signup::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.password)
}
::std::string* CMD_Login_Signup::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signup::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signup::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.password)
}

// bytes datas = 3;
void CMD_Login_Signup::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signup::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signup.datas)
  return datas_.GetNoArena();
}
void CMD_Login_Signup::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signup.datas)
}
#if LANG_CXX11
void CMD_Login_Signup::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signup.datas)
}
#endif
void CMD_Login_Signup::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signup.datas)
}
void CMD_Login_Signup::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signup.datas)
}
::std::string* CMD_Login_Signup::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signup.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signup::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signup.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signup::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signup.datas)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Login_OnSignupCB::kErrcodeFieldNumber;
const int CMD_Login_OnSignupCB::kCommitAccountNameFieldNumber;
const int CMD_Login_OnSignupCB::kRealAccountNameFieldNumber;
const int CMD_Login_OnSignupCB::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Login_OnSignupCB::CMD_Login_OnSignupCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Login_OnSignupCB)
}
CMD_Login_OnSignupCB::CMD_Login_OnSignupCB(const CMD_Login_OnSignupCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  realaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.realaccountname().size() > 0) {
    realaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realaccountname_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:CMD_Login_OnSignupCB)
}

void CMD_Login_OnSignupCB::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _cached_size_ = 0;
}

CMD_Login_OnSignupCB::~CMD_Login_OnSignupCB() {
  // @@protoc_insertion_point(destructor:CMD_Login_OnSignupCB)
  SharedDtor();
}

void CMD_Login_OnSignupCB::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Login_OnSignupCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Login_OnSignupCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[15].descriptor;
}

const CMD_Login_OnSignupCB& CMD_Login_OnSignupCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Login_OnSignupCB* CMD_Login_OnSignupCB::New(::google::protobuf::Arena* arena) const {
  CMD_Login_OnSignupCB* n = new CMD_Login_OnSignupCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Login_OnSignupCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Login_OnSignupCB)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool CMD_Login_OnSignupCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Login_OnSignupCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnSignupCB.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string realAccountName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->realaccountname().data(), this->realaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnSignupCB.realAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Login_OnSignupCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Login_OnSignupCB)
  return false;
#undef DO_
}

void CMD_Login_OnSignupCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Login_OnSignupCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSignupCB.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commitaccountname(), output);
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realaccountname().data(), this->realaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSignupCB.realAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->realaccountname(), output);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->datas(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Login_OnSignupCB)
}

::google::protobuf::uint8* CMD_Login_OnSignupCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Login_OnSignupCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSignupCB.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->commitaccountname(), target);
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realaccountname().data(), this->realaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSignupCB.realAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->realaccountname(), target);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->datas(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Login_OnSignupCB)
  return target;
}

size_t CMD_Login_OnSignupCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Login_OnSignupCB)
  size_t total_size = 0;

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->realaccountname());
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Login_OnSignupCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Login_OnSignupCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Login_OnSignupCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Login_OnSignupCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Login_OnSignupCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Login_OnSignupCB)
    MergeFrom(*source);
  }
}

void CMD_Login_OnSignupCB::MergeFrom(const CMD_Login_OnSignupCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Login_OnSignupCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.realaccountname().size() > 0) {

    realaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realaccountname_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Login_OnSignupCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Login_OnSignupCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Login_OnSignupCB::CopyFrom(const CMD_Login_OnSignupCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Login_OnSignupCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Login_OnSignupCB::IsInitialized() const {
  return true;
}

void CMD_Login_OnSignupCB::Swap(CMD_Login_OnSignupCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Login_OnSignupCB::InternalSwap(CMD_Login_OnSignupCB* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  realaccountname_.Swap(&other->realaccountname_);
  datas_.Swap(&other->datas_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Login_OnSignupCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Login_OnSignupCB

// .ServerError errcode = 1;
void CMD_Login_OnSignupCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Login_OnSignupCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Login_OnSignupCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.errcode)
}

// string commitAccountName = 2;
void CMD_Login_OnSignupCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSignupCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Login_OnSignupCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.commitAccountName)
}
#if LANG_CXX11
void CMD_Login_OnSignupCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.commitAccountName)
}
#endif
void CMD_Login_OnSignupCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.commitAccountName)
}
void CMD_Login_OnSignupCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.commitAccountName)
}
::std::string* CMD_Login_OnSignupCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSignupCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSignupCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.commitAccountName)
}

// string realAccountName = 3;
void CMD_Login_OnSignupCB::clear_realaccountname() {
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSignupCB::realaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.realAccountName)
  return realaccountname_.GetNoArena();
}
void CMD_Login_OnSignupCB::set_realaccountname(const ::std::string& value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.realAccountName)
}
#if LANG_CXX11
void CMD_Login_OnSignupCB::set_realaccountname(::std::string&& value) {
  
  realaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.realAccountName)
}
#endif
void CMD_Login_OnSignupCB::set_realaccountname(const char* value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.realAccountName)
}
void CMD_Login_OnSignupCB::set_realaccountname(const char* value, size_t size) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.realAccountName)
}
::std::string* CMD_Login_OnSignupCB::mutable_realaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.realAccountName)
  return realaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSignupCB::release_realaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.realAccountName)
  
  return realaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSignupCB::set_allocated_realaccountname(::std::string* realaccountname) {
  if (realaccountname != NULL) {
    
  } else {
    
  }
  realaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.realAccountName)
}

// bytes datas = 4;
void CMD_Login_OnSignupCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSignupCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSignupCB.datas)
  return datas_.GetNoArena();
}
void CMD_Login_OnSignupCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSignupCB.datas)
}
#if LANG_CXX11
void CMD_Login_OnSignupCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSignupCB.datas)
}
#endif
void CMD_Login_OnSignupCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSignupCB.datas)
}
void CMD_Login_OnSignupCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSignupCB.datas)
}
::std::string* CMD_Login_OnSignupCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSignupCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSignupCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSignupCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSignupCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSignupCB.datas)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Login_Signin::kCommitAccountNameFieldNumber;
const int CMD_Login_Signin::kPasswordFieldNumber;
const int CMD_Login_Signin::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Login_Signin::CMD_Login_Signin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Login_Signin)
}
CMD_Login_Signin::CMD_Login_Signin(const CMD_Login_Signin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  // @@protoc_insertion_point(copy_constructor:CMD_Login_Signin)
}

void CMD_Login_Signin::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CMD_Login_Signin::~CMD_Login_Signin() {
  // @@protoc_insertion_point(destructor:CMD_Login_Signin)
  SharedDtor();
}

void CMD_Login_Signin::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Login_Signin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Login_Signin::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[16].descriptor;
}

const CMD_Login_Signin& CMD_Login_Signin::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Login_Signin* CMD_Login_Signin::New(::google::protobuf::Arena* arena) const {
  CMD_Login_Signin* n = new CMD_Login_Signin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Login_Signin::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Login_Signin)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMD_Login_Signin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Login_Signin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_Signin.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_Signin.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Login_Signin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Login_Signin)
  return false;
#undef DO_
}

void CMD_Login_Signin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Login_Signin)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signin.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->datas(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Login_Signin)
}

::google::protobuf::uint8* CMD_Login_Signin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Login_Signin)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signin.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_Signin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->datas(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Login_Signin)
  return target;
}

size_t CMD_Login_Signin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Login_Signin)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Login_Signin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Login_Signin)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Login_Signin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Login_Signin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Login_Signin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Login_Signin)
    MergeFrom(*source);
  }
}

void CMD_Login_Signin::MergeFrom(const CMD_Login_Signin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Login_Signin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
}

void CMD_Login_Signin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Login_Signin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Login_Signin::CopyFrom(const CMD_Login_Signin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Login_Signin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Login_Signin::IsInitialized() const {
  return true;
}

void CMD_Login_Signin::Swap(CMD_Login_Signin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Login_Signin::InternalSwap(CMD_Login_Signin* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Login_Signin::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Login_Signin

// string commitAccountName = 1;
void CMD_Login_Signin::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signin::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Login_Signin::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.commitAccountName)
}
#if LANG_CXX11
void CMD_Login_Signin::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.commitAccountName)
}
#endif
void CMD_Login_Signin::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.commitAccountName)
}
void CMD_Login_Signin::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.commitAccountName)
}
::std::string* CMD_Login_Signin::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signin::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signin::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.commitAccountName)
}

// string password = 2;
void CMD_Login_Signin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signin::password() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.password)
  return password_.GetNoArena();
}
void CMD_Login_Signin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.password)
}
#if LANG_CXX11
void CMD_Login_Signin::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.password)
}
#endif
void CMD_Login_Signin::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.password)
}
void CMD_Login_Signin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.password)
}
::std::string* CMD_Login_Signin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signin::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.password)
}

// bytes datas = 3;
void CMD_Login_Signin::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_Signin::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_Signin.datas)
  return datas_.GetNoArena();
}
void CMD_Login_Signin::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_Signin.datas)
}
#if LANG_CXX11
void CMD_Login_Signin::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_Signin.datas)
}
#endif
void CMD_Login_Signin::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_Signin.datas)
}
void CMD_Login_Signin::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_Signin.datas)
}
::std::string* CMD_Login_Signin::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_Signin.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_Signin::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_Signin.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_Signin::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_Signin.datas)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Login_OnSigninCB::kErrcodeFieldNumber;
const int CMD_Login_OnSigninCB::kCommitAccountNameFieldNumber;
const int CMD_Login_OnSigninCB::kRealAccountNameFieldNumber;
const int CMD_Login_OnSigninCB::kDatasFieldNumber;
const int CMD_Login_OnSigninCB::kFoundObjectIDFieldNumber;
const int CMD_Login_OnSigninCB::kFoundAppIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Login_OnSigninCB::CMD_Login_OnSigninCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Login_OnSigninCB)
}
CMD_Login_OnSigninCB::CMD_Login_OnSigninCB(const CMD_Login_OnSigninCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  realaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.realaccountname().size() > 0) {
    realaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realaccountname_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  ::memcpy(&foundobjectid_, &from.foundobjectid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Login_OnSigninCB)
}

void CMD_Login_OnSigninCB::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Login_OnSigninCB::~CMD_Login_OnSigninCB() {
  // @@protoc_insertion_point(destructor:CMD_Login_OnSigninCB)
  SharedDtor();
}

void CMD_Login_OnSigninCB::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Login_OnSigninCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Login_OnSigninCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[17].descriptor;
}

const CMD_Login_OnSigninCB& CMD_Login_OnSigninCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Login_OnSigninCB* CMD_Login_OnSigninCB::New(::google::protobuf::Arena* arena) const {
  CMD_Login_OnSigninCB* n = new CMD_Login_OnSigninCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Login_OnSigninCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Login_OnSigninCB)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(errcode_));
}

bool CMD_Login_OnSigninCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Login_OnSigninCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnSigninCB.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string realAccountName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->realaccountname().data(), this->realaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnSigninCB.realAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundObjectID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundobjectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundAppID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundappid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Login_OnSigninCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Login_OnSigninCB)
  return false;
#undef DO_
}

void CMD_Login_OnSigninCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Login_OnSigninCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSigninCB.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commitaccountname(), output);
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realaccountname().data(), this->realaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSigninCB.realAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->realaccountname(), output);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->datas(), output);
  }

  // uint64 foundObjectID = 5;
  if (this->foundobjectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->foundobjectid(), output);
  }

  // uint64 foundAppID = 6;
  if (this->foundappid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->foundappid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Login_OnSigninCB)
}

::google::protobuf::uint8* CMD_Login_OnSigninCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Login_OnSigninCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSigninCB.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->commitaccountname(), target);
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realaccountname().data(), this->realaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnSigninCB.realAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->realaccountname(), target);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->datas(), target);
  }

  // uint64 foundObjectID = 5;
  if (this->foundobjectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->foundobjectid(), target);
  }

  // uint64 foundAppID = 6;
  if (this->foundappid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->foundappid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Login_OnSigninCB)
  return target;
}

size_t CMD_Login_OnSigninCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Login_OnSigninCB)
  size_t total_size = 0;

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string realAccountName = 3;
  if (this->realaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->realaccountname());
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // uint64 foundObjectID = 5;
  if (this->foundobjectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundobjectid());
  }

  // uint64 foundAppID = 6;
  if (this->foundappid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundappid());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Login_OnSigninCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Login_OnSigninCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Login_OnSigninCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Login_OnSigninCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Login_OnSigninCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Login_OnSigninCB)
    MergeFrom(*source);
  }
}

void CMD_Login_OnSigninCB::MergeFrom(const CMD_Login_OnSigninCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Login_OnSigninCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.realaccountname().size() > 0) {

    realaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realaccountname_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.foundobjectid() != 0) {
    set_foundobjectid(from.foundobjectid());
  }
  if (from.foundappid() != 0) {
    set_foundappid(from.foundappid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Login_OnSigninCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Login_OnSigninCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Login_OnSigninCB::CopyFrom(const CMD_Login_OnSigninCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Login_OnSigninCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Login_OnSigninCB::IsInitialized() const {
  return true;
}

void CMD_Login_OnSigninCB::Swap(CMD_Login_OnSigninCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Login_OnSigninCB::InternalSwap(CMD_Login_OnSigninCB* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  realaccountname_.Swap(&other->realaccountname_);
  datas_.Swap(&other->datas_);
  std::swap(foundobjectid_, other->foundobjectid_);
  std::swap(foundappid_, other->foundappid_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Login_OnSigninCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Login_OnSigninCB

// .ServerError errcode = 1;
void CMD_Login_OnSigninCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Login_OnSigninCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Login_OnSigninCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.errcode)
}

// string commitAccountName = 2;
void CMD_Login_OnSigninCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSigninCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Login_OnSigninCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.commitAccountName)
}
#if LANG_CXX11
void CMD_Login_OnSigninCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.commitAccountName)
}
#endif
void CMD_Login_OnSigninCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.commitAccountName)
}
void CMD_Login_OnSigninCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.commitAccountName)
}
::std::string* CMD_Login_OnSigninCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSigninCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSigninCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.commitAccountName)
}

// string realAccountName = 3;
void CMD_Login_OnSigninCB::clear_realaccountname() {
  realaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSigninCB::realaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.realAccountName)
  return realaccountname_.GetNoArena();
}
void CMD_Login_OnSigninCB::set_realaccountname(const ::std::string& value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.realAccountName)
}
#if LANG_CXX11
void CMD_Login_OnSigninCB::set_realaccountname(::std::string&& value) {
  
  realaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.realAccountName)
}
#endif
void CMD_Login_OnSigninCB::set_realaccountname(const char* value) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.realAccountName)
}
void CMD_Login_OnSigninCB::set_realaccountname(const char* value, size_t size) {
  
  realaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.realAccountName)
}
::std::string* CMD_Login_OnSigninCB::mutable_realaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.realAccountName)
  return realaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSigninCB::release_realaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.realAccountName)
  
  return realaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSigninCB::set_allocated_realaccountname(::std::string* realaccountname) {
  if (realaccountname != NULL) {
    
  } else {
    
  }
  realaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.realAccountName)
}

// bytes datas = 4;
void CMD_Login_OnSigninCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnSigninCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.datas)
  return datas_.GetNoArena();
}
void CMD_Login_OnSigninCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.datas)
}
#if LANG_CXX11
void CMD_Login_OnSigninCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnSigninCB.datas)
}
#endif
void CMD_Login_OnSigninCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnSigninCB.datas)
}
void CMD_Login_OnSigninCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnSigninCB.datas)
}
::std::string* CMD_Login_OnSigninCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnSigninCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnSigninCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnSigninCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnSigninCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnSigninCB.datas)
}

// uint64 foundObjectID = 5;
void CMD_Login_OnSigninCB::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Login_OnSigninCB::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.foundObjectID)
  return foundobjectid_;
}
void CMD_Login_OnSigninCB::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.foundObjectID)
}

// uint64 foundAppID = 6;
void CMD_Login_OnSigninCB::clear_foundappid() {
  foundappid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Login_OnSigninCB::foundappid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnSigninCB.foundAppID)
  return foundappid_;
}
void CMD_Login_OnSigninCB::set_foundappid(::google::protobuf::uint64 value) {
  
  foundappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnSigninCB.foundAppID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Login_OnRequestAllocClientCB::kIpFieldNumber;
const int CMD_Login_OnRequestAllocClientCB::kPortFieldNumber;
const int CMD_Login_OnRequestAllocClientCB::kCommitAccountNameFieldNumber;
const int CMD_Login_OnRequestAllocClientCB::kErrcodeFieldNumber;
const int CMD_Login_OnRequestAllocClientCB::kTokenIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Login_OnRequestAllocClientCB::CMD_Login_OnRequestAllocClientCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Login_OnRequestAllocClientCB)
}
CMD_Login_OnRequestAllocClientCB::CMD_Login_OnRequestAllocClientCB(const CMD_Login_OnRequestAllocClientCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Login_OnRequestAllocClientCB)
}

void CMD_Login_OnRequestAllocClientCB::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
  _cached_size_ = 0;
}

CMD_Login_OnRequestAllocClientCB::~CMD_Login_OnRequestAllocClientCB() {
  // @@protoc_insertion_point(destructor:CMD_Login_OnRequestAllocClientCB)
  SharedDtor();
}

void CMD_Login_OnRequestAllocClientCB::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Login_OnRequestAllocClientCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Login_OnRequestAllocClientCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[18].descriptor;
}

const CMD_Login_OnRequestAllocClientCB& CMD_Login_OnRequestAllocClientCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Login_OnRequestAllocClientCB* CMD_Login_OnRequestAllocClientCB::New(::google::protobuf::Arena* arena) const {
  CMD_Login_OnRequestAllocClientCB* n = new CMD_Login_OnRequestAllocClientCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Login_OnRequestAllocClientCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Login_OnRequestAllocClientCB)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
}

bool CMD_Login_OnRequestAllocClientCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Login_OnRequestAllocClientCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnRequestAllocClientCB.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Login_OnRequestAllocClientCB.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Login_OnRequestAllocClientCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Login_OnRequestAllocClientCB)
  return false;
#undef DO_
}

void CMD_Login_OnRequestAllocClientCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Login_OnRequestAllocClientCB)
  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnRequestAllocClientCB.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnRequestAllocClientCB.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->commitaccountname(), output);
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->tokenid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Login_OnRequestAllocClientCB)
}

::google::protobuf::uint8* CMD_Login_OnRequestAllocClientCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Login_OnRequestAllocClientCB)
  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnRequestAllocClientCB.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Login_OnRequestAllocClientCB.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commitaccountname(), target);
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->errcode(), target);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->tokenid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Login_OnRequestAllocClientCB)
  return target;
}

size_t CMD_Login_OnRequestAllocClientCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Login_OnRequestAllocClientCB)
  size_t total_size = 0;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Login_OnRequestAllocClientCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Login_OnRequestAllocClientCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Login_OnRequestAllocClientCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Login_OnRequestAllocClientCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Login_OnRequestAllocClientCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Login_OnRequestAllocClientCB)
    MergeFrom(*source);
  }
}

void CMD_Login_OnRequestAllocClientCB::MergeFrom(const CMD_Login_OnRequestAllocClientCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Login_OnRequestAllocClientCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
}

void CMD_Login_OnRequestAllocClientCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Login_OnRequestAllocClientCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Login_OnRequestAllocClientCB::CopyFrom(const CMD_Login_OnRequestAllocClientCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Login_OnRequestAllocClientCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Login_OnRequestAllocClientCB::IsInitialized() const {
  return true;
}

void CMD_Login_OnRequestAllocClientCB::Swap(CMD_Login_OnRequestAllocClientCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Login_OnRequestAllocClientCB::InternalSwap(CMD_Login_OnRequestAllocClientCB* other) {
  ip_.Swap(&other->ip_);
  commitaccountname_.Swap(&other->commitaccountname_);
  std::swap(port_, other->port_);
  std::swap(errcode_, other->errcode_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Login_OnRequestAllocClientCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Login_OnRequestAllocClientCB

// string ip = 1;
void CMD_Login_OnRequestAllocClientCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnRequestAllocClientCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.ip)
  return ip_.GetNoArena();
}
void CMD_Login_OnRequestAllocClientCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.ip)
}
#if LANG_CXX11
void CMD_Login_OnRequestAllocClientCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnRequestAllocClientCB.ip)
}
#endif
void CMD_Login_OnRequestAllocClientCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnRequestAllocClientCB.ip)
}
void CMD_Login_OnRequestAllocClientCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnRequestAllocClientCB.ip)
}
::std::string* CMD_Login_OnRequestAllocClientCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnRequestAllocClientCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnRequestAllocClientCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnRequestAllocClientCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnRequestAllocClientCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnRequestAllocClientCB.ip)
}

// int32 port = 2;
void CMD_Login_OnRequestAllocClientCB::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Login_OnRequestAllocClientCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.port)
  return port_;
}
void CMD_Login_OnRequestAllocClientCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.port)
}

// string commitAccountName = 3;
void CMD_Login_OnRequestAllocClientCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Login_OnRequestAllocClientCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
#if LANG_CXX11
void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
#endif
void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
void CMD_Login_OnRequestAllocClientCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}
::std::string* CMD_Login_OnRequestAllocClientCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Login_OnRequestAllocClientCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Login_OnRequestAllocClientCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Login_OnRequestAllocClientCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Login_OnRequestAllocClientCB.commitAccountName)
}

// .ServerError errcode = 4;
void CMD_Login_OnRequestAllocClientCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Login_OnRequestAllocClientCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Login_OnRequestAllocClientCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.errcode)
}

// uint64 tokenID = 5;
void CMD_Login_OnRequestAllocClientCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Login_OnRequestAllocClientCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Login_OnRequestAllocClientCB.tokenID)
  return tokenid_;
}
void CMD_Login_OnRequestAllocClientCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Login_OnRequestAllocClientCB.tokenID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Dbmgr_WriteAccount::kAppIDFieldNumber;
const int CMD_Dbmgr_WriteAccount::kCommitAccountNameFieldNumber;
const int CMD_Dbmgr_WriteAccount::kPasswordFieldNumber;
const int CMD_Dbmgr_WriteAccount::kDatasFieldNumber;
const int CMD_Dbmgr_WriteAccount::kPlayerNameFieldNumber;
const int CMD_Dbmgr_WriteAccount::kModelIDFieldNumber;
const int CMD_Dbmgr_WriteAccount::kExpFieldNumber;
const int CMD_Dbmgr_WriteAccount::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Dbmgr_WriteAccount::CMD_Dbmgr_WriteAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Dbmgr_WriteAccount)
}
CMD_Dbmgr_WriteAccount::CMD_Dbmgr_WriteAccount(const CMD_Dbmgr_WriteAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&appid_) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:CMD_Dbmgr_WriteAccount)
}

void CMD_Dbmgr_WriteAccount::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&appid_) + sizeof(gold_));
  _cached_size_ = 0;
}

CMD_Dbmgr_WriteAccount::~CMD_Dbmgr_WriteAccount() {
  // @@protoc_insertion_point(destructor:CMD_Dbmgr_WriteAccount)
  SharedDtor();
}

void CMD_Dbmgr_WriteAccount::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Dbmgr_WriteAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Dbmgr_WriteAccount::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[19].descriptor;
}

const CMD_Dbmgr_WriteAccount& CMD_Dbmgr_WriteAccount::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Dbmgr_WriteAccount* CMD_Dbmgr_WriteAccount::New(::google::protobuf::Arena* arena) const {
  CMD_Dbmgr_WriteAccount* n = new CMD_Dbmgr_WriteAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Dbmgr_WriteAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Dbmgr_WriteAccount)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&appid_) + sizeof(gold_));
}

bool CMD_Dbmgr_WriteAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Dbmgr_WriteAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_WriteAccount.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_WriteAccount.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string playerName = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_WriteAccount.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 modelID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gold = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Dbmgr_WriteAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Dbmgr_WriteAccount)
  return false;
#undef DO_
}

void CMD_Dbmgr_WriteAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Dbmgr_WriteAccount)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commitaccountname(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->datas(), output);
  }

  // string playerName = 5;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->playername(), output);
  }

  // int32 modelID = 6;
  if (this->modelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->modelid(), output);
  }

  // int32 exp = 7;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exp(), output);
  }

  // int32 gold = 8;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gold(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Dbmgr_WriteAccount)
}

::google::protobuf::uint8* CMD_Dbmgr_WriteAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Dbmgr_WriteAccount)
  // uint64 appID = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->commitaccountname(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->datas(), target);
  }

  // string playerName = 5;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_WriteAccount.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->playername(), target);
  }

  // int32 modelID = 6;
  if (this->modelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->modelid(), target);
  }

  // int32 exp = 7;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exp(), target);
  }

  // int32 gold = 8;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Dbmgr_WriteAccount)
  return target;
}

size_t CMD_Dbmgr_WriteAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Dbmgr_WriteAccount)
  size_t total_size = 0;

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes datas = 4;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // string playerName = 5;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // uint64 appID = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // int32 modelID = 6;
  if (this->modelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modelid());
  }

  // int32 exp = 7;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 gold = 8;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Dbmgr_WriteAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Dbmgr_WriteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Dbmgr_WriteAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Dbmgr_WriteAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Dbmgr_WriteAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Dbmgr_WriteAccount)
    MergeFrom(*source);
  }
}

void CMD_Dbmgr_WriteAccount::MergeFrom(const CMD_Dbmgr_WriteAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Dbmgr_WriteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.modelid() != 0) {
    set_modelid(from.modelid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
}

void CMD_Dbmgr_WriteAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Dbmgr_WriteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Dbmgr_WriteAccount::CopyFrom(const CMD_Dbmgr_WriteAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Dbmgr_WriteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Dbmgr_WriteAccount::IsInitialized() const {
  return true;
}

void CMD_Dbmgr_WriteAccount::Swap(CMD_Dbmgr_WriteAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Dbmgr_WriteAccount::InternalSwap(CMD_Dbmgr_WriteAccount* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  playername_.Swap(&other->playername_);
  std::swap(appid_, other->appid_);
  std::swap(modelid_, other->modelid_);
  std::swap(exp_, other->exp_);
  std::swap(gold_, other->gold_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Dbmgr_WriteAccount::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Dbmgr_WriteAccount

// uint64 appID = 1;
void CMD_Dbmgr_WriteAccount::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_WriteAccount::appid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.appID)
  return appid_;
}
void CMD_Dbmgr_WriteAccount::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.appID)
}

// string commitAccountName = 2;
void CMD_Dbmgr_WriteAccount::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_WriteAccount::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Dbmgr_WriteAccount::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.commitAccountName)
}
#if LANG_CXX11
void CMD_Dbmgr_WriteAccount::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.commitAccountName)
}
#endif
void CMD_Dbmgr_WriteAccount::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.commitAccountName)
}
void CMD_Dbmgr_WriteAccount::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.commitAccountName)
}
::std::string* CMD_Dbmgr_WriteAccount::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_WriteAccount::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_WriteAccount::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.commitAccountName)
}

// string password = 3;
void CMD_Dbmgr_WriteAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_WriteAccount::password() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.password)
  return password_.GetNoArena();
}
void CMD_Dbmgr_WriteAccount::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.password)
}
#if LANG_CXX11
void CMD_Dbmgr_WriteAccount::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.password)
}
#endif
void CMD_Dbmgr_WriteAccount::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.password)
}
void CMD_Dbmgr_WriteAccount::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.password)
}
::std::string* CMD_Dbmgr_WriteAccount::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_WriteAccount::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_WriteAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.password)
}

// bytes datas = 4;
void CMD_Dbmgr_WriteAccount::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_WriteAccount::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.datas)
  return datas_.GetNoArena();
}
void CMD_Dbmgr_WriteAccount::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.datas)
}
#if LANG_CXX11
void CMD_Dbmgr_WriteAccount::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.datas)
}
#endif
void CMD_Dbmgr_WriteAccount::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.datas)
}
void CMD_Dbmgr_WriteAccount::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.datas)
}
::std::string* CMD_Dbmgr_WriteAccount::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_WriteAccount::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_WriteAccount::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.datas)
}

// string playerName = 5;
void CMD_Dbmgr_WriteAccount::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_WriteAccount::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.playerName)
  return playername_.GetNoArena();
}
void CMD_Dbmgr_WriteAccount::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.playerName)
}
#if LANG_CXX11
void CMD_Dbmgr_WriteAccount::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_WriteAccount.playerName)
}
#endif
void CMD_Dbmgr_WriteAccount::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_WriteAccount.playerName)
}
void CMD_Dbmgr_WriteAccount::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_WriteAccount.playerName)
}
::std::string* CMD_Dbmgr_WriteAccount::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_WriteAccount.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_WriteAccount::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_WriteAccount.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_WriteAccount::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_WriteAccount.playerName)
}

// int32 modelID = 6;
void CMD_Dbmgr_WriteAccount::clear_modelid() {
  modelid_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WriteAccount::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.modelID)
  return modelid_;
}
void CMD_Dbmgr_WriteAccount::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.modelID)
}

// int32 exp = 7;
void CMD_Dbmgr_WriteAccount::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WriteAccount::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.exp)
  return exp_;
}
void CMD_Dbmgr_WriteAccount::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.exp)
}

// int32 gold = 8;
void CMD_Dbmgr_WriteAccount::clear_gold() {
  gold_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WriteAccount::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WriteAccount.gold)
  return gold_;
}
void CMD_Dbmgr_WriteAccount::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WriteAccount.gold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Dbmgr_QueryAccount::kCommitAccountNameFieldNumber;
const int CMD_Dbmgr_QueryAccount::kPasswordFieldNumber;
const int CMD_Dbmgr_QueryAccount::kQueryAppIDFieldNumber;
const int CMD_Dbmgr_QueryAccount::kQueryTypeFieldNumber;
const int CMD_Dbmgr_QueryAccount::kDatasFieldNumber;
const int CMD_Dbmgr_QueryAccount::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Dbmgr_QueryAccount::CMD_Dbmgr_QueryAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Dbmgr_QueryAccount)
}
CMD_Dbmgr_QueryAccount::CMD_Dbmgr_QueryAccount(const CMD_Dbmgr_QueryAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  ::memcpy(&queryappid_, &from.queryappid_,
    reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&queryappid_) + sizeof(querytype_));
  // @@protoc_insertion_point(copy_constructor:CMD_Dbmgr_QueryAccount)
}

void CMD_Dbmgr_QueryAccount::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&queryappid_, 0, reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&queryappid_) + sizeof(querytype_));
  _cached_size_ = 0;
}

CMD_Dbmgr_QueryAccount::~CMD_Dbmgr_QueryAccount() {
  // @@protoc_insertion_point(destructor:CMD_Dbmgr_QueryAccount)
  SharedDtor();
}

void CMD_Dbmgr_QueryAccount::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Dbmgr_QueryAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Dbmgr_QueryAccount::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[20].descriptor;
}

const CMD_Dbmgr_QueryAccount& CMD_Dbmgr_QueryAccount::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Dbmgr_QueryAccount* CMD_Dbmgr_QueryAccount::New(::google::protobuf::Arena* arena) const {
  CMD_Dbmgr_QueryAccount* n = new CMD_Dbmgr_QueryAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Dbmgr_QueryAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Dbmgr_QueryAccount)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&queryappid_, 0, reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&queryappid_) + sizeof(querytype_));
}

bool CMD_Dbmgr_QueryAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Dbmgr_QueryAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_QueryAccount.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_QueryAccount.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 queryAppID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &queryappid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queryType = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &querytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string datas = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datas()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datas().data(), this->datas().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_QueryAccount.datas"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Dbmgr_QueryAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Dbmgr_QueryAccount)
  return false;
#undef DO_
}

void CMD_Dbmgr_QueryAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Dbmgr_QueryAccount)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // uint64 queryAppID = 3;
  if (this->queryappid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->queryappid(), output);
  }

  // int32 queryType = 4;
  if (this->querytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->querytype(), output);
  }

  // string datas = 5;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datas().data(), this->datas().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.datas");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->datas(), output);
  }

  // uint64 accountID = 6;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Dbmgr_QueryAccount)
}

::google::protobuf::uint8* CMD_Dbmgr_QueryAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Dbmgr_QueryAccount)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // uint64 queryAppID = 3;
  if (this->queryappid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->queryappid(), target);
  }

  // int32 queryType = 4;
  if (this->querytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->querytype(), target);
  }

  // string datas = 5;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datas().data(), this->datas().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_QueryAccount.datas");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->datas(), target);
  }

  // uint64 accountID = 6;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Dbmgr_QueryAccount)
  return target;
}

size_t CMD_Dbmgr_QueryAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Dbmgr_QueryAccount)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string datas = 5;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datas());
  }

  // uint64 queryAppID = 3;
  if (this->queryappid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->queryappid());
  }

  // uint64 accountID = 6;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // int32 queryType = 4;
  if (this->querytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->querytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Dbmgr_QueryAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Dbmgr_QueryAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Dbmgr_QueryAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Dbmgr_QueryAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Dbmgr_QueryAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Dbmgr_QueryAccount)
    MergeFrom(*source);
  }
}

void CMD_Dbmgr_QueryAccount::MergeFrom(const CMD_Dbmgr_QueryAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Dbmgr_QueryAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.queryappid() != 0) {
    set_queryappid(from.queryappid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.querytype() != 0) {
    set_querytype(from.querytype());
  }
}

void CMD_Dbmgr_QueryAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Dbmgr_QueryAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Dbmgr_QueryAccount::CopyFrom(const CMD_Dbmgr_QueryAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Dbmgr_QueryAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Dbmgr_QueryAccount::IsInitialized() const {
  return true;
}

void CMD_Dbmgr_QueryAccount::Swap(CMD_Dbmgr_QueryAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Dbmgr_QueryAccount::InternalSwap(CMD_Dbmgr_QueryAccount* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  std::swap(queryappid_, other->queryappid_);
  std::swap(accountid_, other->accountid_);
  std::swap(querytype_, other->querytype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Dbmgr_QueryAccount::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Dbmgr_QueryAccount

// string commitAccountName = 1;
void CMD_Dbmgr_QueryAccount::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_QueryAccount::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Dbmgr_QueryAccount::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.commitAccountName)
}
#if LANG_CXX11
void CMD_Dbmgr_QueryAccount::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.commitAccountName)
}
#endif
void CMD_Dbmgr_QueryAccount::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.commitAccountName)
}
void CMD_Dbmgr_QueryAccount::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.commitAccountName)
}
::std::string* CMD_Dbmgr_QueryAccount::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_QueryAccount::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_QueryAccount::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.commitAccountName)
}

// string password = 2;
void CMD_Dbmgr_QueryAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_QueryAccount::password() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.password)
  return password_.GetNoArena();
}
void CMD_Dbmgr_QueryAccount::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.password)
}
#if LANG_CXX11
void CMD_Dbmgr_QueryAccount::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.password)
}
#endif
void CMD_Dbmgr_QueryAccount::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.password)
}
void CMD_Dbmgr_QueryAccount::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.password)
}
::std::string* CMD_Dbmgr_QueryAccount::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_QueryAccount::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_QueryAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.password)
}

// uint64 queryAppID = 3;
void CMD_Dbmgr_QueryAccount::clear_queryappid() {
  queryappid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_QueryAccount::queryappid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.queryAppID)
  return queryappid_;
}
void CMD_Dbmgr_QueryAccount::set_queryappid(::google::protobuf::uint64 value) {
  
  queryappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.queryAppID)
}

// int32 queryType = 4;
void CMD_Dbmgr_QueryAccount::clear_querytype() {
  querytype_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_QueryAccount::querytype() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.queryType)
  return querytype_;
}
void CMD_Dbmgr_QueryAccount::set_querytype(::google::protobuf::int32 value) {
  
  querytype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.queryType)
}

// string datas = 5;
void CMD_Dbmgr_QueryAccount::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_QueryAccount::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.datas)
  return datas_.GetNoArena();
}
void CMD_Dbmgr_QueryAccount::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.datas)
}
#if LANG_CXX11
void CMD_Dbmgr_QueryAccount::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_QueryAccount.datas)
}
#endif
void CMD_Dbmgr_QueryAccount::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_QueryAccount.datas)
}
void CMD_Dbmgr_QueryAccount::set_datas(const char* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_QueryAccount.datas)
}
::std::string* CMD_Dbmgr_QueryAccount::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_QueryAccount.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_QueryAccount::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_QueryAccount.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_QueryAccount::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_QueryAccount.datas)
}

// uint64 accountID = 6;
void CMD_Dbmgr_QueryAccount::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_QueryAccount::accountid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryAccount.accountID)
  return accountid_;
}
void CMD_Dbmgr_QueryAccount::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryAccount.accountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Dbmgr_UpdateAccountData::kCommitAccountNameFieldNumber;
const int CMD_Dbmgr_UpdateAccountData::kPlayerNameFieldNumber;
const int CMD_Dbmgr_UpdateAccountData::kModelIDFieldNumber;
const int CMD_Dbmgr_UpdateAccountData::kExpFieldNumber;
const int CMD_Dbmgr_UpdateAccountData::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Dbmgr_UpdateAccountData::CMD_Dbmgr_UpdateAccountData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Dbmgr_UpdateAccountData)
}
CMD_Dbmgr_UpdateAccountData::CMD_Dbmgr_UpdateAccountData(const CMD_Dbmgr_UpdateAccountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&modelid_, &from.modelid_,
    reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&modelid_) + sizeof(gold_));
  // @@protoc_insertion_point(copy_constructor:CMD_Dbmgr_UpdateAccountData)
}

void CMD_Dbmgr_UpdateAccountData::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modelid_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&modelid_) + sizeof(gold_));
  _cached_size_ = 0;
}

CMD_Dbmgr_UpdateAccountData::~CMD_Dbmgr_UpdateAccountData() {
  // @@protoc_insertion_point(destructor:CMD_Dbmgr_UpdateAccountData)
  SharedDtor();
}

void CMD_Dbmgr_UpdateAccountData::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Dbmgr_UpdateAccountData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Dbmgr_UpdateAccountData::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[21].descriptor;
}

const CMD_Dbmgr_UpdateAccountData& CMD_Dbmgr_UpdateAccountData::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Dbmgr_UpdateAccountData* CMD_Dbmgr_UpdateAccountData::New(::google::protobuf::Arena* arena) const {
  CMD_Dbmgr_UpdateAccountData* n = new CMD_Dbmgr_UpdateAccountData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Dbmgr_UpdateAccountData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Dbmgr_UpdateAccountData)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modelid_, 0, reinterpret_cast<char*>(&gold_) -
    reinterpret_cast<char*>(&modelid_) + sizeof(gold_));
}

bool CMD_Dbmgr_UpdateAccountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Dbmgr_UpdateAccountData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_UpdateAccountData.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string playerName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Dbmgr_UpdateAccountData.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 modelID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gold = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Dbmgr_UpdateAccountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Dbmgr_UpdateAccountData)
  return false;
#undef DO_
}

void CMD_Dbmgr_UpdateAccountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Dbmgr_UpdateAccountData)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_UpdateAccountData.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_UpdateAccountData.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playername(), output);
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->modelid(), output);
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  // int32 gold = 5;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gold(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Dbmgr_UpdateAccountData)
}

::google::protobuf::uint8* CMD_Dbmgr_UpdateAccountData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Dbmgr_UpdateAccountData)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_UpdateAccountData.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Dbmgr_UpdateAccountData.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playername(), target);
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->modelid(), target);
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  // int32 gold = 5;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Dbmgr_UpdateAccountData)
  return target;
}

size_t CMD_Dbmgr_UpdateAccountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Dbmgr_UpdateAccountData)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modelid());
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 gold = 5;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Dbmgr_UpdateAccountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Dbmgr_UpdateAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Dbmgr_UpdateAccountData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Dbmgr_UpdateAccountData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Dbmgr_UpdateAccountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Dbmgr_UpdateAccountData)
    MergeFrom(*source);
  }
}

void CMD_Dbmgr_UpdateAccountData::MergeFrom(const CMD_Dbmgr_UpdateAccountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Dbmgr_UpdateAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.modelid() != 0) {
    set_modelid(from.modelid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
}

void CMD_Dbmgr_UpdateAccountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Dbmgr_UpdateAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Dbmgr_UpdateAccountData::CopyFrom(const CMD_Dbmgr_UpdateAccountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Dbmgr_UpdateAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Dbmgr_UpdateAccountData::IsInitialized() const {
  return true;
}

void CMD_Dbmgr_UpdateAccountData::Swap(CMD_Dbmgr_UpdateAccountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Dbmgr_UpdateAccountData::InternalSwap(CMD_Dbmgr_UpdateAccountData* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  playername_.Swap(&other->playername_);
  std::swap(modelid_, other->modelid_);
  std::swap(exp_, other->exp_);
  std::swap(gold_, other->gold_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Dbmgr_UpdateAccountData::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Dbmgr_UpdateAccountData

// string commitAccountName = 1;
void CMD_Dbmgr_UpdateAccountData::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_UpdateAccountData::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
#if LANG_CXX11
void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
#endif
void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
void CMD_Dbmgr_UpdateAccountData::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}
::std::string* CMD_Dbmgr_UpdateAccountData::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_UpdateAccountData::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_UpdateAccountData.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_UpdateAccountData::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_UpdateAccountData.commitAccountName)
}

// string playerName = 2;
void CMD_Dbmgr_UpdateAccountData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Dbmgr_UpdateAccountData::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.playerName)
  return playername_.GetNoArena();
}
void CMD_Dbmgr_UpdateAccountData::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.playerName)
}
#if LANG_CXX11
void CMD_Dbmgr_UpdateAccountData::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Dbmgr_UpdateAccountData.playerName)
}
#endif
void CMD_Dbmgr_UpdateAccountData::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Dbmgr_UpdateAccountData.playerName)
}
void CMD_Dbmgr_UpdateAccountData::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Dbmgr_UpdateAccountData.playerName)
}
::std::string* CMD_Dbmgr_UpdateAccountData::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Dbmgr_UpdateAccountData.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Dbmgr_UpdateAccountData::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Dbmgr_UpdateAccountData.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Dbmgr_UpdateAccountData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Dbmgr_UpdateAccountData.playerName)
}

// int32 modelID = 3;
void CMD_Dbmgr_UpdateAccountData::clear_modelid() {
  modelid_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.modelID)
  return modelid_;
}
void CMD_Dbmgr_UpdateAccountData::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.modelID)
}

// int32 exp = 4;
void CMD_Dbmgr_UpdateAccountData::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.exp)
  return exp_;
}
void CMD_Dbmgr_UpdateAccountData::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.exp)
}

// int32 gold = 5;
void CMD_Dbmgr_UpdateAccountData::clear_gold() {
  gold_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_UpdateAccountData::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_UpdateAccountData.gold)
  return gold_;
}
void CMD_Dbmgr_UpdateAccountData::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_UpdateAccountData.gold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Dbmgr_WritePlayerGameData::kPlayerIDFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kScoreFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kTopscoreFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kGameIDFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kGameModeFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kVictoryFieldNumber;
const int CMD_Dbmgr_WritePlayerGameData::kDefeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Dbmgr_WritePlayerGameData::CMD_Dbmgr_WritePlayerGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Dbmgr_WritePlayerGameData)
}
CMD_Dbmgr_WritePlayerGameData::CMD_Dbmgr_WritePlayerGameData(const CMD_Dbmgr_WritePlayerGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&defeat_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(defeat_));
  // @@protoc_insertion_point(copy_constructor:CMD_Dbmgr_WritePlayerGameData)
}

void CMD_Dbmgr_WritePlayerGameData::SharedCtor() {
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&defeat_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(defeat_));
  _cached_size_ = 0;
}

CMD_Dbmgr_WritePlayerGameData::~CMD_Dbmgr_WritePlayerGameData() {
  // @@protoc_insertion_point(destructor:CMD_Dbmgr_WritePlayerGameData)
  SharedDtor();
}

void CMD_Dbmgr_WritePlayerGameData::SharedDtor() {
}

void CMD_Dbmgr_WritePlayerGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Dbmgr_WritePlayerGameData::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[22].descriptor;
}

const CMD_Dbmgr_WritePlayerGameData& CMD_Dbmgr_WritePlayerGameData::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Dbmgr_WritePlayerGameData* CMD_Dbmgr_WritePlayerGameData::New(::google::protobuf::Arena* arena) const {
  CMD_Dbmgr_WritePlayerGameData* n = new CMD_Dbmgr_WritePlayerGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Dbmgr_WritePlayerGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Dbmgr_WritePlayerGameData)
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&defeat_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(defeat_));
}

bool CMD_Dbmgr_WritePlayerGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Dbmgr_WritePlayerGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topscore = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameMode = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 victory = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 defeat = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Dbmgr_WritePlayerGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Dbmgr_WritePlayerGameData)
  return false;
#undef DO_
}

void CMD_Dbmgr_WritePlayerGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Dbmgr_WritePlayerGameData)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->topscore(), output);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gameid(), output);
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gamemode(), output);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->victory(), output);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->defeat(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Dbmgr_WritePlayerGameData)
}

::google::protobuf::uint8* CMD_Dbmgr_WritePlayerGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Dbmgr_WritePlayerGameData)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->topscore(), target);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gameid(), target);
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gamemode(), target);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->victory(), target);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->defeat(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Dbmgr_WritePlayerGameData)
  return target;
}

size_t CMD_Dbmgr_WritePlayerGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Dbmgr_WritePlayerGameData)
  size_t total_size = 0;

  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // int32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topscore());
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemode());
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victory());
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defeat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Dbmgr_WritePlayerGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Dbmgr_WritePlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Dbmgr_WritePlayerGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Dbmgr_WritePlayerGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Dbmgr_WritePlayerGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Dbmgr_WritePlayerGameData)
    MergeFrom(*source);
  }
}

void CMD_Dbmgr_WritePlayerGameData::MergeFrom(const CMD_Dbmgr_WritePlayerGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Dbmgr_WritePlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.topscore() != 0) {
    set_topscore(from.topscore());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.victory() != 0) {
    set_victory(from.victory());
  }
  if (from.defeat() != 0) {
    set_defeat(from.defeat());
  }
}

void CMD_Dbmgr_WritePlayerGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Dbmgr_WritePlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Dbmgr_WritePlayerGameData::CopyFrom(const CMD_Dbmgr_WritePlayerGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Dbmgr_WritePlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Dbmgr_WritePlayerGameData::IsInitialized() const {
  return true;
}

void CMD_Dbmgr_WritePlayerGameData::Swap(CMD_Dbmgr_WritePlayerGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Dbmgr_WritePlayerGameData::InternalSwap(CMD_Dbmgr_WritePlayerGameData* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(score_, other->score_);
  std::swap(topscore_, other->topscore_);
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(victory_, other->victory_);
  std::swap(defeat_, other->defeat_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Dbmgr_WritePlayerGameData::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Dbmgr_WritePlayerGameData

// uint64 playerID = 1;
void CMD_Dbmgr_WritePlayerGameData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_WritePlayerGameData::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.playerID)
  return playerid_;
}
void CMD_Dbmgr_WritePlayerGameData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.playerID)
}

// int32 score = 2;
void CMD_Dbmgr_WritePlayerGameData::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::score() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.score)
  return score_;
}
void CMD_Dbmgr_WritePlayerGameData::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.score)
}

// int32 topscore = 3;
void CMD_Dbmgr_WritePlayerGameData::clear_topscore() {
  topscore_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.topscore)
  return topscore_;
}
void CMD_Dbmgr_WritePlayerGameData::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.topscore)
}

// uint64 gameID = 4;
void CMD_Dbmgr_WritePlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_WritePlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.gameID)
  return gameid_;
}
void CMD_Dbmgr_WritePlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.gameID)
}

// uint32 gameMode = 5;
void CMD_Dbmgr_WritePlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
::google::protobuf::uint32 CMD_Dbmgr_WritePlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.gameMode)
  return gamemode_;
}
void CMD_Dbmgr_WritePlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.gameMode)
}

// int32 victory = 6;
void CMD_Dbmgr_WritePlayerGameData::clear_victory() {
  victory_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.victory)
  return victory_;
}
void CMD_Dbmgr_WritePlayerGameData::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.victory)
}

// int32 defeat = 7;
void CMD_Dbmgr_WritePlayerGameData::clear_defeat() {
  defeat_ = 0;
}
::google::protobuf::int32 CMD_Dbmgr_WritePlayerGameData::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_WritePlayerGameData.defeat)
  return defeat_;
}
void CMD_Dbmgr_WritePlayerGameData::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_WritePlayerGameData.defeat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Dbmgr_QueryPlayerGameData::kPlayerIDFieldNumber;
const int CMD_Dbmgr_QueryPlayerGameData::kGameIDFieldNumber;
const int CMD_Dbmgr_QueryPlayerGameData::kGameModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Dbmgr_QueryPlayerGameData::CMD_Dbmgr_QueryPlayerGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Dbmgr_QueryPlayerGameData)
}
CMD_Dbmgr_QueryPlayerGameData::CMD_Dbmgr_QueryPlayerGameData(const CMD_Dbmgr_QueryPlayerGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(gamemode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Dbmgr_QueryPlayerGameData)
}

void CMD_Dbmgr_QueryPlayerGameData::SharedCtor() {
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(gamemode_));
  _cached_size_ = 0;
}

CMD_Dbmgr_QueryPlayerGameData::~CMD_Dbmgr_QueryPlayerGameData() {
  // @@protoc_insertion_point(destructor:CMD_Dbmgr_QueryPlayerGameData)
  SharedDtor();
}

void CMD_Dbmgr_QueryPlayerGameData::SharedDtor() {
}

void CMD_Dbmgr_QueryPlayerGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Dbmgr_QueryPlayerGameData::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[23].descriptor;
}

const CMD_Dbmgr_QueryPlayerGameData& CMD_Dbmgr_QueryPlayerGameData::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Dbmgr_QueryPlayerGameData* CMD_Dbmgr_QueryPlayerGameData::New(::google::protobuf::Arena* arena) const {
  CMD_Dbmgr_QueryPlayerGameData* n = new CMD_Dbmgr_QueryPlayerGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Dbmgr_QueryPlayerGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Dbmgr_QueryPlayerGameData)
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(gamemode_));
}

bool CMD_Dbmgr_QueryPlayerGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Dbmgr_QueryPlayerGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameMode = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Dbmgr_QueryPlayerGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Dbmgr_QueryPlayerGameData)
  return false;
#undef DO_
}

void CMD_Dbmgr_QueryPlayerGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Dbmgr_QueryPlayerGameData)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gameid(), output);
  }

  // uint32 gameMode = 3;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gamemode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Dbmgr_QueryPlayerGameData)
}

::google::protobuf::uint8* CMD_Dbmgr_QueryPlayerGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Dbmgr_QueryPlayerGameData)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gameid(), target);
  }

  // uint32 gameMode = 3;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gamemode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Dbmgr_QueryPlayerGameData)
  return target;
}

size_t CMD_Dbmgr_QueryPlayerGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Dbmgr_QueryPlayerGameData)
  size_t total_size = 0;

  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 gameMode = 3;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Dbmgr_QueryPlayerGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Dbmgr_QueryPlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Dbmgr_QueryPlayerGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Dbmgr_QueryPlayerGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Dbmgr_QueryPlayerGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Dbmgr_QueryPlayerGameData)
    MergeFrom(*source);
  }
}

void CMD_Dbmgr_QueryPlayerGameData::MergeFrom(const CMD_Dbmgr_QueryPlayerGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Dbmgr_QueryPlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
}

void CMD_Dbmgr_QueryPlayerGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Dbmgr_QueryPlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Dbmgr_QueryPlayerGameData::CopyFrom(const CMD_Dbmgr_QueryPlayerGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Dbmgr_QueryPlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Dbmgr_QueryPlayerGameData::IsInitialized() const {
  return true;
}

void CMD_Dbmgr_QueryPlayerGameData::Swap(CMD_Dbmgr_QueryPlayerGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Dbmgr_QueryPlayerGameData::InternalSwap(CMD_Dbmgr_QueryPlayerGameData* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Dbmgr_QueryPlayerGameData::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Dbmgr_QueryPlayerGameData

// uint64 playerID = 1;
void CMD_Dbmgr_QueryPlayerGameData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_QueryPlayerGameData::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.playerID)
  return playerid_;
}
void CMD_Dbmgr_QueryPlayerGameData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.playerID)
}

// uint64 gameID = 2;
void CMD_Dbmgr_QueryPlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Dbmgr_QueryPlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.gameID)
  return gameid_;
}
void CMD_Dbmgr_QueryPlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.gameID)
}

// uint32 gameMode = 3;
void CMD_Dbmgr_QueryPlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
::google::protobuf::uint32 CMD_Dbmgr_QueryPlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Dbmgr_QueryPlayerGameData.gameMode)
  return gamemode_;
}
void CMD_Dbmgr_QueryPlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Dbmgr_QueryPlayerGameData.gameMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_PlayerGameData::kExpFieldNumber;
const int CMD_Halls_PlayerGameData::kScoreFieldNumber;
const int CMD_Halls_PlayerGameData::kIdFieldNumber;
const int CMD_Halls_PlayerGameData::kVictoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_PlayerGameData::CMD_Halls_PlayerGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_PlayerGameData)
}
CMD_Halls_PlayerGameData::CMD_Halls_PlayerGameData(const CMD_Halls_PlayerGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&exp_, &from.exp_,
    reinterpret_cast<char*>(&victory_) -
    reinterpret_cast<char*>(&exp_) + sizeof(victory_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_PlayerGameData)
}

void CMD_Halls_PlayerGameData::SharedCtor() {
  ::memset(&exp_, 0, reinterpret_cast<char*>(&victory_) -
    reinterpret_cast<char*>(&exp_) + sizeof(victory_));
  _cached_size_ = 0;
}

CMD_Halls_PlayerGameData::~CMD_Halls_PlayerGameData() {
  // @@protoc_insertion_point(destructor:CMD_Halls_PlayerGameData)
  SharedDtor();
}

void CMD_Halls_PlayerGameData::SharedDtor() {
}

void CMD_Halls_PlayerGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_PlayerGameData::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[24].descriptor;
}

const CMD_Halls_PlayerGameData& CMD_Halls_PlayerGameData::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_PlayerGameData* CMD_Halls_PlayerGameData::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_PlayerGameData* n = new CMD_Halls_PlayerGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_PlayerGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_PlayerGameData)
  ::memset(&exp_, 0, reinterpret_cast<char*>(&victory_) -
    reinterpret_cast<char*>(&exp_) + sizeof(victory_));
}

bool CMD_Halls_PlayerGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_PlayerGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 exp = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool victory = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &victory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_PlayerGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_PlayerGameData)
  return false;
#undef DO_
}

void CMD_Halls_PlayerGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_PlayerGameData)
  // int32 exp = 1;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exp(), output);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // uint64 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->id(), output);
  }

  // bool victory = 4;
  if (this->victory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->victory(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_PlayerGameData)
}

::google::protobuf::uint8* CMD_Halls_PlayerGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_PlayerGameData)
  // int32 exp = 1;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exp(), target);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // uint64 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->id(), target);
  }

  // bool victory = 4;
  if (this->victory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->victory(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_PlayerGameData)
  return target;
}

size_t CMD_Halls_PlayerGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_PlayerGameData)
  size_t total_size = 0;

  // int32 exp = 1;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // uint64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // bool victory = 4;
  if (this->victory() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_PlayerGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_PlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_PlayerGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_PlayerGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_PlayerGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_PlayerGameData)
    MergeFrom(*source);
  }
}

void CMD_Halls_PlayerGameData::MergeFrom(const CMD_Halls_PlayerGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_PlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.victory() != 0) {
    set_victory(from.victory());
  }
}

void CMD_Halls_PlayerGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_PlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_PlayerGameData::CopyFrom(const CMD_Halls_PlayerGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_PlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_PlayerGameData::IsInitialized() const {
  return true;
}

void CMD_Halls_PlayerGameData::Swap(CMD_Halls_PlayerGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_PlayerGameData::InternalSwap(CMD_Halls_PlayerGameData* other) {
  std::swap(exp_, other->exp_);
  std::swap(score_, other->score_);
  std::swap(id_, other->id_);
  std::swap(victory_, other->victory_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_PlayerGameData::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_PlayerGameData

// int32 exp = 1;
void CMD_Halls_PlayerGameData::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_Halls_PlayerGameData::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.exp)
  return exp_;
}
void CMD_Halls_PlayerGameData::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.exp)
}

// int32 score = 2;
void CMD_Halls_PlayerGameData::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 CMD_Halls_PlayerGameData::score() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.score)
  return score_;
}
void CMD_Halls_PlayerGameData::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.score)
}

// uint64 id = 3;
void CMD_Halls_PlayerGameData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_PlayerGameData::id() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.id)
  return id_;
}
void CMD_Halls_PlayerGameData::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.id)
}

// bool victory = 4;
void CMD_Halls_PlayerGameData::clear_victory() {
  victory_ = false;
}
bool CMD_Halls_PlayerGameData::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_PlayerGameData.victory)
  return victory_;
}
void CMD_Halls_PlayerGameData::set_victory(bool value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_PlayerGameData.victory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_Login::kTokenIDFieldNumber;
const int CMD_Halls_Login::kCommitAccountNameFieldNumber;
const int CMD_Halls_Login::kHallsIDFieldNumber;
const int CMD_Halls_Login::kPlayerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_Login::CMD_Halls_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_Login)
}
CMD_Halls_Login::CMD_Halls_Login(const CMD_Halls_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  ::memcpy(&tokenid_, &from.tokenid_,
    reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&tokenid_) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_Login)
}

void CMD_Halls_Login::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tokenid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&tokenid_) + sizeof(playerid_));
  _cached_size_ = 0;
}

CMD_Halls_Login::~CMD_Halls_Login() {
  // @@protoc_insertion_point(destructor:CMD_Halls_Login)
  SharedDtor();
}

void CMD_Halls_Login::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Halls_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_Login::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[25].descriptor;
}

const CMD_Halls_Login& CMD_Halls_Login::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_Login* CMD_Halls_Login::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_Login* n = new CMD_Halls_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_Login)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tokenid_, 0, reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&tokenid_) + sizeof(playerid_));
}

bool CMD_Halls_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 tokenID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_Login.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 hallsID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_Login)
  return false;
#undef DO_
}

void CMD_Halls_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_Login)
  // uint64 tokenID = 1;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tokenid(), output);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_Login.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->commitaccountname(), output);
  }

  // uint64 hallsID = 3;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->hallsid(), output);
  }

  // uint64 playerID = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_Login)
}

::google::protobuf::uint8* CMD_Halls_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_Login)
  // uint64 tokenID = 1;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tokenid(), target);
  }

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_Login.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->commitaccountname(), target);
  }

  // uint64 hallsID = 3;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->hallsid(), target);
  }

  // uint64 playerID = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_Login)
  return target;
}

size_t CMD_Halls_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_Login)
  size_t total_size = 0;

  // string commitAccountName = 2;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // uint64 tokenID = 1;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  // uint64 hallsID = 3;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 playerID = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_Login)
    MergeFrom(*source);
  }
}

void CMD_Halls_Login::MergeFrom(const CMD_Halls_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void CMD_Halls_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_Login::CopyFrom(const CMD_Halls_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_Login::IsInitialized() const {
  return true;
}

void CMD_Halls_Login::Swap(CMD_Halls_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_Login::InternalSwap(CMD_Halls_Login* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(playerid_, other->playerid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_Login::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_Login

// uint64 tokenID = 1;
void CMD_Halls_Login::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_Login::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.tokenID)
  return tokenid_;
}
void CMD_Halls_Login::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.tokenID)
}

// string commitAccountName = 2;
void CMD_Halls_Login::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_Login::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Halls_Login::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.commitAccountName)
}
#if LANG_CXX11
void CMD_Halls_Login::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_Login.commitAccountName)
}
#endif
void CMD_Halls_Login::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_Login.commitAccountName)
}
void CMD_Halls_Login::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_Login.commitAccountName)
}
::std::string* CMD_Halls_Login::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_Login.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_Login::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_Login.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_Login::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_Login.commitAccountName)
}

// uint64 hallsID = 3;
void CMD_Halls_Login::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_Login::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.hallsID)
  return hallsid_;
}
void CMD_Halls_Login::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.hallsID)
}

// uint64 playerID = 4;
void CMD_Halls_Login::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_Login::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_Login.playerID)
  return playerid_;
}
void CMD_Halls_Login::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_Login.playerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_RequestAllocClient::kCommitAccountNameFieldNumber;
const int CMD_Halls_RequestAllocClient::kPasswordFieldNumber;
const int CMD_Halls_RequestAllocClient::kDatasFieldNumber;
const int CMD_Halls_RequestAllocClient::kFoundObjectIDFieldNumber;
const int CMD_Halls_RequestAllocClient::kLoginSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_RequestAllocClient::CMD_Halls_RequestAllocClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_RequestAllocClient)
}
CMD_Halls_RequestAllocClient::CMD_Halls_RequestAllocClient(const CMD_Halls_RequestAllocClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  ::memcpy(&foundobjectid_, &from.foundobjectid_,
    reinterpret_cast<char*>(&loginsessionid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(loginsessionid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_RequestAllocClient)
}

void CMD_Halls_RequestAllocClient::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&loginsessionid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(loginsessionid_));
  _cached_size_ = 0;
}

CMD_Halls_RequestAllocClient::~CMD_Halls_RequestAllocClient() {
  // @@protoc_insertion_point(destructor:CMD_Halls_RequestAllocClient)
  SharedDtor();
}

void CMD_Halls_RequestAllocClient::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Halls_RequestAllocClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_RequestAllocClient::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[26].descriptor;
}

const CMD_Halls_RequestAllocClient& CMD_Halls_RequestAllocClient::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_RequestAllocClient* CMD_Halls_RequestAllocClient::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_RequestAllocClient* n = new CMD_Halls_RequestAllocClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_RequestAllocClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_RequestAllocClient)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&loginsessionid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(loginsessionid_));
}

bool CMD_Halls_RequestAllocClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_RequestAllocClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_RequestAllocClient.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_RequestAllocClient.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundObjectID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundobjectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 loginSessionID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &loginsessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_RequestAllocClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_RequestAllocClient)
  return false;
#undef DO_
}

void CMD_Halls_RequestAllocClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_RequestAllocClient)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_RequestAllocClient.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_RequestAllocClient.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->datas(), output);
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->foundobjectid(), output);
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->loginsessionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_RequestAllocClient)
}

::google::protobuf::uint8* CMD_Halls_RequestAllocClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_RequestAllocClient)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_RequestAllocClient.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_RequestAllocClient.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->datas(), target);
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->foundobjectid(), target);
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->loginsessionid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_RequestAllocClient)
  return target;
}

size_t CMD_Halls_RequestAllocClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_RequestAllocClient)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundobjectid());
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->loginsessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_RequestAllocClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_RequestAllocClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_RequestAllocClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_RequestAllocClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_RequestAllocClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_RequestAllocClient)
    MergeFrom(*source);
  }
}

void CMD_Halls_RequestAllocClient::MergeFrom(const CMD_Halls_RequestAllocClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_RequestAllocClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.foundobjectid() != 0) {
    set_foundobjectid(from.foundobjectid());
  }
  if (from.loginsessionid() != 0) {
    set_loginsessionid(from.loginsessionid());
  }
}

void CMD_Halls_RequestAllocClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_RequestAllocClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_RequestAllocClient::CopyFrom(const CMD_Halls_RequestAllocClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_RequestAllocClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_RequestAllocClient::IsInitialized() const {
  return true;
}

void CMD_Halls_RequestAllocClient::Swap(CMD_Halls_RequestAllocClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_RequestAllocClient::InternalSwap(CMD_Halls_RequestAllocClient* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  std::swap(foundobjectid_, other->foundobjectid_);
  std::swap(loginsessionid_, other->loginsessionid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_RequestAllocClient::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_RequestAllocClient

// string commitAccountName = 1;
void CMD_Halls_RequestAllocClient::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_RequestAllocClient::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Halls_RequestAllocClient::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.commitAccountName)
}
#if LANG_CXX11
void CMD_Halls_RequestAllocClient::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.commitAccountName)
}
#endif
void CMD_Halls_RequestAllocClient::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.commitAccountName)
}
void CMD_Halls_RequestAllocClient::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.commitAccountName)
}
::std::string* CMD_Halls_RequestAllocClient::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_RequestAllocClient::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_RequestAllocClient::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.commitAccountName)
}

// string password = 2;
void CMD_Halls_RequestAllocClient::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_RequestAllocClient::password() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.password)
  return password_.GetNoArena();
}
void CMD_Halls_RequestAllocClient::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.password)
}
#if LANG_CXX11
void CMD_Halls_RequestAllocClient::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.password)
}
#endif
void CMD_Halls_RequestAllocClient::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.password)
}
void CMD_Halls_RequestAllocClient::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.password)
}
::std::string* CMD_Halls_RequestAllocClient::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_RequestAllocClient::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_RequestAllocClient::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.password)
}

// bytes datas = 3;
void CMD_Halls_RequestAllocClient::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_RequestAllocClient::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.datas)
  return datas_.GetNoArena();
}
void CMD_Halls_RequestAllocClient::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.datas)
}
#if LANG_CXX11
void CMD_Halls_RequestAllocClient::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_RequestAllocClient.datas)
}
#endif
void CMD_Halls_RequestAllocClient::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_RequestAllocClient.datas)
}
void CMD_Halls_RequestAllocClient::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_RequestAllocClient.datas)
}
::std::string* CMD_Halls_RequestAllocClient::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_RequestAllocClient.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_RequestAllocClient::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Halls_RequestAllocClient.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_RequestAllocClient::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_RequestAllocClient.datas)
}

// uint64 foundObjectID = 4;
void CMD_Halls_RequestAllocClient::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_RequestAllocClient::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.foundObjectID)
  return foundobjectid_;
}
void CMD_Halls_RequestAllocClient::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.foundObjectID)
}

// uint64 loginSessionID = 5;
void CMD_Halls_RequestAllocClient::clear_loginsessionid() {
  loginsessionid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_RequestAllocClient::loginsessionid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_RequestAllocClient.loginSessionID)
  return loginsessionid_;
}
void CMD_Halls_RequestAllocClient::set_loginsessionid(::google::protobuf::uint64 value) {
  
  loginsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_RequestAllocClient.loginSessionID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_StartMatch::kGameIDFieldNumber;
const int CMD_Halls_StartMatch::kGameModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_StartMatch::CMD_Halls_StartMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_StartMatch)
}
CMD_Halls_StartMatch::CMD_Halls_StartMatch(const CMD_Halls_StartMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_StartMatch)
}

void CMD_Halls_StartMatch::SharedCtor() {
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
  _cached_size_ = 0;
}

CMD_Halls_StartMatch::~CMD_Halls_StartMatch() {
  // @@protoc_insertion_point(destructor:CMD_Halls_StartMatch)
  SharedDtor();
}

void CMD_Halls_StartMatch::SharedDtor() {
}

void CMD_Halls_StartMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_StartMatch::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[27].descriptor;
}

const CMD_Halls_StartMatch& CMD_Halls_StartMatch::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_StartMatch* CMD_Halls_StartMatch::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_StartMatch* n = new CMD_Halls_StartMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_StartMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_StartMatch)
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
}

bool CMD_Halls_StartMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_StartMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_StartMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_StartMatch)
  return false;
#undef DO_
}

void CMD_Halls_StartMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_StartMatch)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // int32 gameMode = 2;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gamemode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_StartMatch)
}

::google::protobuf::uint8* CMD_Halls_StartMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_StartMatch)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // int32 gameMode = 2;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gamemode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_StartMatch)
  return target;
}

size_t CMD_Halls_StartMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_StartMatch)
  size_t total_size = 0;

  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // int32 gameMode = 2;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_StartMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_StartMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_StartMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_StartMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_StartMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_StartMatch)
    MergeFrom(*source);
  }
}

void CMD_Halls_StartMatch::MergeFrom(const CMD_Halls_StartMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_StartMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
}

void CMD_Halls_StartMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_StartMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_StartMatch::CopyFrom(const CMD_Halls_StartMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_StartMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_StartMatch::IsInitialized() const {
  return true;
}

void CMD_Halls_StartMatch::Swap(CMD_Halls_StartMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_StartMatch::InternalSwap(CMD_Halls_StartMatch* other) {
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_StartMatch::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_StartMatch

// uint64 gameID = 1;
void CMD_Halls_StartMatch::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_StartMatch::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_StartMatch.gameID)
  return gameid_;
}
void CMD_Halls_StartMatch::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_StartMatch.gameID)
}

// int32 gameMode = 2;
void CMD_Halls_StartMatch::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_Halls_StartMatch::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_StartMatch.gameMode)
  return gamemode_;
}
void CMD_Halls_StartMatch::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_StartMatch.gameMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_CancelMatch::CMD_Halls_CancelMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_CancelMatch)
}
CMD_Halls_CancelMatch::CMD_Halls_CancelMatch(const CMD_Halls_CancelMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_CancelMatch)
}

void CMD_Halls_CancelMatch::SharedCtor() {
  _cached_size_ = 0;
}

CMD_Halls_CancelMatch::~CMD_Halls_CancelMatch() {
  // @@protoc_insertion_point(destructor:CMD_Halls_CancelMatch)
  SharedDtor();
}

void CMD_Halls_CancelMatch::SharedDtor() {
}

void CMD_Halls_CancelMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_CancelMatch::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[28].descriptor;
}

const CMD_Halls_CancelMatch& CMD_Halls_CancelMatch::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_CancelMatch* CMD_Halls_CancelMatch::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_CancelMatch* n = new CMD_Halls_CancelMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_CancelMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_CancelMatch)
}

bool CMD_Halls_CancelMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_CancelMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_CancelMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_CancelMatch)
  return false;
#undef DO_
}

void CMD_Halls_CancelMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_CancelMatch)
  // @@protoc_insertion_point(serialize_end:CMD_Halls_CancelMatch)
}

::google::protobuf::uint8* CMD_Halls_CancelMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_CancelMatch)
  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_CancelMatch)
  return target;
}

size_t CMD_Halls_CancelMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_CancelMatch)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_CancelMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_CancelMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_CancelMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_CancelMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_CancelMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_CancelMatch)
    MergeFrom(*source);
  }
}

void CMD_Halls_CancelMatch::MergeFrom(const CMD_Halls_CancelMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_CancelMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void CMD_Halls_CancelMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_CancelMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_CancelMatch::CopyFrom(const CMD_Halls_CancelMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_CancelMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_CancelMatch::IsInitialized() const {
  return true;
}

void CMD_Halls_CancelMatch::Swap(CMD_Halls_CancelMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_CancelMatch::InternalSwap(CMD_Halls_CancelMatch* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_CancelMatch::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_CancelMatch

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_OnRequestCreateRoomCB::kRoomIDFieldNumber;
const int CMD_Halls_OnRequestCreateRoomCB::kIpFieldNumber;
const int CMD_Halls_OnRequestCreateRoomCB::kPortFieldNumber;
const int CMD_Halls_OnRequestCreateRoomCB::kTokenIDFieldNumber;
const int CMD_Halls_OnRequestCreateRoomCB::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_OnRequestCreateRoomCB::CMD_Halls_OnRequestCreateRoomCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_OnRequestCreateRoomCB)
}
CMD_Halls_OnRequestCreateRoomCB::CMD_Halls_OnRequestCreateRoomCB(const CMD_Halls_OnRequestCreateRoomCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_OnRequestCreateRoomCB)
}

void CMD_Halls_OnRequestCreateRoomCB::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Halls_OnRequestCreateRoomCB::~CMD_Halls_OnRequestCreateRoomCB() {
  // @@protoc_insertion_point(destructor:CMD_Halls_OnRequestCreateRoomCB)
  SharedDtor();
}

void CMD_Halls_OnRequestCreateRoomCB::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Halls_OnRequestCreateRoomCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_OnRequestCreateRoomCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[29].descriptor;
}

const CMD_Halls_OnRequestCreateRoomCB& CMD_Halls_OnRequestCreateRoomCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_OnRequestCreateRoomCB* CMD_Halls_OnRequestCreateRoomCB::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_OnRequestCreateRoomCB* n = new CMD_Halls_OnRequestCreateRoomCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_OnRequestCreateRoomCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_OnRequestCreateRoomCB)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
}

bool CMD_Halls_OnRequestCreateRoomCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_OnRequestCreateRoomCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_OnRequestCreateRoomCB.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_OnRequestCreateRoomCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_OnRequestCreateRoomCB)
  return false;
#undef DO_
}

void CMD_Halls_OnRequestCreateRoomCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_OnRequestCreateRoomCB)
  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnRequestCreateRoomCB.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  // uint64 tokenID = 4;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->tokenid(), output);
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_OnRequestCreateRoomCB)
}

::google::protobuf::uint8* CMD_Halls_OnRequestCreateRoomCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_OnRequestCreateRoomCB)
  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnRequestCreateRoomCB.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // int32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  // uint64 tokenID = 4;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->tokenid(), target);
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_OnRequestCreateRoomCB)
  return target;
}

size_t CMD_Halls_OnRequestCreateRoomCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_OnRequestCreateRoomCB)
  size_t total_size = 0;

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 tokenID = 4;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  // int32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_OnRequestCreateRoomCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_OnRequestCreateRoomCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_OnRequestCreateRoomCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_OnRequestCreateRoomCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_OnRequestCreateRoomCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_OnRequestCreateRoomCB)
    MergeFrom(*source);
  }
}

void CMD_Halls_OnRequestCreateRoomCB::MergeFrom(const CMD_Halls_OnRequestCreateRoomCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_OnRequestCreateRoomCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Halls_OnRequestCreateRoomCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_OnRequestCreateRoomCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_OnRequestCreateRoomCB::CopyFrom(const CMD_Halls_OnRequestCreateRoomCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_OnRequestCreateRoomCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_OnRequestCreateRoomCB::IsInitialized() const {
  return true;
}

void CMD_Halls_OnRequestCreateRoomCB::Swap(CMD_Halls_OnRequestCreateRoomCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_OnRequestCreateRoomCB::InternalSwap(CMD_Halls_OnRequestCreateRoomCB* other) {
  ip_.Swap(&other->ip_);
  std::swap(roomid_, other->roomid_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(port_, other->port_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_OnRequestCreateRoomCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_OnRequestCreateRoomCB

// uint64 roomID = 1;
void CMD_Halls_OnRequestCreateRoomCB::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnRequestCreateRoomCB::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.roomID)
  return roomid_;
}
void CMD_Halls_OnRequestCreateRoomCB::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.roomID)
}

// string ip = 2;
void CMD_Halls_OnRequestCreateRoomCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_OnRequestCreateRoomCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.ip)
  return ip_.GetNoArena();
}
void CMD_Halls_OnRequestCreateRoomCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.ip)
}
#if LANG_CXX11
void CMD_Halls_OnRequestCreateRoomCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnRequestCreateRoomCB.ip)
}
#endif
void CMD_Halls_OnRequestCreateRoomCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnRequestCreateRoomCB.ip)
}
void CMD_Halls_OnRequestCreateRoomCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnRequestCreateRoomCB.ip)
}
::std::string* CMD_Halls_OnRequestCreateRoomCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnRequestCreateRoomCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_OnRequestCreateRoomCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnRequestCreateRoomCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_OnRequestCreateRoomCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnRequestCreateRoomCB.ip)
}

// int32 port = 3;
void CMD_Halls_OnRequestCreateRoomCB::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnRequestCreateRoomCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.port)
  return port_;
}
void CMD_Halls_OnRequestCreateRoomCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.port)
}

// uint64 tokenID = 4;
void CMD_Halls_OnRequestCreateRoomCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnRequestCreateRoomCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.tokenID)
  return tokenid_;
}
void CMD_Halls_OnRequestCreateRoomCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.tokenID)
}

// .ServerError errcode = 5;
void CMD_Halls_OnRequestCreateRoomCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Halls_OnRequestCreateRoomCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRequestCreateRoomCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Halls_OnRequestCreateRoomCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRequestCreateRoomCB.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_OnRoomSrvGameOverReport::kRoomIDFieldNumber;
const int CMD_Halls_OnRoomSrvGameOverReport::kErrcodeFieldNumber;
const int CMD_Halls_OnRoomSrvGameOverReport::kPlayerdatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_OnRoomSrvGameOverReport::CMD_Halls_OnRoomSrvGameOverReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_OnRoomSrvGameOverReport)
}
CMD_Halls_OnRoomSrvGameOverReport::CMD_Halls_OnRoomSrvGameOverReport(const CMD_Halls_OnRoomSrvGameOverReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerdatas_(from.playerdatas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_OnRoomSrvGameOverReport)
}

void CMD_Halls_OnRoomSrvGameOverReport::SharedCtor() {
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Halls_OnRoomSrvGameOverReport::~CMD_Halls_OnRoomSrvGameOverReport() {
  // @@protoc_insertion_point(destructor:CMD_Halls_OnRoomSrvGameOverReport)
  SharedDtor();
}

void CMD_Halls_OnRoomSrvGameOverReport::SharedDtor() {
}

void CMD_Halls_OnRoomSrvGameOverReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_OnRoomSrvGameOverReport::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[30].descriptor;
}

const CMD_Halls_OnRoomSrvGameOverReport& CMD_Halls_OnRoomSrvGameOverReport::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_OnRoomSrvGameOverReport* CMD_Halls_OnRoomSrvGameOverReport::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_OnRoomSrvGameOverReport* n = new CMD_Halls_OnRoomSrvGameOverReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_OnRoomSrvGameOverReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_OnRoomSrvGameOverReport)
  playerdatas_.Clear();
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(errcode_));
}

bool CMD_Halls_OnRoomSrvGameOverReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_OnRoomSrvGameOverReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_Halls_PlayerGameData playerdatas = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerdatas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_OnRoomSrvGameOverReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_OnRoomSrvGameOverReport)
  return false;
#undef DO_
}

void CMD_Halls_OnRoomSrvGameOverReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_OnRoomSrvGameOverReport)
  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // .ServerError errcode = 2;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errcode(), output);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 3;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->playerdatas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_OnRoomSrvGameOverReport)
}

::google::protobuf::uint8* CMD_Halls_OnRoomSrvGameOverReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_OnRoomSrvGameOverReport)
  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // .ServerError errcode = 2;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->errcode(), target);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 3;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->playerdatas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_OnRoomSrvGameOverReport)
  return target;
}

size_t CMD_Halls_OnRoomSrvGameOverReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_OnRoomSrvGameOverReport)
  size_t total_size = 0;

  // repeated .CMD_Halls_PlayerGameData playerdatas = 3;
  {
    unsigned int count = this->playerdatas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerdatas(i));
    }
  }

  // uint64 roomID = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // .ServerError errcode = 2;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_OnRoomSrvGameOverReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_OnRoomSrvGameOverReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_OnRoomSrvGameOverReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_OnRoomSrvGameOverReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_OnRoomSrvGameOverReport)
    MergeFrom(*source);
  }
}

void CMD_Halls_OnRoomSrvGameOverReport::MergeFrom(const CMD_Halls_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerdatas_.MergeFrom(from.playerdatas_);
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Halls_OnRoomSrvGameOverReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_OnRoomSrvGameOverReport::CopyFrom(const CMD_Halls_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_OnRoomSrvGameOverReport::IsInitialized() const {
  return true;
}

void CMD_Halls_OnRoomSrvGameOverReport::Swap(CMD_Halls_OnRoomSrvGameOverReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_OnRoomSrvGameOverReport::InternalSwap(CMD_Halls_OnRoomSrvGameOverReport* other) {
  playerdatas_.UnsafeArenaSwap(&other->playerdatas_);
  std::swap(roomid_, other->roomid_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_OnRoomSrvGameOverReport::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_OnRoomSrvGameOverReport

// uint64 roomID = 1;
void CMD_Halls_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
void CMD_Halls_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 2;
void CMD_Halls_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Halls_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Halls_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 3;
int CMD_Halls_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
void CMD_Halls_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
const ::CMD_Halls_PlayerGameData& CMD_Halls_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
::CMD_Halls_PlayerGameData* CMD_Halls_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
::CMD_Halls_PlayerGameData* CMD_Halls_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Halls_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Halls_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Halls_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_OnQueryAccountCB::kCommitAccountNameFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kDatasFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kFoundObjectIDFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kPlayerNameFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kModelIDFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kExpFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kGoldFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kErrcodeFieldNumber;
const int CMD_Halls_OnQueryAccountCB::kQueryTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_OnQueryAccountCB::CMD_Halls_OnQueryAccountCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_OnQueryAccountCB)
}
CMD_Halls_OnQueryAccountCB::CMD_Halls_OnQueryAccountCB(const CMD_Halls_OnQueryAccountCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&foundobjectid_, &from.foundobjectid_,
    reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(querytype_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_OnQueryAccountCB)
}

void CMD_Halls_OnQueryAccountCB::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(querytype_));
  _cached_size_ = 0;
}

CMD_Halls_OnQueryAccountCB::~CMD_Halls_OnQueryAccountCB() {
  // @@protoc_insertion_point(destructor:CMD_Halls_OnQueryAccountCB)
  SharedDtor();
}

void CMD_Halls_OnQueryAccountCB::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Halls_OnQueryAccountCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_OnQueryAccountCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[31].descriptor;
}

const CMD_Halls_OnQueryAccountCB& CMD_Halls_OnQueryAccountCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_OnQueryAccountCB* CMD_Halls_OnQueryAccountCB::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_OnQueryAccountCB* n = new CMD_Halls_OnQueryAccountCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_OnQueryAccountCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_OnQueryAccountCB)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&querytype_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(querytype_));
}

bool CMD_Halls_OnQueryAccountCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_OnQueryAccountCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_OnQueryAccountCB.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundObjectID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundobjectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string playerName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Halls_OnQueryAccountCB.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 modelID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gold = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 8;
      case 8: {
        if (tag == 64u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queryType = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &querytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_OnQueryAccountCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_OnQueryAccountCB)
  return false;
#undef DO_
}

void CMD_Halls_OnQueryAccountCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_OnQueryAccountCB)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnQueryAccountCB.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->datas(), output);
  }

  // uint64 foundObjectID = 3;
  if (this->foundobjectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->foundobjectid(), output);
  }

  // string playerName = 4;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnQueryAccountCB.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->playername(), output);
  }

  // int32 modelID = 5;
  if (this->modelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->modelid(), output);
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exp(), output);
  }

  // int32 gold = 7;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gold(), output);
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->errcode(), output);
  }

  // int32 queryType = 9;
  if (this->querytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->querytype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_OnQueryAccountCB)
}

::google::protobuf::uint8* CMD_Halls_OnQueryAccountCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_OnQueryAccountCB)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnQueryAccountCB.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->datas(), target);
  }

  // uint64 foundObjectID = 3;
  if (this->foundobjectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->foundobjectid(), target);
  }

  // string playerName = 4;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Halls_OnQueryAccountCB.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->playername(), target);
  }

  // int32 modelID = 5;
  if (this->modelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->modelid(), target);
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->exp(), target);
  }

  // int32 gold = 7;
  if (this->gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gold(), target);
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->errcode(), target);
  }

  // int32 queryType = 9;
  if (this->querytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->querytype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_OnQueryAccountCB)
  return target;
}

size_t CMD_Halls_OnQueryAccountCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_OnQueryAccountCB)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // string playerName = 4;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // uint64 foundObjectID = 3;
  if (this->foundobjectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundobjectid());
  }

  // int32 modelID = 5;
  if (this->modelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modelid());
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 gold = 7;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // int32 queryType = 9;
  if (this->querytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->querytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_OnQueryAccountCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_OnQueryAccountCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_OnQueryAccountCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_OnQueryAccountCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_OnQueryAccountCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_OnQueryAccountCB)
    MergeFrom(*source);
  }
}

void CMD_Halls_OnQueryAccountCB::MergeFrom(const CMD_Halls_OnQueryAccountCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_OnQueryAccountCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.foundobjectid() != 0) {
    set_foundobjectid(from.foundobjectid());
  }
  if (from.modelid() != 0) {
    set_modelid(from.modelid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.querytype() != 0) {
    set_querytype(from.querytype());
  }
}

void CMD_Halls_OnQueryAccountCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_OnQueryAccountCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_OnQueryAccountCB::CopyFrom(const CMD_Halls_OnQueryAccountCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_OnQueryAccountCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_OnQueryAccountCB::IsInitialized() const {
  return true;
}

void CMD_Halls_OnQueryAccountCB::Swap(CMD_Halls_OnQueryAccountCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_OnQueryAccountCB::InternalSwap(CMD_Halls_OnQueryAccountCB* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  datas_.Swap(&other->datas_);
  playername_.Swap(&other->playername_);
  std::swap(foundobjectid_, other->foundobjectid_);
  std::swap(modelid_, other->modelid_);
  std::swap(exp_, other->exp_);
  std::swap(gold_, other->gold_);
  std::swap(errcode_, other->errcode_);
  std::swap(querytype_, other->querytype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_OnQueryAccountCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_OnQueryAccountCB

// string commitAccountName = 1;
void CMD_Halls_OnQueryAccountCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_OnQueryAccountCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
#if LANG_CXX11
void CMD_Halls_OnQueryAccountCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
#endif
void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
void CMD_Halls_OnQueryAccountCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.commitAccountName)
}
::std::string* CMD_Halls_OnQueryAccountCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_OnQueryAccountCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_OnQueryAccountCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.commitAccountName)
}

// bytes datas = 2;
void CMD_Halls_OnQueryAccountCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_OnQueryAccountCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.datas)
  return datas_.GetNoArena();
}
void CMD_Halls_OnQueryAccountCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.datas)
}
#if LANG_CXX11
void CMD_Halls_OnQueryAccountCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.datas)
}
#endif
void CMD_Halls_OnQueryAccountCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.datas)
}
void CMD_Halls_OnQueryAccountCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.datas)
}
::std::string* CMD_Halls_OnQueryAccountCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_OnQueryAccountCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_OnQueryAccountCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.datas)
}

// uint64 foundObjectID = 3;
void CMD_Halls_OnQueryAccountCB::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnQueryAccountCB::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.foundObjectID)
  return foundobjectid_;
}
void CMD_Halls_OnQueryAccountCB::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.foundObjectID)
}

// string playerName = 4;
void CMD_Halls_OnQueryAccountCB::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Halls_OnQueryAccountCB::playername() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.playerName)
  return playername_.GetNoArena();
}
void CMD_Halls_OnQueryAccountCB::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.playerName)
}
#if LANG_CXX11
void CMD_Halls_OnQueryAccountCB::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Halls_OnQueryAccountCB.playerName)
}
#endif
void CMD_Halls_OnQueryAccountCB::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Halls_OnQueryAccountCB.playerName)
}
void CMD_Halls_OnQueryAccountCB::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Halls_OnQueryAccountCB.playerName)
}
::std::string* CMD_Halls_OnQueryAccountCB::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Halls_OnQueryAccountCB.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Halls_OnQueryAccountCB::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_Halls_OnQueryAccountCB.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Halls_OnQueryAccountCB::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_Halls_OnQueryAccountCB.playerName)
}

// int32 modelID = 5;
void CMD_Halls_OnQueryAccountCB::clear_modelid() {
  modelid_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.modelID)
  return modelid_;
}
void CMD_Halls_OnQueryAccountCB::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.modelID)
}

// int32 exp = 6;
void CMD_Halls_OnQueryAccountCB::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::exp() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.exp)
  return exp_;
}
void CMD_Halls_OnQueryAccountCB::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.exp)
}

// int32 gold = 7;
void CMD_Halls_OnQueryAccountCB::clear_gold() {
  gold_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::gold() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.gold)
  return gold_;
}
void CMD_Halls_OnQueryAccountCB::set_gold(::google::protobuf::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.gold)
}

// .ServerError errcode = 8;
void CMD_Halls_OnQueryAccountCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Halls_OnQueryAccountCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Halls_OnQueryAccountCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.errcode)
}

// int32 queryType = 9;
void CMD_Halls_OnQueryAccountCB::clear_querytype() {
  querytype_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryAccountCB::querytype() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryAccountCB.queryType)
  return querytype_;
}
void CMD_Halls_OnQueryAccountCB::set_querytype(::google::protobuf::int32 value) {
  
  querytype_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryAccountCB.queryType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_OnQueryPlayerGameDataCB::kPlayerIDFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kScoreFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kTopscoreFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kGameIDFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kGameModeFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kVictoryFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kDefeatFieldNumber;
const int CMD_Halls_OnQueryPlayerGameDataCB::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_OnQueryPlayerGameDataCB::CMD_Halls_OnQueryPlayerGameDataCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_OnQueryPlayerGameDataCB)
}
CMD_Halls_OnQueryPlayerGameDataCB::CMD_Halls_OnQueryPlayerGameDataCB(const CMD_Halls_OnQueryPlayerGameDataCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_OnQueryPlayerGameDataCB)
}

void CMD_Halls_OnQueryPlayerGameDataCB::SharedCtor() {
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Halls_OnQueryPlayerGameDataCB::~CMD_Halls_OnQueryPlayerGameDataCB() {
  // @@protoc_insertion_point(destructor:CMD_Halls_OnQueryPlayerGameDataCB)
  SharedDtor();
}

void CMD_Halls_OnQueryPlayerGameDataCB::SharedDtor() {
}

void CMD_Halls_OnQueryPlayerGameDataCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_OnQueryPlayerGameDataCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[32].descriptor;
}

const CMD_Halls_OnQueryPlayerGameDataCB& CMD_Halls_OnQueryPlayerGameDataCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_OnQueryPlayerGameDataCB* CMD_Halls_OnQueryPlayerGameDataCB::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_OnQueryPlayerGameDataCB* n = new CMD_Halls_OnQueryPlayerGameDataCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_OnQueryPlayerGameDataCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_OnQueryPlayerGameDataCB)
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(errcode_));
}

bool CMD_Halls_OnQueryPlayerGameDataCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_OnQueryPlayerGameDataCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topscore = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameMode = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 victory = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 defeat = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 8;
      case 8: {
        if (tag == 64u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_OnQueryPlayerGameDataCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_OnQueryPlayerGameDataCB)
  return false;
#undef DO_
}

void CMD_Halls_OnQueryPlayerGameDataCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_OnQueryPlayerGameDataCB)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->topscore(), output);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gameid(), output);
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gamemode(), output);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->victory(), output);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->defeat(), output);
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_OnQueryPlayerGameDataCB)
}

::google::protobuf::uint8* CMD_Halls_OnQueryPlayerGameDataCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_OnQueryPlayerGameDataCB)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // int32 score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->topscore(), target);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gameid(), target);
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gamemode(), target);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->victory(), target);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->defeat(), target);
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_OnQueryPlayerGameDataCB)
  return target;
}

size_t CMD_Halls_OnQueryPlayerGameDataCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_OnQueryPlayerGameDataCB)
  size_t total_size = 0;

  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // int32 score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // int32 topscore = 3;
  if (this->topscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topscore());
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 gameMode = 5;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemode());
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victory());
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defeat());
  }

  // .ServerError errcode = 8;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_OnQueryPlayerGameDataCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_OnQueryPlayerGameDataCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_OnQueryPlayerGameDataCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_OnQueryPlayerGameDataCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_OnQueryPlayerGameDataCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_OnQueryPlayerGameDataCB)
    MergeFrom(*source);
  }
}

void CMD_Halls_OnQueryPlayerGameDataCB::MergeFrom(const CMD_Halls_OnQueryPlayerGameDataCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_OnQueryPlayerGameDataCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.topscore() != 0) {
    set_topscore(from.topscore());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.victory() != 0) {
    set_victory(from.victory());
  }
  if (from.defeat() != 0) {
    set_defeat(from.defeat());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Halls_OnQueryPlayerGameDataCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_OnQueryPlayerGameDataCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_OnQueryPlayerGameDataCB::CopyFrom(const CMD_Halls_OnQueryPlayerGameDataCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_OnQueryPlayerGameDataCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_OnQueryPlayerGameDataCB::IsInitialized() const {
  return true;
}

void CMD_Halls_OnQueryPlayerGameDataCB::Swap(CMD_Halls_OnQueryPlayerGameDataCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_OnQueryPlayerGameDataCB::InternalSwap(CMD_Halls_OnQueryPlayerGameDataCB* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(score_, other->score_);
  std::swap(topscore_, other->topscore_);
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(victory_, other->victory_);
  std::swap(defeat_, other->defeat_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_OnQueryPlayerGameDataCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_OnQueryPlayerGameDataCB

// uint64 playerID = 1;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnQueryPlayerGameDataCB::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.playerID)
  return playerid_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.playerID)
}

// int32 score = 2;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::score() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.score)
  return score_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.score)
}

// int32 topscore = 3;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_topscore() {
  topscore_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.topscore)
  return topscore_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.topscore)
}

// uint64 gameID = 4;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_OnQueryPlayerGameDataCB::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.gameID)
  return gameid_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.gameID)
}

// uint32 gameMode = 5;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_gamemode() {
  gamemode_ = 0u;
}
::google::protobuf::uint32 CMD_Halls_OnQueryPlayerGameDataCB::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.gameMode)
  return gamemode_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.gameMode)
}

// int32 victory = 6;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_victory() {
  victory_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.victory)
  return victory_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.victory)
}

// int32 defeat = 7;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_defeat() {
  defeat_ = 0;
}
::google::protobuf::int32 CMD_Halls_OnQueryPlayerGameDataCB::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.defeat)
  return defeat_;
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.defeat)
}

// .ServerError errcode = 8;
void CMD_Halls_OnQueryPlayerGameDataCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Halls_OnQueryPlayerGameDataCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_OnQueryPlayerGameDataCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Halls_OnQueryPlayerGameDataCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_OnQueryPlayerGameDataCB.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_QueryPlayerGameData::kGameIDFieldNumber;
const int CMD_Halls_QueryPlayerGameData::kGameModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_QueryPlayerGameData::CMD_Halls_QueryPlayerGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_QueryPlayerGameData)
}
CMD_Halls_QueryPlayerGameData::CMD_Halls_QueryPlayerGameData(const CMD_Halls_QueryPlayerGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_QueryPlayerGameData)
}

void CMD_Halls_QueryPlayerGameData::SharedCtor() {
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
  _cached_size_ = 0;
}

CMD_Halls_QueryPlayerGameData::~CMD_Halls_QueryPlayerGameData() {
  // @@protoc_insertion_point(destructor:CMD_Halls_QueryPlayerGameData)
  SharedDtor();
}

void CMD_Halls_QueryPlayerGameData::SharedDtor() {
}

void CMD_Halls_QueryPlayerGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_QueryPlayerGameData::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[33].descriptor;
}

const CMD_Halls_QueryPlayerGameData& CMD_Halls_QueryPlayerGameData::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_QueryPlayerGameData* CMD_Halls_QueryPlayerGameData::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_QueryPlayerGameData* n = new CMD_Halls_QueryPlayerGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_QueryPlayerGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_QueryPlayerGameData)
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&gamemode_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(gamemode_));
}

bool CMD_Halls_QueryPlayerGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_QueryPlayerGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameMode = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_QueryPlayerGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_QueryPlayerGameData)
  return false;
#undef DO_
}

void CMD_Halls_QueryPlayerGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_QueryPlayerGameData)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gamemode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_QueryPlayerGameData)
}

::google::protobuf::uint8* CMD_Halls_QueryPlayerGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_QueryPlayerGameData)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gamemode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_QueryPlayerGameData)
  return target;
}

size_t CMD_Halls_QueryPlayerGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_QueryPlayerGameData)
  size_t total_size = 0;

  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_QueryPlayerGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_QueryPlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_QueryPlayerGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_QueryPlayerGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_QueryPlayerGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_QueryPlayerGameData)
    MergeFrom(*source);
  }
}

void CMD_Halls_QueryPlayerGameData::MergeFrom(const CMD_Halls_QueryPlayerGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_QueryPlayerGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
}

void CMD_Halls_QueryPlayerGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_QueryPlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_QueryPlayerGameData::CopyFrom(const CMD_Halls_QueryPlayerGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_QueryPlayerGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_QueryPlayerGameData::IsInitialized() const {
  return true;
}

void CMD_Halls_QueryPlayerGameData::Swap(CMD_Halls_QueryPlayerGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_QueryPlayerGameData::InternalSwap(CMD_Halls_QueryPlayerGameData* other) {
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_QueryPlayerGameData::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_QueryPlayerGameData

// uint64 gameID = 1;
void CMD_Halls_QueryPlayerGameData::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Halls_QueryPlayerGameData::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_QueryPlayerGameData.gameID)
  return gameid_;
}
void CMD_Halls_QueryPlayerGameData::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_QueryPlayerGameData.gameID)
}

// uint32 gameMode = 2;
void CMD_Halls_QueryPlayerGameData::clear_gamemode() {
  gamemode_ = 0u;
}
::google::protobuf::uint32 CMD_Halls_QueryPlayerGameData::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_QueryPlayerGameData.gameMode)
  return gamemode_;
}
void CMD_Halls_QueryPlayerGameData::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_QueryPlayerGameData.gameMode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Halls_ListGames::kPageFieldNumber;
const int CMD_Halls_ListGames::kTypeFieldNumber;
const int CMD_Halls_ListGames::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Halls_ListGames::CMD_Halls_ListGames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Halls_ListGames)
}
CMD_Halls_ListGames::CMD_Halls_ListGames(const CMD_Halls_ListGames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_, &from.page_,
    reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(maxnum_));
  // @@protoc_insertion_point(copy_constructor:CMD_Halls_ListGames)
}

void CMD_Halls_ListGames::SharedCtor() {
  ::memset(&page_, 0, reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(maxnum_));
  _cached_size_ = 0;
}

CMD_Halls_ListGames::~CMD_Halls_ListGames() {
  // @@protoc_insertion_point(destructor:CMD_Halls_ListGames)
  SharedDtor();
}

void CMD_Halls_ListGames::SharedDtor() {
}

void CMD_Halls_ListGames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Halls_ListGames::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[34].descriptor;
}

const CMD_Halls_ListGames& CMD_Halls_ListGames::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Halls_ListGames* CMD_Halls_ListGames::New(::google::protobuf::Arena* arena) const {
  CMD_Halls_ListGames* n = new CMD_Halls_ListGames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Halls_ListGames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Halls_ListGames)
  ::memset(&page_, 0, reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(maxnum_));
}

bool CMD_Halls_ListGames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Halls_ListGames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxNum = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Halls_ListGames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Halls_ListGames)
  return false;
#undef DO_
}

void CMD_Halls_ListGames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Halls_ListGames)
  // uint32 page = 1;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->page(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // uint32 maxNum = 3;
  if (this->maxnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Halls_ListGames)
}

::google::protobuf::uint8* CMD_Halls_ListGames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Halls_ListGames)
  // uint32 page = 1;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->page(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // uint32 maxNum = 3;
  if (this->maxnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Halls_ListGames)
  return target;
}

size_t CMD_Halls_ListGames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Halls_ListGames)
  size_t total_size = 0;

  // uint32 page = 1;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 maxNum = 3;
  if (this->maxnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Halls_ListGames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Halls_ListGames)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Halls_ListGames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Halls_ListGames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Halls_ListGames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Halls_ListGames)
    MergeFrom(*source);
  }
}

void CMD_Halls_ListGames::MergeFrom(const CMD_Halls_ListGames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Halls_ListGames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.page() != 0) {
    set_page(from.page());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.maxnum() != 0) {
    set_maxnum(from.maxnum());
  }
}

void CMD_Halls_ListGames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Halls_ListGames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Halls_ListGames::CopyFrom(const CMD_Halls_ListGames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Halls_ListGames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Halls_ListGames::IsInitialized() const {
  return true;
}

void CMD_Halls_ListGames::Swap(CMD_Halls_ListGames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Halls_ListGames::InternalSwap(CMD_Halls_ListGames* other) {
  std::swap(page_, other->page_);
  std::swap(type_, other->type_);
  std::swap(maxnum_, other->maxnum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Halls_ListGames::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Halls_ListGames

// uint32 page = 1;
void CMD_Halls_ListGames::clear_page() {
  page_ = 0u;
}
::google::protobuf::uint32 CMD_Halls_ListGames::page() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.page)
  return page_;
}
void CMD_Halls_ListGames::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.page)
}

// uint32 type = 2;
void CMD_Halls_ListGames::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 CMD_Halls_ListGames::type() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.type)
  return type_;
}
void CMD_Halls_ListGames::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.type)
}

// uint32 maxNum = 3;
void CMD_Halls_ListGames::clear_maxnum() {
  maxnum_ = 0u;
}
::google::protobuf::uint32 CMD_Halls_ListGames::maxnum() const {
  // @@protoc_insertion_point(field_get:CMD_Halls_ListGames.maxNum)
  return maxnum_;
}
void CMD_Halls_ListGames::set_maxnum(::google::protobuf::uint32 value) {
  
  maxnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Halls_ListGames.maxNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Hallsmgr_RequestAllocClient::kCommitAccountNameFieldNumber;
const int CMD_Hallsmgr_RequestAllocClient::kPasswordFieldNumber;
const int CMD_Hallsmgr_RequestAllocClient::kDatasFieldNumber;
const int CMD_Hallsmgr_RequestAllocClient::kFoundObjectIDFieldNumber;
const int CMD_Hallsmgr_RequestAllocClient::kFoundAppIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Hallsmgr_RequestAllocClient::CMD_Hallsmgr_RequestAllocClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Hallsmgr_RequestAllocClient)
}
CMD_Hallsmgr_RequestAllocClient::CMD_Hallsmgr_RequestAllocClient(const CMD_Hallsmgr_RequestAllocClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  ::memcpy(&foundobjectid_, &from.foundobjectid_,
    reinterpret_cast<char*>(&foundappid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(foundappid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Hallsmgr_RequestAllocClient)
}

void CMD_Hallsmgr_RequestAllocClient::SharedCtor() {
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&foundappid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(foundappid_));
  _cached_size_ = 0;
}

CMD_Hallsmgr_RequestAllocClient::~CMD_Hallsmgr_RequestAllocClient() {
  // @@protoc_insertion_point(destructor:CMD_Hallsmgr_RequestAllocClient)
  SharedDtor();
}

void CMD_Hallsmgr_RequestAllocClient::SharedDtor() {
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Hallsmgr_RequestAllocClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Hallsmgr_RequestAllocClient::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[35].descriptor;
}

const CMD_Hallsmgr_RequestAllocClient& CMD_Hallsmgr_RequestAllocClient::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Hallsmgr_RequestAllocClient* CMD_Hallsmgr_RequestAllocClient::New(::google::protobuf::Arena* arena) const {
  CMD_Hallsmgr_RequestAllocClient* n = new CMD_Hallsmgr_RequestAllocClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Hallsmgr_RequestAllocClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Hallsmgr_RequestAllocClient)
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&foundobjectid_, 0, reinterpret_cast<char*>(&foundappid_) -
    reinterpret_cast<char*>(&foundobjectid_) + sizeof(foundappid_));
}

bool CMD_Hallsmgr_RequestAllocClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Hallsmgr_RequestAllocClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string commitAccountName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Hallsmgr_RequestAllocClient.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Hallsmgr_RequestAllocClient.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundObjectID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundobjectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 foundAppID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &foundappid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Hallsmgr_RequestAllocClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Hallsmgr_RequestAllocClient)
  return false;
#undef DO_
}

void CMD_Hallsmgr_RequestAllocClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Hallsmgr_RequestAllocClient)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_RequestAllocClient.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commitaccountname(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_RequestAllocClient.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->datas(), output);
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->foundobjectid(), output);
  }

  // uint64 foundAppID = 5;
  if (this->foundappid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->foundappid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Hallsmgr_RequestAllocClient)
}

::google::protobuf::uint8* CMD_Hallsmgr_RequestAllocClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Hallsmgr_RequestAllocClient)
  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_RequestAllocClient.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commitaccountname(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_RequestAllocClient.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->datas(), target);
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->foundobjectid(), target);
  }

  // uint64 foundAppID = 5;
  if (this->foundappid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->foundappid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Hallsmgr_RequestAllocClient)
  return target;
}

size_t CMD_Hallsmgr_RequestAllocClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Hallsmgr_RequestAllocClient)
  size_t total_size = 0;

  // string commitAccountName = 1;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes datas = 3;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // uint64 foundObjectID = 4;
  if (this->foundobjectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundobjectid());
  }

  // uint64 foundAppID = 5;
  if (this->foundappid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->foundappid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Hallsmgr_RequestAllocClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Hallsmgr_RequestAllocClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Hallsmgr_RequestAllocClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Hallsmgr_RequestAllocClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Hallsmgr_RequestAllocClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Hallsmgr_RequestAllocClient)
    MergeFrom(*source);
  }
}

void CMD_Hallsmgr_RequestAllocClient::MergeFrom(const CMD_Hallsmgr_RequestAllocClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Hallsmgr_RequestAllocClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.foundobjectid() != 0) {
    set_foundobjectid(from.foundobjectid());
  }
  if (from.foundappid() != 0) {
    set_foundappid(from.foundappid());
  }
}

void CMD_Hallsmgr_RequestAllocClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Hallsmgr_RequestAllocClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Hallsmgr_RequestAllocClient::CopyFrom(const CMD_Hallsmgr_RequestAllocClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Hallsmgr_RequestAllocClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Hallsmgr_RequestAllocClient::IsInitialized() const {
  return true;
}

void CMD_Hallsmgr_RequestAllocClient::Swap(CMD_Hallsmgr_RequestAllocClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Hallsmgr_RequestAllocClient::InternalSwap(CMD_Hallsmgr_RequestAllocClient* other) {
  commitaccountname_.Swap(&other->commitaccountname_);
  password_.Swap(&other->password_);
  datas_.Swap(&other->datas_);
  std::swap(foundobjectid_, other->foundobjectid_);
  std::swap(foundappid_, other->foundappid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Hallsmgr_RequestAllocClient::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Hallsmgr_RequestAllocClient

// string commitAccountName = 1;
void CMD_Hallsmgr_RequestAllocClient::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hallsmgr_RequestAllocClient::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
#if LANG_CXX11
void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
#endif
void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
void CMD_Hallsmgr_RequestAllocClient::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}
::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hallsmgr_RequestAllocClient::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hallsmgr_RequestAllocClient::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.commitAccountName)
}

// string password = 2;
void CMD_Hallsmgr_RequestAllocClient::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hallsmgr_RequestAllocClient::password() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.password)
  return password_.GetNoArena();
}
void CMD_Hallsmgr_RequestAllocClient::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.password)
}
#if LANG_CXX11
void CMD_Hallsmgr_RequestAllocClient::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.password)
}
#endif
void CMD_Hallsmgr_RequestAllocClient::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.password)
}
void CMD_Hallsmgr_RequestAllocClient::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.password)
}
::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hallsmgr_RequestAllocClient::release_password() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hallsmgr_RequestAllocClient::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.password)
}

// bytes datas = 3;
void CMD_Hallsmgr_RequestAllocClient::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hallsmgr_RequestAllocClient::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.datas)
  return datas_.GetNoArena();
}
void CMD_Hallsmgr_RequestAllocClient::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.datas)
}
#if LANG_CXX11
void CMD_Hallsmgr_RequestAllocClient::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_RequestAllocClient.datas)
}
#endif
void CMD_Hallsmgr_RequestAllocClient::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_RequestAllocClient.datas)
}
void CMD_Hallsmgr_RequestAllocClient::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_RequestAllocClient.datas)
}
::std::string* CMD_Hallsmgr_RequestAllocClient::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_RequestAllocClient.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hallsmgr_RequestAllocClient::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_RequestAllocClient.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hallsmgr_RequestAllocClient::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_RequestAllocClient.datas)
}

// uint64 foundObjectID = 4;
void CMD_Hallsmgr_RequestAllocClient::clear_foundobjectid() {
  foundobjectid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hallsmgr_RequestAllocClient::foundobjectid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.foundObjectID)
  return foundobjectid_;
}
void CMD_Hallsmgr_RequestAllocClient::set_foundobjectid(::google::protobuf::uint64 value) {
  
  foundobjectid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.foundObjectID)
}

// uint64 foundAppID = 5;
void CMD_Hallsmgr_RequestAllocClient::clear_foundappid() {
  foundappid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hallsmgr_RequestAllocClient::foundappid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_RequestAllocClient.foundAppID)
  return foundappid_;
}
void CMD_Hallsmgr_RequestAllocClient::set_foundappid(::google::protobuf::uint64 value) {
  
  foundappid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_RequestAllocClient.foundAppID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Hallsmgr_OnRequestAllocClientCB::kIpFieldNumber;
const int CMD_Hallsmgr_OnRequestAllocClientCB::kPortFieldNumber;
const int CMD_Hallsmgr_OnRequestAllocClientCB::kCommitAccountNameFieldNumber;
const int CMD_Hallsmgr_OnRequestAllocClientCB::kErrcodeFieldNumber;
const int CMD_Hallsmgr_OnRequestAllocClientCB::kLoginSessionIDFieldNumber;
const int CMD_Hallsmgr_OnRequestAllocClientCB::kTokenIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Hallsmgr_OnRequestAllocClientCB::CMD_Hallsmgr_OnRequestAllocClientCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Hallsmgr_OnRequestAllocClientCB)
}
CMD_Hallsmgr_OnRequestAllocClientCB::CMD_Hallsmgr_OnRequestAllocClientCB(const CMD_Hallsmgr_OnRequestAllocClientCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.commitaccountname().size() > 0) {
    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Hallsmgr_OnRequestAllocClientCB)
}

void CMD_Hallsmgr_OnRequestAllocClientCB::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
  _cached_size_ = 0;
}

CMD_Hallsmgr_OnRequestAllocClientCB::~CMD_Hallsmgr_OnRequestAllocClientCB() {
  // @@protoc_insertion_point(destructor:CMD_Hallsmgr_OnRequestAllocClientCB)
  SharedDtor();
}

void CMD_Hallsmgr_OnRequestAllocClientCB::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Hallsmgr_OnRequestAllocClientCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Hallsmgr_OnRequestAllocClientCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[36].descriptor;
}

const CMD_Hallsmgr_OnRequestAllocClientCB& CMD_Hallsmgr_OnRequestAllocClientCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Hallsmgr_OnRequestAllocClientCB* CMD_Hallsmgr_OnRequestAllocClientCB::New(::google::protobuf::Arena* arena) const {
  CMD_Hallsmgr_OnRequestAllocClientCB* n = new CMD_Hallsmgr_OnRequestAllocClientCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Hallsmgr_OnRequestAllocClientCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&port_) + sizeof(tokenid_));
}

bool CMD_Hallsmgr_OnRequestAllocClientCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Hallsmgr_OnRequestAllocClientCB.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string commitAccountName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commitaccountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commitaccountname().data(), this->commitaccountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 loginSessionID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &loginsessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Hallsmgr_OnRequestAllocClientCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Hallsmgr_OnRequestAllocClientCB)
  return false;
#undef DO_
}

void CMD_Hallsmgr_OnRequestAllocClientCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_OnRequestAllocClientCB.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->commitaccountname(), output);
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->errcode(), output);
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->loginsessionid(), output);
  }

  // uint64 tokenID = 6;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->tokenid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Hallsmgr_OnRequestAllocClientCB)
}

::google::protobuf::uint8* CMD_Hallsmgr_OnRequestAllocClientCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_OnRequestAllocClientCB.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commitaccountname().data(), this->commitaccountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commitaccountname(), target);
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->errcode(), target);
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->loginsessionid(), target);
  }

  // uint64 tokenID = 6;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->tokenid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Hallsmgr_OnRequestAllocClientCB)
  return target;
}

size_t CMD_Hallsmgr_OnRequestAllocClientCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  size_t total_size = 0;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string commitAccountName = 3;
  if (this->commitaccountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commitaccountname());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .ServerError errcode = 4;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint64 loginSessionID = 5;
  if (this->loginsessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->loginsessionid());
  }

  // uint64 tokenID = 6;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Hallsmgr_OnRequestAllocClientCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Hallsmgr_OnRequestAllocClientCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Hallsmgr_OnRequestAllocClientCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Hallsmgr_OnRequestAllocClientCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Hallsmgr_OnRequestAllocClientCB)
    MergeFrom(*source);
  }
}

void CMD_Hallsmgr_OnRequestAllocClientCB::MergeFrom(const CMD_Hallsmgr_OnRequestAllocClientCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.commitaccountname().size() > 0) {

    commitaccountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitaccountname_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.loginsessionid() != 0) {
    set_loginsessionid(from.loginsessionid());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
}

void CMD_Hallsmgr_OnRequestAllocClientCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Hallsmgr_OnRequestAllocClientCB::CopyFrom(const CMD_Hallsmgr_OnRequestAllocClientCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Hallsmgr_OnRequestAllocClientCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Hallsmgr_OnRequestAllocClientCB::IsInitialized() const {
  return true;
}

void CMD_Hallsmgr_OnRequestAllocClientCB::Swap(CMD_Hallsmgr_OnRequestAllocClientCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Hallsmgr_OnRequestAllocClientCB::InternalSwap(CMD_Hallsmgr_OnRequestAllocClientCB* other) {
  ip_.Swap(&other->ip_);
  commitaccountname_.Swap(&other->commitaccountname_);
  std::swap(port_, other->port_);
  std::swap(errcode_, other->errcode_);
  std::swap(loginsessionid_, other->loginsessionid_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Hallsmgr_OnRequestAllocClientCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Hallsmgr_OnRequestAllocClientCB

// string ip = 1;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hallsmgr_OnRequestAllocClientCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  return ip_.GetNoArena();
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
#if LANG_CXX11
void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
#endif
void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}
::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_OnRequestAllocClientCB.ip)
}

// int32 port = 2;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Hallsmgr_OnRequestAllocClientCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.port)
  return port_;
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.port)
}

// string commitAccountName = 3;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_commitaccountname() {
  commitaccountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Hallsmgr_OnRequestAllocClientCB::commitaccountname() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.GetNoArena();
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const ::std::string& value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
#if LANG_CXX11
void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(::std::string&& value) {
  
  commitaccountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
#endif
void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const char* value) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_commitaccountname(const char* value, size_t size) {
  
  commitaccountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}
::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::mutable_commitaccountname() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  return commitaccountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Hallsmgr_OnRequestAllocClientCB::release_commitaccountname() {
  // @@protoc_insertion_point(field_release:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
  
  return commitaccountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_allocated_commitaccountname(::std::string* commitaccountname) {
  if (commitaccountname != NULL) {
    
  } else {
    
  }
  commitaccountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commitaccountname);
  // @@protoc_insertion_point(field_set_allocated:CMD_Hallsmgr_OnRequestAllocClientCB.commitAccountName)
}

// .ServerError errcode = 4;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Hallsmgr_OnRequestAllocClientCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.errcode)
}

// uint64 loginSessionID = 5;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_loginsessionid() {
  loginsessionid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hallsmgr_OnRequestAllocClientCB::loginsessionid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.loginSessionID)
  return loginsessionid_;
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_loginsessionid(::google::protobuf::uint64 value) {
  
  loginsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.loginSessionID)
}

// uint64 tokenID = 6;
void CMD_Hallsmgr_OnRequestAllocClientCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Hallsmgr_OnRequestAllocClientCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Hallsmgr_OnRequestAllocClientCB.tokenID)
  return tokenid_;
}
void CMD_Hallsmgr_OnRequestAllocClientCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Hallsmgr_OnRequestAllocClientCB.tokenID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_RoomPlayerInfo::kPlayerIDFieldNumber;
const int CMD_RoomPlayerInfo::kClientAddrFieldNumber;
const int CMD_RoomPlayerInfo::kExpFieldNumber;
const int CMD_RoomPlayerInfo::kScoreFieldNumber;
const int CMD_RoomPlayerInfo::kTopscoreFieldNumber;
const int CMD_RoomPlayerInfo::kVictoryFieldNumber;
const int CMD_RoomPlayerInfo::kDefeatFieldNumber;
const int CMD_RoomPlayerInfo::kPlayerNameFieldNumber;
const int CMD_RoomPlayerInfo::kPlayerModelIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_RoomPlayerInfo::CMD_RoomPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_RoomPlayerInfo)
}
CMD_RoomPlayerInfo::CMD_RoomPlayerInfo(const CMD_RoomPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientaddr().size() > 0) {
    clientaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientaddr_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&playermodelid_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playermodelid_));
  // @@protoc_insertion_point(copy_constructor:CMD_RoomPlayerInfo)
}

void CMD_RoomPlayerInfo::SharedCtor() {
  clientaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&playermodelid_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playermodelid_));
  _cached_size_ = 0;
}

CMD_RoomPlayerInfo::~CMD_RoomPlayerInfo() {
  // @@protoc_insertion_point(destructor:CMD_RoomPlayerInfo)
  SharedDtor();
}

void CMD_RoomPlayerInfo::SharedDtor() {
  clientaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_RoomPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_RoomPlayerInfo::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[37].descriptor;
}

const CMD_RoomPlayerInfo& CMD_RoomPlayerInfo::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_RoomPlayerInfo* CMD_RoomPlayerInfo::New(::google::protobuf::Arena* arena) const {
  CMD_RoomPlayerInfo* n = new CMD_RoomPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_RoomPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_RoomPlayerInfo)
  clientaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&playermodelid_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playermodelid_));
}

bool CMD_RoomPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_RoomPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clientAddr = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientaddr().data(), this->clientaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_RoomPlayerInfo.clientAddr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topscore = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 victory = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 defeat = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string playerName = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_RoomPlayerInfo.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playerModelID = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playermodelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_RoomPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_RoomPlayerInfo)
  return false;
#undef DO_
}

void CMD_RoomPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_RoomPlayerInfo)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // string clientAddr = 2;
  if (this->clientaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientaddr().data(), this->clientaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_RoomPlayerInfo.clientAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientaddr(), output);
  }

  // int32 exp = 3;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  // int32 score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  // int32 topscore = 5;
  if (this->topscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->topscore(), output);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->victory(), output);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->defeat(), output);
  }

  // string playerName = 8;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_RoomPlayerInfo.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->playername(), output);
  }

  // int32 playerModelID = 9;
  if (this->playermodelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->playermodelid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_RoomPlayerInfo)
}

::google::protobuf::uint8* CMD_RoomPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_RoomPlayerInfo)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // string clientAddr = 2;
  if (this->clientaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientaddr().data(), this->clientaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_RoomPlayerInfo.clientAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientaddr(), target);
  }

  // int32 exp = 3;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  // int32 score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  // int32 topscore = 5;
  if (this->topscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->topscore(), target);
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->victory(), target);
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->defeat(), target);
  }

  // string playerName = 8;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_RoomPlayerInfo.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->playername(), target);
  }

  // int32 playerModelID = 9;
  if (this->playermodelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->playermodelid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_RoomPlayerInfo)
  return target;
}

size_t CMD_RoomPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_RoomPlayerInfo)
  size_t total_size = 0;

  // string clientAddr = 2;
  if (this->clientaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientaddr());
  }

  // string playerName = 8;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // int32 exp = 3;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // int32 topscore = 5;
  if (this->topscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topscore());
  }

  // int32 victory = 6;
  if (this->victory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victory());
  }

  // int32 defeat = 7;
  if (this->defeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defeat());
  }

  // int32 playerModelID = 9;
  if (this->playermodelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playermodelid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_RoomPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_RoomPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_RoomPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_RoomPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_RoomPlayerInfo)
    MergeFrom(*source);
  }
}

void CMD_RoomPlayerInfo::MergeFrom(const CMD_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.clientaddr().size() > 0) {

    clientaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientaddr_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.topscore() != 0) {
    set_topscore(from.topscore());
  }
  if (from.victory() != 0) {
    set_victory(from.victory());
  }
  if (from.defeat() != 0) {
    set_defeat(from.defeat());
  }
  if (from.playermodelid() != 0) {
    set_playermodelid(from.playermodelid());
  }
}

void CMD_RoomPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_RoomPlayerInfo::CopyFrom(const CMD_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_RoomPlayerInfo::IsInitialized() const {
  return true;
}

void CMD_RoomPlayerInfo::Swap(CMD_RoomPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_RoomPlayerInfo::InternalSwap(CMD_RoomPlayerInfo* other) {
  clientaddr_.Swap(&other->clientaddr_);
  playername_.Swap(&other->playername_);
  std::swap(playerid_, other->playerid_);
  std::swap(exp_, other->exp_);
  std::swap(score_, other->score_);
  std::swap(topscore_, other->topscore_);
  std::swap(victory_, other->victory_);
  std::swap(defeat_, other->defeat_);
  std::swap(playermodelid_, other->playermodelid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_RoomPlayerInfo::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[37];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_RoomPlayerInfo

// uint64 playerID = 1;
void CMD_RoomPlayerInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_RoomPlayerInfo::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerID)
  return playerid_;
}
void CMD_RoomPlayerInfo::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerID)
}

// string clientAddr = 2;
void CMD_RoomPlayerInfo::clear_clientaddr() {
  clientaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_RoomPlayerInfo::clientaddr() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.clientAddr)
  return clientaddr_.GetNoArena();
}
void CMD_RoomPlayerInfo::set_clientaddr(const ::std::string& value) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.clientAddr)
}
#if LANG_CXX11
void CMD_RoomPlayerInfo::set_clientaddr(::std::string&& value) {
  
  clientaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_RoomPlayerInfo.clientAddr)
}
#endif
void CMD_RoomPlayerInfo::set_clientaddr(const char* value) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_RoomPlayerInfo.clientAddr)
}
void CMD_RoomPlayerInfo::set_clientaddr(const char* value, size_t size) {
  
  clientaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_RoomPlayerInfo.clientAddr)
}
::std::string* CMD_RoomPlayerInfo::mutable_clientaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_RoomPlayerInfo.clientAddr)
  return clientaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_RoomPlayerInfo::release_clientaddr() {
  // @@protoc_insertion_point(field_release:CMD_RoomPlayerInfo.clientAddr)
  
  return clientaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_RoomPlayerInfo::set_allocated_clientaddr(::std::string* clientaddr) {
  if (clientaddr != NULL) {
    
  } else {
    
  }
  clientaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientaddr);
  // @@protoc_insertion_point(field_set_allocated:CMD_RoomPlayerInfo.clientAddr)
}

// int32 exp = 3;
void CMD_RoomPlayerInfo::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::exp() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.exp)
  return exp_;
}
void CMD_RoomPlayerInfo::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.exp)
}

// int32 score = 4;
void CMD_RoomPlayerInfo::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::score() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.score)
  return score_;
}
void CMD_RoomPlayerInfo::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.score)
}

// int32 topscore = 5;
void CMD_RoomPlayerInfo::clear_topscore() {
  topscore_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.topscore)
  return topscore_;
}
void CMD_RoomPlayerInfo::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.topscore)
}

// int32 victory = 6;
void CMD_RoomPlayerInfo::clear_victory() {
  victory_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::victory() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.victory)
  return victory_;
}
void CMD_RoomPlayerInfo::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.victory)
}

// int32 defeat = 7;
void CMD_RoomPlayerInfo::clear_defeat() {
  defeat_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.defeat)
  return defeat_;
}
void CMD_RoomPlayerInfo::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.defeat)
}

// string playerName = 8;
void CMD_RoomPlayerInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_RoomPlayerInfo::playername() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerName)
  return playername_.GetNoArena();
}
void CMD_RoomPlayerInfo::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerName)
}
#if LANG_CXX11
void CMD_RoomPlayerInfo::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_RoomPlayerInfo.playerName)
}
#endif
void CMD_RoomPlayerInfo::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_RoomPlayerInfo.playerName)
}
void CMD_RoomPlayerInfo::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_RoomPlayerInfo.playerName)
}
::std::string* CMD_RoomPlayerInfo::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_RoomPlayerInfo.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_RoomPlayerInfo::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_RoomPlayerInfo.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_RoomPlayerInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_RoomPlayerInfo.playerName)
}

// int32 playerModelID = 9;
void CMD_RoomPlayerInfo::clear_playermodelid() {
  playermodelid_ = 0;
}
::google::protobuf::int32 CMD_RoomPlayerInfo::playermodelid() const {
  // @@protoc_insertion_point(field_get:CMD_RoomPlayerInfo.playerModelID)
  return playermodelid_;
}
void CMD_RoomPlayerInfo::set_playermodelid(::google::protobuf::int32 value) {
  
  playermodelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_RoomPlayerInfo.playerModelID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Roommgr_RequestCreateRoom::kHallsIDFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kGameIDFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kGameModeFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kRoomIDFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kMaxPlayerNumFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kGameTimeFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kPlayersFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kExeFileFieldNumber;
const int CMD_Roommgr_RequestCreateRoom::kExeOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Roommgr_RequestCreateRoom::CMD_Roommgr_RequestCreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Roommgr_RequestCreateRoom)
}
CMD_Roommgr_RequestCreateRoom::CMD_Roommgr_RequestCreateRoom(const CMD_Roommgr_RequestCreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      players_(from.players_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exefile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exefile().size() > 0) {
    exefile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exefile_);
  }
  exeoptions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exeoptions().size() > 0) {
    exeoptions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exeoptions_);
  }
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(gametime_));
  // @@protoc_insertion_point(copy_constructor:CMD_Roommgr_RequestCreateRoom)
}

void CMD_Roommgr_RequestCreateRoom::SharedCtor() {
  exefile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(gametime_));
  _cached_size_ = 0;
}

CMD_Roommgr_RequestCreateRoom::~CMD_Roommgr_RequestCreateRoom() {
  // @@protoc_insertion_point(destructor:CMD_Roommgr_RequestCreateRoom)
  SharedDtor();
}

void CMD_Roommgr_RequestCreateRoom::SharedDtor() {
  exefile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Roommgr_RequestCreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Roommgr_RequestCreateRoom::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[38].descriptor;
}

const CMD_Roommgr_RequestCreateRoom& CMD_Roommgr_RequestCreateRoom::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Roommgr_RequestCreateRoom* CMD_Roommgr_RequestCreateRoom::New(::google::protobuf::Arena* arena) const {
  CMD_Roommgr_RequestCreateRoom* n = new CMD_Roommgr_RequestCreateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Roommgr_RequestCreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Roommgr_RequestCreateRoom)
  players_.Clear();
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(gametime_));
}

bool CMD_Roommgr_RequestCreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Roommgr_RequestCreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxPlayerNum = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxplayernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gameTime = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_RoomPlayerInfo players = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string exeFile = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exefile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exefile().data(), this->exefile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Roommgr_RequestCreateRoom.exeFile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exeOptions = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exeoptions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exeoptions().data(), this->exeoptions().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Roommgr_RequestCreateRoom.exeOptions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Roommgr_RequestCreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Roommgr_RequestCreateRoom)
  return false;
#undef DO_
}

void CMD_Roommgr_RequestCreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Roommgr_RequestCreateRoom)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gameid(), output);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gamemode(), output);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxplayernum(), output);
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->gametime(), output);
  }

  // repeated .CMD_RoomPlayerInfo players = 7;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->players(i), output);
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exefile().data(), this->exefile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_RequestCreateRoom.exeFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->exefile(), output);
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exeoptions().data(), this->exeoptions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_RequestCreateRoom.exeOptions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->exeoptions(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Roommgr_RequestCreateRoom)
}

::google::protobuf::uint8* CMD_Roommgr_RequestCreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Roommgr_RequestCreateRoom)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gameid(), target);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gamemode(), target);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxplayernum(), target);
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->gametime(), target);
  }

  // repeated .CMD_RoomPlayerInfo players = 7;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->players(i), false, target);
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exefile().data(), this->exefile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_RequestCreateRoom.exeFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->exefile(), target);
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exeoptions().data(), this->exeoptions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_RequestCreateRoom.exeOptions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->exeoptions(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Roommgr_RequestCreateRoom)
  return target;
}

size_t CMD_Roommgr_RequestCreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Roommgr_RequestCreateRoom)
  size_t total_size = 0;

  // repeated .CMD_RoomPlayerInfo players = 7;
  {
    unsigned int count = this->players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players(i));
    }
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exefile());
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exeoptions());
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxplayernum());
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Roommgr_RequestCreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Roommgr_RequestCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Roommgr_RequestCreateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Roommgr_RequestCreateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Roommgr_RequestCreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Roommgr_RequestCreateRoom)
    MergeFrom(*source);
  }
}

void CMD_Roommgr_RequestCreateRoom::MergeFrom(const CMD_Roommgr_RequestCreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Roommgr_RequestCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  players_.MergeFrom(from.players_);
  if (from.exefile().size() > 0) {

    exefile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exefile_);
  }
  if (from.exeoptions().size() > 0) {

    exeoptions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exeoptions_);
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.maxplayernum() != 0) {
    set_maxplayernum(from.maxplayernum());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
}

void CMD_Roommgr_RequestCreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Roommgr_RequestCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Roommgr_RequestCreateRoom::CopyFrom(const CMD_Roommgr_RequestCreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Roommgr_RequestCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Roommgr_RequestCreateRoom::IsInitialized() const {
  return true;
}

void CMD_Roommgr_RequestCreateRoom::Swap(CMD_Roommgr_RequestCreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Roommgr_RequestCreateRoom::InternalSwap(CMD_Roommgr_RequestCreateRoom* other) {
  players_.UnsafeArenaSwap(&other->players_);
  exefile_.Swap(&other->exefile_);
  exeoptions_.Swap(&other->exeoptions_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(gameid_, other->gameid_);
  std::swap(roomid_, other->roomid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(maxplayernum_, other->maxplayernum_);
  std::swap(gametime_, other->gametime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Roommgr_RequestCreateRoom::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[38];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Roommgr_RequestCreateRoom

// uint64 hallsID = 1;
void CMD_Roommgr_RequestCreateRoom::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.hallsID)
  return hallsid_;
}
void CMD_Roommgr_RequestCreateRoom::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.hallsID)
}

// uint64 gameID = 2;
void CMD_Roommgr_RequestCreateRoom::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameID)
  return gameid_;
}
void CMD_Roommgr_RequestCreateRoom::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameID)
}

// int32 gameMode = 3;
void CMD_Roommgr_RequestCreateRoom::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_Roommgr_RequestCreateRoom::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameMode)
  return gamemode_;
}
void CMD_Roommgr_RequestCreateRoom::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameMode)
}

// uint64 roomID = 4;
void CMD_Roommgr_RequestCreateRoom::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_RequestCreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.roomID)
  return roomid_;
}
void CMD_Roommgr_RequestCreateRoom::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.roomID)
}

// int32 maxPlayerNum = 5;
void CMD_Roommgr_RequestCreateRoom::clear_maxplayernum() {
  maxplayernum_ = 0;
}
::google::protobuf::int32 CMD_Roommgr_RequestCreateRoom::maxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.maxPlayerNum)
  return maxplayernum_;
}
void CMD_Roommgr_RequestCreateRoom::set_maxplayernum(::google::protobuf::int32 value) {
  
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.maxPlayerNum)
}

// float gameTime = 6;
void CMD_Roommgr_RequestCreateRoom::clear_gametime() {
  gametime_ = 0;
}
float CMD_Roommgr_RequestCreateRoom::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.gameTime)
  return gametime_;
}
void CMD_Roommgr_RequestCreateRoom::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.gameTime)
}

// repeated .CMD_RoomPlayerInfo players = 7;
int CMD_Roommgr_RequestCreateRoom::players_size() const {
  return players_.size();
}
void CMD_Roommgr_RequestCreateRoom::clear_players() {
  players_.Clear();
}
const ::CMD_RoomPlayerInfo& CMD_Roommgr_RequestCreateRoom::players(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Get(index);
}
::CMD_RoomPlayerInfo* CMD_Roommgr_RequestCreateRoom::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Mutable(index);
}
::CMD_RoomPlayerInfo* CMD_Roommgr_RequestCreateRoom::add_players() {
  // @@protoc_insertion_point(field_add:CMD_Roommgr_RequestCreateRoom.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_Roommgr_RequestCreateRoom::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Roommgr_RequestCreateRoom.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_Roommgr_RequestCreateRoom::players() const {
  // @@protoc_insertion_point(field_list:CMD_Roommgr_RequestCreateRoom.players)
  return players_;
}

// string exeFile = 8;
void CMD_Roommgr_RequestCreateRoom::clear_exefile() {
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Roommgr_RequestCreateRoom::exefile() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.exeFile)
  return exefile_.GetNoArena();
}
void CMD_Roommgr_RequestCreateRoom::set_exefile(const ::std::string& value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.exeFile)
}
#if LANG_CXX11
void CMD_Roommgr_RequestCreateRoom::set_exefile(::std::string&& value) {
  
  exefile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_RequestCreateRoom.exeFile)
}
#endif
void CMD_Roommgr_RequestCreateRoom::set_exefile(const char* value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_RequestCreateRoom.exeFile)
}
void CMD_Roommgr_RequestCreateRoom::set_exefile(const char* value, size_t size) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_RequestCreateRoom.exeFile)
}
::std::string* CMD_Roommgr_RequestCreateRoom::mutable_exefile() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.exeFile)
  return exefile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Roommgr_RequestCreateRoom::release_exefile() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_RequestCreateRoom.exeFile)
  
  return exefile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Roommgr_RequestCreateRoom::set_allocated_exefile(::std::string* exefile) {
  if (exefile != NULL) {
    
  } else {
    
  }
  exefile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exefile);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_RequestCreateRoom.exeFile)
}

// string exeOptions = 9;
void CMD_Roommgr_RequestCreateRoom::clear_exeoptions() {
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Roommgr_RequestCreateRoom::exeoptions() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_RequestCreateRoom.exeOptions)
  return exeoptions_.GetNoArena();
}
void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const ::std::string& value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
#if LANG_CXX11
void CMD_Roommgr_RequestCreateRoom::set_exeoptions(::std::string&& value) {
  
  exeoptions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
#endif
void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const char* value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
void CMD_Roommgr_RequestCreateRoom::set_exeoptions(const char* value, size_t size) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_RequestCreateRoom.exeOptions)
}
::std::string* CMD_Roommgr_RequestCreateRoom::mutable_exeoptions() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_RequestCreateRoom.exeOptions)
  return exeoptions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Roommgr_RequestCreateRoom::release_exeoptions() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_RequestCreateRoom.exeOptions)
  
  return exeoptions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Roommgr_RequestCreateRoom::set_allocated_exeoptions(::std::string* exeoptions) {
  if (exeoptions != NULL) {
    
  } else {
    
  }
  exeoptions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exeoptions);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_RequestCreateRoom.exeOptions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Roommgr_OnRequestCreateRoomCB::kHallsIDFieldNumber;
const int CMD_Roommgr_OnRequestCreateRoomCB::kRoomIDFieldNumber;
const int CMD_Roommgr_OnRequestCreateRoomCB::kIpFieldNumber;
const int CMD_Roommgr_OnRequestCreateRoomCB::kPortFieldNumber;
const int CMD_Roommgr_OnRequestCreateRoomCB::kTokenIDFieldNumber;
const int CMD_Roommgr_OnRequestCreateRoomCB::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Roommgr_OnRequestCreateRoomCB::CMD_Roommgr_OnRequestCreateRoomCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Roommgr_OnRequestCreateRoomCB)
}
CMD_Roommgr_OnRequestCreateRoomCB::CMD_Roommgr_OnRequestCreateRoomCB(const CMD_Roommgr_OnRequestCreateRoomCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Roommgr_OnRequestCreateRoomCB)
}

void CMD_Roommgr_OnRequestCreateRoomCB::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Roommgr_OnRequestCreateRoomCB::~CMD_Roommgr_OnRequestCreateRoomCB() {
  // @@protoc_insertion_point(destructor:CMD_Roommgr_OnRequestCreateRoomCB)
  SharedDtor();
}

void CMD_Roommgr_OnRequestCreateRoomCB::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Roommgr_OnRequestCreateRoomCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Roommgr_OnRequestCreateRoomCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[39].descriptor;
}

const CMD_Roommgr_OnRequestCreateRoomCB& CMD_Roommgr_OnRequestCreateRoomCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Roommgr_OnRequestCreateRoomCB* CMD_Roommgr_OnRequestCreateRoomCB::New(::google::protobuf::Arena* arena) const {
  CMD_Roommgr_OnRequestCreateRoomCB* n = new CMD_Roommgr_OnRequestCreateRoomCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Roommgr_OnRequestCreateRoomCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Roommgr_OnRequestCreateRoomCB)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
}

bool CMD_Roommgr_OnRequestCreateRoomCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Roommgr_OnRequestCreateRoomCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Roommgr_OnRequestCreateRoomCB.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 6;
      case 6: {
        if (tag == 48u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Roommgr_OnRequestCreateRoomCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Roommgr_OnRequestCreateRoomCB)
  return false;
#undef DO_
}

void CMD_Roommgr_OnRequestCreateRoomCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Roommgr_OnRequestCreateRoomCB)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_OnRequestCreateRoomCB.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->tokenid(), output);
  }

  // .ServerError errcode = 6;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Roommgr_OnRequestCreateRoomCB)
}

::google::protobuf::uint8* CMD_Roommgr_OnRequestCreateRoomCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Roommgr_OnRequestCreateRoomCB)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Roommgr_OnRequestCreateRoomCB.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->tokenid(), target);
  }

  // .ServerError errcode = 6;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Roommgr_OnRequestCreateRoomCB)
  return target;
}

size_t CMD_Roommgr_OnRequestCreateRoomCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Roommgr_OnRequestCreateRoomCB)
  size_t total_size = 0;

  // string ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .ServerError errcode = 6;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Roommgr_OnRequestCreateRoomCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Roommgr_OnRequestCreateRoomCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Roommgr_OnRequestCreateRoomCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Roommgr_OnRequestCreateRoomCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Roommgr_OnRequestCreateRoomCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Roommgr_OnRequestCreateRoomCB)
    MergeFrom(*source);
  }
}

void CMD_Roommgr_OnRequestCreateRoomCB::MergeFrom(const CMD_Roommgr_OnRequestCreateRoomCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Roommgr_OnRequestCreateRoomCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Roommgr_OnRequestCreateRoomCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Roommgr_OnRequestCreateRoomCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Roommgr_OnRequestCreateRoomCB::CopyFrom(const CMD_Roommgr_OnRequestCreateRoomCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Roommgr_OnRequestCreateRoomCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Roommgr_OnRequestCreateRoomCB::IsInitialized() const {
  return true;
}

void CMD_Roommgr_OnRequestCreateRoomCB::Swap(CMD_Roommgr_OnRequestCreateRoomCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Roommgr_OnRequestCreateRoomCB::InternalSwap(CMD_Roommgr_OnRequestCreateRoomCB* other) {
  ip_.Swap(&other->ip_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(roomid_, other->roomid_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(port_, other->port_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Roommgr_OnRequestCreateRoomCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[39];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Roommgr_OnRequestCreateRoomCB

// uint64 hallsID = 1;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.hallsID)
  return hallsid_;
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.hallsID)
}

// uint64 roomID = 2;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.roomID)
  return roomid_;
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.roomID)
}

// string ip = 3;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Roommgr_OnRequestCreateRoomCB::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  return ip_.GetNoArena();
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
#if LANG_CXX11
void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
#endif
void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}
::std::string* CMD_Roommgr_OnRequestCreateRoomCB::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Roommgr_OnRequestCreateRoomCB::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Roommgr_OnRequestCreateRoomCB.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Roommgr_OnRequestCreateRoomCB.ip)
}

// int32 port = 4;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Roommgr_OnRequestCreateRoomCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.port)
  return port_;
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.port)
}

// uint64 tokenID = 5;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_OnRequestCreateRoomCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.tokenID)
  return tokenid_;
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.tokenID)
}

// .ServerError errcode = 6;
void CMD_Roommgr_OnRequestCreateRoomCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Roommgr_OnRequestCreateRoomCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRequestCreateRoomCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Roommgr_OnRequestCreateRoomCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRequestCreateRoomCB.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Roommgr_OnRoomSrvGameOverReport::kHallsIDFieldNumber;
const int CMD_Roommgr_OnRoomSrvGameOverReport::kRoomIDFieldNumber;
const int CMD_Roommgr_OnRoomSrvGameOverReport::kErrcodeFieldNumber;
const int CMD_Roommgr_OnRoomSrvGameOverReport::kPlayerdatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Roommgr_OnRoomSrvGameOverReport::CMD_Roommgr_OnRoomSrvGameOverReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Roommgr_OnRoomSrvGameOverReport)
}
CMD_Roommgr_OnRoomSrvGameOverReport::CMD_Roommgr_OnRoomSrvGameOverReport(const CMD_Roommgr_OnRoomSrvGameOverReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerdatas_(from.playerdatas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Roommgr_OnRoomSrvGameOverReport)
}

void CMD_Roommgr_OnRoomSrvGameOverReport::SharedCtor() {
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Roommgr_OnRoomSrvGameOverReport::~CMD_Roommgr_OnRoomSrvGameOverReport() {
  // @@protoc_insertion_point(destructor:CMD_Roommgr_OnRoomSrvGameOverReport)
  SharedDtor();
}

void CMD_Roommgr_OnRoomSrvGameOverReport::SharedDtor() {
}

void CMD_Roommgr_OnRoomSrvGameOverReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Roommgr_OnRoomSrvGameOverReport::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[40].descriptor;
}

const CMD_Roommgr_OnRoomSrvGameOverReport& CMD_Roommgr_OnRoomSrvGameOverReport::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Roommgr_OnRoomSrvGameOverReport* CMD_Roommgr_OnRoomSrvGameOverReport::New(::google::protobuf::Arena* arena) const {
  CMD_Roommgr_OnRoomSrvGameOverReport* n = new CMD_Roommgr_OnRoomSrvGameOverReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Roommgr_OnRoomSrvGameOverReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  playerdatas_.Clear();
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
}

bool CMD_Roommgr_OnRoomSrvGameOverReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerdatas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Roommgr_OnRoomSrvGameOverReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Roommgr_OnRoomSrvGameOverReport)
  return false;
#undef DO_
}

void CMD_Roommgr_OnRoomSrvGameOverReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->playerdatas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Roommgr_OnRoomSrvGameOverReport)
}

::google::protobuf::uint8* CMD_Roommgr_OnRoomSrvGameOverReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->errcode(), target);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->playerdatas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Roommgr_OnRoomSrvGameOverReport)
  return target;
}

size_t CMD_Roommgr_OnRoomSrvGameOverReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  size_t total_size = 0;

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  {
    unsigned int count = this->playerdatas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerdatas(i));
    }
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Roommgr_OnRoomSrvGameOverReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Roommgr_OnRoomSrvGameOverReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Roommgr_OnRoomSrvGameOverReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Roommgr_OnRoomSrvGameOverReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Roommgr_OnRoomSrvGameOverReport)
    MergeFrom(*source);
  }
}

void CMD_Roommgr_OnRoomSrvGameOverReport::MergeFrom(const CMD_Roommgr_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerdatas_.MergeFrom(from.playerdatas_);
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Roommgr_OnRoomSrvGameOverReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Roommgr_OnRoomSrvGameOverReport::CopyFrom(const CMD_Roommgr_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Roommgr_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Roommgr_OnRoomSrvGameOverReport::IsInitialized() const {
  return true;
}

void CMD_Roommgr_OnRoomSrvGameOverReport::Swap(CMD_Roommgr_OnRoomSrvGameOverReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Roommgr_OnRoomSrvGameOverReport::InternalSwap(CMD_Roommgr_OnRoomSrvGameOverReport* other) {
  playerdatas_.UnsafeArenaSwap(&other->playerdatas_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(roomid_, other->roomid_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Roommgr_OnRoomSrvGameOverReport::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[40];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Roommgr_OnRoomSrvGameOverReport

// uint64 hallsID = 1;
void CMD_Roommgr_OnRoomSrvGameOverReport::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_OnRoomSrvGameOverReport::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.hallsID)
  return hallsid_;
}
void CMD_Roommgr_OnRoomSrvGameOverReport::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.hallsID)
}

// uint64 roomID = 2;
void CMD_Roommgr_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Roommgr_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
void CMD_Roommgr_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 3;
void CMD_Roommgr_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Roommgr_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Roommgr_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Roommgr_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 4;
int CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
void CMD_Roommgr_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
const ::CMD_Halls_PlayerGameData& CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
::CMD_Halls_PlayerGameData* CMD_Roommgr_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
::CMD_Halls_PlayerGameData* CMD_Roommgr_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Roommgr_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Roommgr_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Roommgr_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Machine_RequestCreateRoom::kHallsIDFieldNumber;
const int CMD_Machine_RequestCreateRoom::kGameIDFieldNumber;
const int CMD_Machine_RequestCreateRoom::kGameModeFieldNumber;
const int CMD_Machine_RequestCreateRoom::kRoomIDFieldNumber;
const int CMD_Machine_RequestCreateRoom::kMaxPlayerNumFieldNumber;
const int CMD_Machine_RequestCreateRoom::kGameTimeFieldNumber;
const int CMD_Machine_RequestCreateRoom::kPlayersFieldNumber;
const int CMD_Machine_RequestCreateRoom::kExeFileFieldNumber;
const int CMD_Machine_RequestCreateRoom::kExeOptionsFieldNumber;
const int CMD_Machine_RequestCreateRoom::kTokenIDFieldNumber;
const int CMD_Machine_RequestCreateRoom::kRoommgrIPFieldNumber;
const int CMD_Machine_RequestCreateRoom::kRoommgrPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Machine_RequestCreateRoom::CMD_Machine_RequestCreateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Machine_RequestCreateRoom)
}
CMD_Machine_RequestCreateRoom::CMD_Machine_RequestCreateRoom(const CMD_Machine_RequestCreateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      players_(from.players_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exefile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exefile().size() > 0) {
    exefile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exefile_);
  }
  exeoptions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exeoptions().size() > 0) {
    exeoptions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exeoptions_);
  }
  roommgrip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roommgrip().size() > 0) {
    roommgrip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roommgrip_);
  }
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(tokenid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Machine_RequestCreateRoom)
}

void CMD_Machine_RequestCreateRoom::SharedCtor() {
  exefile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roommgrip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(tokenid_));
  _cached_size_ = 0;
}

CMD_Machine_RequestCreateRoom::~CMD_Machine_RequestCreateRoom() {
  // @@protoc_insertion_point(destructor:CMD_Machine_RequestCreateRoom)
  SharedDtor();
}

void CMD_Machine_RequestCreateRoom::SharedDtor() {
  exefile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roommgrip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Machine_RequestCreateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Machine_RequestCreateRoom::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[41].descriptor;
}

const CMD_Machine_RequestCreateRoom& CMD_Machine_RequestCreateRoom::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Machine_RequestCreateRoom* CMD_Machine_RequestCreateRoom::New(::google::protobuf::Arena* arena) const {
  CMD_Machine_RequestCreateRoom* n = new CMD_Machine_RequestCreateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Machine_RequestCreateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Machine_RequestCreateRoom)
  players_.Clear();
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roommgrip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(tokenid_));
}

bool CMD_Machine_RequestCreateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Machine_RequestCreateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxPlayerNum = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxplayernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gameTime = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_RoomPlayerInfo players = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // string exeFile = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exefile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exefile().data(), this->exefile().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Machine_RequestCreateRoom.exeFile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exeOptions = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exeoptions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exeoptions().data(), this->exeoptions().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Machine_RequestCreateRoom.exeOptions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string roommgrIP = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roommgrip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roommgrip().data(), this->roommgrip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Machine_RequestCreateRoom.roommgrIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roommgrPort = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roommgrport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Machine_RequestCreateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Machine_RequestCreateRoom)
  return false;
#undef DO_
}

void CMD_Machine_RequestCreateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Machine_RequestCreateRoom)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gameid(), output);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gamemode(), output);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxplayernum(), output);
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->gametime(), output);
  }

  // repeated .CMD_RoomPlayerInfo players = 7;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->players(i), output);
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exefile().data(), this->exefile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.exeFile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->exefile(), output);
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exeoptions().data(), this->exeoptions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.exeOptions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->exeoptions(), output);
  }

  // uint64 tokenID = 10;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->tokenid(), output);
  }

  // string roommgrIP = 11;
  if (this->roommgrip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roommgrip().data(), this->roommgrip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.roommgrIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->roommgrip(), output);
  }

  // int32 roommgrPort = 12;
  if (this->roommgrport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->roommgrport(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Machine_RequestCreateRoom)
}

::google::protobuf::uint8* CMD_Machine_RequestCreateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Machine_RequestCreateRoom)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gameid(), target);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gamemode(), target);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxplayernum(), target);
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->gametime(), target);
  }

  // repeated .CMD_RoomPlayerInfo players = 7;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->players(i), false, target);
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exefile().data(), this->exefile().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.exeFile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->exefile(), target);
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exeoptions().data(), this->exeoptions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.exeOptions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->exeoptions(), target);
  }

  // uint64 tokenID = 10;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->tokenid(), target);
  }

  // string roommgrIP = 11;
  if (this->roommgrip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roommgrip().data(), this->roommgrip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RequestCreateRoom.roommgrIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->roommgrip(), target);
  }

  // int32 roommgrPort = 12;
  if (this->roommgrport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->roommgrport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Machine_RequestCreateRoom)
  return target;
}

size_t CMD_Machine_RequestCreateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Machine_RequestCreateRoom)
  size_t total_size = 0;

  // repeated .CMD_RoomPlayerInfo players = 7;
  {
    unsigned int count = this->players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players(i));
    }
  }

  // string exeFile = 8;
  if (this->exefile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exefile());
  }

  // string exeOptions = 9;
  if (this->exeoptions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exeoptions());
  }

  // string roommgrIP = 11;
  if (this->roommgrip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roommgrip());
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  // int32 maxPlayerNum = 5;
  if (this->maxplayernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxplayernum());
  }

  // float gameTime = 6;
  if (this->gametime() != 0) {
    total_size += 1 + 4;
  }

  // int32 roommgrPort = 12;
  if (this->roommgrport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roommgrport());
  }

  // uint64 tokenID = 10;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Machine_RequestCreateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Machine_RequestCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Machine_RequestCreateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Machine_RequestCreateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Machine_RequestCreateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Machine_RequestCreateRoom)
    MergeFrom(*source);
  }
}

void CMD_Machine_RequestCreateRoom::MergeFrom(const CMD_Machine_RequestCreateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Machine_RequestCreateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  players_.MergeFrom(from.players_);
  if (from.exefile().size() > 0) {

    exefile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exefile_);
  }
  if (from.exeoptions().size() > 0) {

    exeoptions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exeoptions_);
  }
  if (from.roommgrip().size() > 0) {

    roommgrip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roommgrip_);
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.maxplayernum() != 0) {
    set_maxplayernum(from.maxplayernum());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
  if (from.roommgrport() != 0) {
    set_roommgrport(from.roommgrport());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
}

void CMD_Machine_RequestCreateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Machine_RequestCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Machine_RequestCreateRoom::CopyFrom(const CMD_Machine_RequestCreateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Machine_RequestCreateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Machine_RequestCreateRoom::IsInitialized() const {
  return true;
}

void CMD_Machine_RequestCreateRoom::Swap(CMD_Machine_RequestCreateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Machine_RequestCreateRoom::InternalSwap(CMD_Machine_RequestCreateRoom* other) {
  players_.UnsafeArenaSwap(&other->players_);
  exefile_.Swap(&other->exefile_);
  exeoptions_.Swap(&other->exeoptions_);
  roommgrip_.Swap(&other->roommgrip_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(gameid_, other->gameid_);
  std::swap(roomid_, other->roomid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(maxplayernum_, other->maxplayernum_);
  std::swap(gametime_, other->gametime_);
  std::swap(roommgrport_, other->roommgrport_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Machine_RequestCreateRoom::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[41];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Machine_RequestCreateRoom

// uint64 hallsID = 1;
void CMD_Machine_RequestCreateRoom::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.hallsID)
  return hallsid_;
}
void CMD_Machine_RequestCreateRoom::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.hallsID)
}

// uint64 gameID = 2;
void CMD_Machine_RequestCreateRoom::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameID)
  return gameid_;
}
void CMD_Machine_RequestCreateRoom::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameID)
}

// int32 gameMode = 3;
void CMD_Machine_RequestCreateRoom::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_Machine_RequestCreateRoom::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameMode)
  return gamemode_;
}
void CMD_Machine_RequestCreateRoom::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameMode)
}

// uint64 roomID = 4;
void CMD_Machine_RequestCreateRoom::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roomID)
  return roomid_;
}
void CMD_Machine_RequestCreateRoom::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roomID)
}

// int32 maxPlayerNum = 5;
void CMD_Machine_RequestCreateRoom::clear_maxplayernum() {
  maxplayernum_ = 0;
}
::google::protobuf::int32 CMD_Machine_RequestCreateRoom::maxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.maxPlayerNum)
  return maxplayernum_;
}
void CMD_Machine_RequestCreateRoom::set_maxplayernum(::google::protobuf::int32 value) {
  
  maxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.maxPlayerNum)
}

// float gameTime = 6;
void CMD_Machine_RequestCreateRoom::clear_gametime() {
  gametime_ = 0;
}
float CMD_Machine_RequestCreateRoom::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.gameTime)
  return gametime_;
}
void CMD_Machine_RequestCreateRoom::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.gameTime)
}

// repeated .CMD_RoomPlayerInfo players = 7;
int CMD_Machine_RequestCreateRoom::players_size() const {
  return players_.size();
}
void CMD_Machine_RequestCreateRoom::clear_players() {
  players_.Clear();
}
const ::CMD_RoomPlayerInfo& CMD_Machine_RequestCreateRoom::players(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.players)
  return players_.Get(index);
}
::CMD_RoomPlayerInfo* CMD_Machine_RequestCreateRoom::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.players)
  return players_.Mutable(index);
}
::CMD_RoomPlayerInfo* CMD_Machine_RequestCreateRoom::add_players() {
  // @@protoc_insertion_point(field_add:CMD_Machine_RequestCreateRoom.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_Machine_RequestCreateRoom::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Machine_RequestCreateRoom.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_Machine_RequestCreateRoom::players() const {
  // @@protoc_insertion_point(field_list:CMD_Machine_RequestCreateRoom.players)
  return players_;
}

// string exeFile = 8;
void CMD_Machine_RequestCreateRoom::clear_exefile() {
  exefile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Machine_RequestCreateRoom::exefile() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.exeFile)
  return exefile_.GetNoArena();
}
void CMD_Machine_RequestCreateRoom::set_exefile(const ::std::string& value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.exeFile)
}
#if LANG_CXX11
void CMD_Machine_RequestCreateRoom::set_exefile(::std::string&& value) {
  
  exefile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.exeFile)
}
#endif
void CMD_Machine_RequestCreateRoom::set_exefile(const char* value) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.exeFile)
}
void CMD_Machine_RequestCreateRoom::set_exefile(const char* value, size_t size) {
  
  exefile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.exeFile)
}
::std::string* CMD_Machine_RequestCreateRoom::mutable_exefile() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.exeFile)
  return exefile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Machine_RequestCreateRoom::release_exefile() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.exeFile)
  
  return exefile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Machine_RequestCreateRoom::set_allocated_exefile(::std::string* exefile) {
  if (exefile != NULL) {
    
  } else {
    
  }
  exefile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exefile);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.exeFile)
}

// string exeOptions = 9;
void CMD_Machine_RequestCreateRoom::clear_exeoptions() {
  exeoptions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Machine_RequestCreateRoom::exeoptions() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.exeOptions)
  return exeoptions_.GetNoArena();
}
void CMD_Machine_RequestCreateRoom::set_exeoptions(const ::std::string& value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.exeOptions)
}
#if LANG_CXX11
void CMD_Machine_RequestCreateRoom::set_exeoptions(::std::string&& value) {
  
  exeoptions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.exeOptions)
}
#endif
void CMD_Machine_RequestCreateRoom::set_exeoptions(const char* value) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.exeOptions)
}
void CMD_Machine_RequestCreateRoom::set_exeoptions(const char* value, size_t size) {
  
  exeoptions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.exeOptions)
}
::std::string* CMD_Machine_RequestCreateRoom::mutable_exeoptions() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.exeOptions)
  return exeoptions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Machine_RequestCreateRoom::release_exeoptions() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.exeOptions)
  
  return exeoptions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Machine_RequestCreateRoom::set_allocated_exeoptions(::std::string* exeoptions) {
  if (exeoptions != NULL) {
    
  } else {
    
  }
  exeoptions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exeoptions);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.exeOptions)
}

// uint64 tokenID = 10;
void CMD_Machine_RequestCreateRoom::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RequestCreateRoom::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.tokenID)
  return tokenid_;
}
void CMD_Machine_RequestCreateRoom::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.tokenID)
}

// string roommgrIP = 11;
void CMD_Machine_RequestCreateRoom::clear_roommgrip() {
  roommgrip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Machine_RequestCreateRoom::roommgrip() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roommgrIP)
  return roommgrip_.GetNoArena();
}
void CMD_Machine_RequestCreateRoom::set_roommgrip(const ::std::string& value) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roommgrIP)
}
#if LANG_CXX11
void CMD_Machine_RequestCreateRoom::set_roommgrip(::std::string&& value) {
  
  roommgrip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RequestCreateRoom.roommgrIP)
}
#endif
void CMD_Machine_RequestCreateRoom::set_roommgrip(const char* value) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RequestCreateRoom.roommgrIP)
}
void CMD_Machine_RequestCreateRoom::set_roommgrip(const char* value, size_t size) {
  
  roommgrip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RequestCreateRoom.roommgrIP)
}
::std::string* CMD_Machine_RequestCreateRoom::mutable_roommgrip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RequestCreateRoom.roommgrIP)
  return roommgrip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Machine_RequestCreateRoom::release_roommgrip() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RequestCreateRoom.roommgrIP)
  
  return roommgrip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Machine_RequestCreateRoom::set_allocated_roommgrip(::std::string* roommgrip) {
  if (roommgrip != NULL) {
    
  } else {
    
  }
  roommgrip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roommgrip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RequestCreateRoom.roommgrIP)
}

// int32 roommgrPort = 12;
void CMD_Machine_RequestCreateRoom::clear_roommgrport() {
  roommgrport_ = 0;
}
::google::protobuf::int32 CMD_Machine_RequestCreateRoom::roommgrport() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RequestCreateRoom.roommgrPort)
  return roommgrport_;
}
void CMD_Machine_RequestCreateRoom::set_roommgrport(::google::protobuf::int32 value) {
  
  roommgrport_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RequestCreateRoom.roommgrPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Machine_RoomSrvReportAddr::kHallsIDFieldNumber;
const int CMD_Machine_RoomSrvReportAddr::kRoomIDFieldNumber;
const int CMD_Machine_RoomSrvReportAddr::kIpFieldNumber;
const int CMD_Machine_RoomSrvReportAddr::kPortFieldNumber;
const int CMD_Machine_RoomSrvReportAddr::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Machine_RoomSrvReportAddr::CMD_Machine_RoomSrvReportAddr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Machine_RoomSrvReportAddr)
}
CMD_Machine_RoomSrvReportAddr::CMD_Machine_RoomSrvReportAddr(const CMD_Machine_RoomSrvReportAddr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Machine_RoomSrvReportAddr)
}

void CMD_Machine_RoomSrvReportAddr::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Machine_RoomSrvReportAddr::~CMD_Machine_RoomSrvReportAddr() {
  // @@protoc_insertion_point(destructor:CMD_Machine_RoomSrvReportAddr)
  SharedDtor();
}

void CMD_Machine_RoomSrvReportAddr::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Machine_RoomSrvReportAddr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Machine_RoomSrvReportAddr::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[42].descriptor;
}

const CMD_Machine_RoomSrvReportAddr& CMD_Machine_RoomSrvReportAddr::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Machine_RoomSrvReportAddr* CMD_Machine_RoomSrvReportAddr::New(::google::protobuf::Arena* arena) const {
  CMD_Machine_RoomSrvReportAddr* n = new CMD_Machine_RoomSrvReportAddr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Machine_RoomSrvReportAddr::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Machine_RoomSrvReportAddr)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
}

bool CMD_Machine_RoomSrvReportAddr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Machine_RoomSrvReportAddr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Machine_RoomSrvReportAddr.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Machine_RoomSrvReportAddr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Machine_RoomSrvReportAddr)
  return false;
#undef DO_
}

void CMD_Machine_RoomSrvReportAddr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Machine_RoomSrvReportAddr)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RoomSrvReportAddr.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Machine_RoomSrvReportAddr)
}

::google::protobuf::uint8* CMD_Machine_RoomSrvReportAddr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Machine_RoomSrvReportAddr)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Machine_RoomSrvReportAddr.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Machine_RoomSrvReportAddr)
  return target;
}

size_t CMD_Machine_RoomSrvReportAddr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Machine_RoomSrvReportAddr)
  size_t total_size = 0;

  // string ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // .ServerError errcode = 5;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Machine_RoomSrvReportAddr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Machine_RoomSrvReportAddr)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Machine_RoomSrvReportAddr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Machine_RoomSrvReportAddr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Machine_RoomSrvReportAddr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Machine_RoomSrvReportAddr)
    MergeFrom(*source);
  }
}

void CMD_Machine_RoomSrvReportAddr::MergeFrom(const CMD_Machine_RoomSrvReportAddr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Machine_RoomSrvReportAddr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Machine_RoomSrvReportAddr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Machine_RoomSrvReportAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Machine_RoomSrvReportAddr::CopyFrom(const CMD_Machine_RoomSrvReportAddr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Machine_RoomSrvReportAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Machine_RoomSrvReportAddr::IsInitialized() const {
  return true;
}

void CMD_Machine_RoomSrvReportAddr::Swap(CMD_Machine_RoomSrvReportAddr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Machine_RoomSrvReportAddr::InternalSwap(CMD_Machine_RoomSrvReportAddr* other) {
  ip_.Swap(&other->ip_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(roomid_, other->roomid_);
  std::swap(port_, other->port_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Machine_RoomSrvReportAddr::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[42];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Machine_RoomSrvReportAddr

// uint64 hallsID = 1;
void CMD_Machine_RoomSrvReportAddr::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RoomSrvReportAddr::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.hallsID)
  return hallsid_;
}
void CMD_Machine_RoomSrvReportAddr::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.hallsID)
}

// uint64 roomID = 2;
void CMD_Machine_RoomSrvReportAddr::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_RoomSrvReportAddr::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.roomID)
  return roomid_;
}
void CMD_Machine_RoomSrvReportAddr::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.roomID)
}

// string ip = 3;
void CMD_Machine_RoomSrvReportAddr::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Machine_RoomSrvReportAddr::ip() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.ip)
  return ip_.GetNoArena();
}
void CMD_Machine_RoomSrvReportAddr::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.ip)
}
#if LANG_CXX11
void CMD_Machine_RoomSrvReportAddr::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Machine_RoomSrvReportAddr.ip)
}
#endif
void CMD_Machine_RoomSrvReportAddr::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Machine_RoomSrvReportAddr.ip)
}
void CMD_Machine_RoomSrvReportAddr::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Machine_RoomSrvReportAddr.ip)
}
::std::string* CMD_Machine_RoomSrvReportAddr::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Machine_RoomSrvReportAddr.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Machine_RoomSrvReportAddr::release_ip() {
  // @@protoc_insertion_point(field_release:CMD_Machine_RoomSrvReportAddr.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Machine_RoomSrvReportAddr::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Machine_RoomSrvReportAddr.ip)
}

// int32 port = 4;
void CMD_Machine_RoomSrvReportAddr::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Machine_RoomSrvReportAddr::port() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.port)
  return port_;
}
void CMD_Machine_RoomSrvReportAddr::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.port)
}

// .ServerError errcode = 5;
void CMD_Machine_RoomSrvReportAddr::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Machine_RoomSrvReportAddr::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_RoomSrvReportAddr.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Machine_RoomSrvReportAddr::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_RoomSrvReportAddr.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Machine_OnRoomSrvGameOverReport::kHallsIDFieldNumber;
const int CMD_Machine_OnRoomSrvGameOverReport::kRoomIDFieldNumber;
const int CMD_Machine_OnRoomSrvGameOverReport::kErrcodeFieldNumber;
const int CMD_Machine_OnRoomSrvGameOverReport::kPlayerdatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Machine_OnRoomSrvGameOverReport::CMD_Machine_OnRoomSrvGameOverReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Machine_OnRoomSrvGameOverReport)
}
CMD_Machine_OnRoomSrvGameOverReport::CMD_Machine_OnRoomSrvGameOverReport(const CMD_Machine_OnRoomSrvGameOverReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerdatas_(from.playerdatas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Machine_OnRoomSrvGameOverReport)
}

void CMD_Machine_OnRoomSrvGameOverReport::SharedCtor() {
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Machine_OnRoomSrvGameOverReport::~CMD_Machine_OnRoomSrvGameOverReport() {
  // @@protoc_insertion_point(destructor:CMD_Machine_OnRoomSrvGameOverReport)
  SharedDtor();
}

void CMD_Machine_OnRoomSrvGameOverReport::SharedDtor() {
}

void CMD_Machine_OnRoomSrvGameOverReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Machine_OnRoomSrvGameOverReport::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[43].descriptor;
}

const CMD_Machine_OnRoomSrvGameOverReport& CMD_Machine_OnRoomSrvGameOverReport::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Machine_OnRoomSrvGameOverReport* CMD_Machine_OnRoomSrvGameOverReport::New(::google::protobuf::Arena* arena) const {
  CMD_Machine_OnRoomSrvGameOverReport* n = new CMD_Machine_OnRoomSrvGameOverReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Machine_OnRoomSrvGameOverReport::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Machine_OnRoomSrvGameOverReport)
  playerdatas_.Clear();
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
}

bool CMD_Machine_OnRoomSrvGameOverReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Machine_OnRoomSrvGameOverReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 hallsID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServerError errcode = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerdatas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Machine_OnRoomSrvGameOverReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Machine_OnRoomSrvGameOverReport)
  return false;
#undef DO_
}

void CMD_Machine_OnRoomSrvGameOverReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Machine_OnRoomSrvGameOverReport)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->hallsid(), output);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->errcode(), output);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->playerdatas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Machine_OnRoomSrvGameOverReport)
}

::google::protobuf::uint8* CMD_Machine_OnRoomSrvGameOverReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Machine_OnRoomSrvGameOverReport)
  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->hallsid(), target);
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->errcode(), target);
  }

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  for (unsigned int i = 0, n = this->playerdatas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->playerdatas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Machine_OnRoomSrvGameOverReport)
  return target;
}

size_t CMD_Machine_OnRoomSrvGameOverReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Machine_OnRoomSrvGameOverReport)
  size_t total_size = 0;

  // repeated .CMD_Halls_PlayerGameData playerdatas = 4;
  {
    unsigned int count = this->playerdatas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerdatas(i));
    }
  }

  // uint64 hallsID = 1;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // uint64 roomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // .ServerError errcode = 3;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Machine_OnRoomSrvGameOverReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Machine_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Machine_OnRoomSrvGameOverReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Machine_OnRoomSrvGameOverReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Machine_OnRoomSrvGameOverReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Machine_OnRoomSrvGameOverReport)
    MergeFrom(*source);
  }
}

void CMD_Machine_OnRoomSrvGameOverReport::MergeFrom(const CMD_Machine_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Machine_OnRoomSrvGameOverReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerdatas_.MergeFrom(from.playerdatas_);
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Machine_OnRoomSrvGameOverReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Machine_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Machine_OnRoomSrvGameOverReport::CopyFrom(const CMD_Machine_OnRoomSrvGameOverReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Machine_OnRoomSrvGameOverReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Machine_OnRoomSrvGameOverReport::IsInitialized() const {
  return true;
}

void CMD_Machine_OnRoomSrvGameOverReport::Swap(CMD_Machine_OnRoomSrvGameOverReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Machine_OnRoomSrvGameOverReport::InternalSwap(CMD_Machine_OnRoomSrvGameOverReport* other) {
  playerdatas_.UnsafeArenaSwap(&other->playerdatas_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(roomid_, other->roomid_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Machine_OnRoomSrvGameOverReport::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[43];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Machine_OnRoomSrvGameOverReport

// uint64 hallsID = 1;
void CMD_Machine_OnRoomSrvGameOverReport::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_OnRoomSrvGameOverReport::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.hallsID)
  return hallsid_;
}
void CMD_Machine_OnRoomSrvGameOverReport::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.hallsID)
}

// uint64 roomID = 2;
void CMD_Machine_OnRoomSrvGameOverReport::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Machine_OnRoomSrvGameOverReport::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.roomID)
  return roomid_;
}
void CMD_Machine_OnRoomSrvGameOverReport::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.roomID)
}

// .ServerError errcode = 3;
void CMD_Machine_OnRoomSrvGameOverReport::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Machine_OnRoomSrvGameOverReport::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Machine_OnRoomSrvGameOverReport::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Machine_OnRoomSrvGameOverReport.errcode)
}

// repeated .CMD_Halls_PlayerGameData playerdatas = 4;
int CMD_Machine_OnRoomSrvGameOverReport::playerdatas_size() const {
  return playerdatas_.size();
}
void CMD_Machine_OnRoomSrvGameOverReport::clear_playerdatas() {
  playerdatas_.Clear();
}
const ::CMD_Halls_PlayerGameData& CMD_Machine_OnRoomSrvGameOverReport::playerdatas(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Get(index);
}
::CMD_Halls_PlayerGameData* CMD_Machine_OnRoomSrvGameOverReport::mutable_playerdatas(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Mutable(index);
}
::CMD_Halls_PlayerGameData* CMD_Machine_OnRoomSrvGameOverReport::add_playerdatas() {
  // @@protoc_insertion_point(field_add:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >*
CMD_Machine_OnRoomSrvGameOverReport::mutable_playerdatas() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return &playerdatas_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_Halls_PlayerGameData >&
CMD_Machine_OnRoomSrvGameOverReport::playerdatas() const {
  // @@protoc_insertion_point(field_list:CMD_Machine_OnRoomSrvGameOverReport.playerdatas)
  return playerdatas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_ListServersInfo::kAddrFieldNumber;
const int CMD_ListServersInfo::kPortFieldNumber;
const int CMD_ListServersInfo::kGroupidFieldNumber;
const int CMD_ListServersInfo::kNameFieldNumber;
const int CMD_ListServersInfo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_ListServersInfo::CMD_ListServersInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_ListServersInfo)
}
CMD_ListServersInfo::CMD_ListServersInfo(const CMD_ListServersInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&groupid_, &from.groupid_,
    reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&groupid_) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:CMD_ListServersInfo)
}

void CMD_ListServersInfo::SharedCtor() {
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupid_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&groupid_) + sizeof(port_));
  _cached_size_ = 0;
}

CMD_ListServersInfo::~CMD_ListServersInfo() {
  // @@protoc_insertion_point(destructor:CMD_ListServersInfo)
  SharedDtor();
}

void CMD_ListServersInfo::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_ListServersInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_ListServersInfo::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[44].descriptor;
}

const CMD_ListServersInfo& CMD_ListServersInfo::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_ListServersInfo* CMD_ListServersInfo::New(::google::protobuf::Arena* arena) const {
  CMD_ListServersInfo* n = new CMD_ListServersInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_ListServersInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_ListServersInfo)
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupid_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&groupid_) + sizeof(port_));
}

bool CMD_ListServersInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_ListServersInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string addr = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_ListServersInfo.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_ListServersInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_ListServersInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_ListServersInfo)
  return false;
#undef DO_
}

void CMD_ListServersInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_ListServersInfo)
  // string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_ListServersInfo.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // uint64 groupid = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->groupid(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_ListServersInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // uint64 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_ListServersInfo)
}

::google::protobuf::uint8* CMD_ListServersInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_ListServersInfo)
  // string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_ListServersInfo.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // uint64 groupid = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->groupid(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_ListServersInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // uint64 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_ListServersInfo)
  return target;
}

size_t CMD_ListServersInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_ListServersInfo)
  size_t total_size = 0;

  // string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 groupid = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 id = 5;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_ListServersInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_ListServersInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_ListServersInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_ListServersInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_ListServersInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_ListServersInfo)
    MergeFrom(*source);
  }
}

void CMD_ListServersInfo::MergeFrom(const CMD_ListServersInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_ListServersInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void CMD_ListServersInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_ListServersInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_ListServersInfo::CopyFrom(const CMD_ListServersInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_ListServersInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_ListServersInfo::IsInitialized() const {
  return true;
}

void CMD_ListServersInfo::Swap(CMD_ListServersInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_ListServersInfo::InternalSwap(CMD_ListServersInfo* other) {
  addr_.Swap(&other->addr_);
  name_.Swap(&other->name_);
  std::swap(groupid_, other->groupid_);
  std::swap(id_, other->id_);
  std::swap(port_, other->port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_ListServersInfo::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[44];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_ListServersInfo

// string addr = 1;
void CMD_ListServersInfo::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_ListServersInfo::addr() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.addr)
  return addr_.GetNoArena();
}
void CMD_ListServersInfo::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.addr)
}
#if LANG_CXX11
void CMD_ListServersInfo::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ListServersInfo.addr)
}
#endif
void CMD_ListServersInfo::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ListServersInfo.addr)
}
void CMD_ListServersInfo::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ListServersInfo.addr)
}
::std::string* CMD_ListServersInfo::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ListServersInfo.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_ListServersInfo::release_addr() {
  // @@protoc_insertion_point(field_release:CMD_ListServersInfo.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_ListServersInfo::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:CMD_ListServersInfo.addr)
}

// int32 port = 2;
void CMD_ListServersInfo::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_ListServersInfo::port() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.port)
  return port_;
}
void CMD_ListServersInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.port)
}

// uint64 groupid = 3;
void CMD_ListServersInfo::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_ListServersInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.groupid)
  return groupid_;
}
void CMD_ListServersInfo::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.groupid)
}

// string name = 4;
void CMD_ListServersInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_ListServersInfo::name() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.name)
  return name_.GetNoArena();
}
void CMD_ListServersInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.name)
}
#if LANG_CXX11
void CMD_ListServersInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_ListServersInfo.name)
}
#endif
void CMD_ListServersInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_ListServersInfo.name)
}
void CMD_ListServersInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_ListServersInfo.name)
}
::std::string* CMD_ListServersInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_ListServersInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_ListServersInfo::release_name() {
  // @@protoc_insertion_point(field_release:CMD_ListServersInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_ListServersInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_ListServersInfo.name)
}

// uint64 id = 5;
void CMD_ListServersInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_ListServersInfo::id() const {
  // @@protoc_insertion_point(field_get:CMD_ListServersInfo.id)
  return id_;
}
void CMD_ListServersInfo::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_ListServersInfo.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnListServersCB::kErrcodeFieldNumber;
const int CMD_Client_OnListServersCB::kSrvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnListServersCB::CMD_Client_OnListServersCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnListServersCB)
}
CMD_Client_OnListServersCB::CMD_Client_OnListServersCB(const CMD_Client_OnListServersCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      srvs_(from.srvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnListServersCB)
}

void CMD_Client_OnListServersCB::SharedCtor() {
  errcode_ = 0;
  _cached_size_ = 0;
}

CMD_Client_OnListServersCB::~CMD_Client_OnListServersCB() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnListServersCB)
  SharedDtor();
}

void CMD_Client_OnListServersCB::SharedDtor() {
}

void CMD_Client_OnListServersCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnListServersCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[45].descriptor;
}

const CMD_Client_OnListServersCB& CMD_Client_OnListServersCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnListServersCB* CMD_Client_OnListServersCB::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnListServersCB* n = new CMD_Client_OnListServersCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnListServersCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnListServersCB)
  srvs_.Clear();
  errcode_ = 0;
}

bool CMD_Client_OnListServersCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnListServersCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_ListServersInfo srvs = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_srvs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnListServersCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnListServersCB)
  return false;
#undef DO_
}

void CMD_Client_OnListServersCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnListServersCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // repeated .CMD_ListServersInfo srvs = 2;
  for (unsigned int i = 0, n = this->srvs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->srvs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnListServersCB)
}

::google::protobuf::uint8* CMD_Client_OnListServersCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnListServersCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // repeated .CMD_ListServersInfo srvs = 2;
  for (unsigned int i = 0, n = this->srvs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->srvs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnListServersCB)
  return target;
}

size_t CMD_Client_OnListServersCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnListServersCB)
  size_t total_size = 0;

  // repeated .CMD_ListServersInfo srvs = 2;
  {
    unsigned int count = this->srvs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->srvs(i));
    }
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnListServersCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnListServersCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnListServersCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnListServersCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnListServersCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnListServersCB)
    MergeFrom(*source);
  }
}

void CMD_Client_OnListServersCB::MergeFrom(const CMD_Client_OnListServersCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnListServersCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srvs_.MergeFrom(from.srvs_);
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Client_OnListServersCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnListServersCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnListServersCB::CopyFrom(const CMD_Client_OnListServersCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnListServersCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnListServersCB::IsInitialized() const {
  return true;
}

void CMD_Client_OnListServersCB::Swap(CMD_Client_OnListServersCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnListServersCB::InternalSwap(CMD_Client_OnListServersCB* other) {
  srvs_.UnsafeArenaSwap(&other->srvs_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnListServersCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[45];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnListServersCB

// .ServerError errcode = 1;
void CMD_Client_OnListServersCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnListServersCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListServersCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnListServersCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListServersCB.errcode)
}

// repeated .CMD_ListServersInfo srvs = 2;
int CMD_Client_OnListServersCB::srvs_size() const {
  return srvs_.size();
}
void CMD_Client_OnListServersCB::clear_srvs() {
  srvs_.Clear();
}
const ::CMD_ListServersInfo& CMD_Client_OnListServersCB::srvs(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListServersCB.srvs)
  return srvs_.Get(index);
}
::CMD_ListServersInfo* CMD_Client_OnListServersCB::mutable_srvs(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnListServersCB.srvs)
  return srvs_.Mutable(index);
}
::CMD_ListServersInfo* CMD_Client_OnListServersCB::add_srvs() {
  // @@protoc_insertion_point(field_add:CMD_Client_OnListServersCB.srvs)
  return srvs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >*
CMD_Client_OnListServersCB::mutable_srvs() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Client_OnListServersCB.srvs)
  return &srvs_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_ListServersInfo >&
CMD_Client_OnListServersCB::srvs() const {
  // @@protoc_insertion_point(field_list:CMD_Client_OnListServersCB.srvs)
  return srvs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnSignupCB::kErrcodeFieldNumber;
const int CMD_Client_OnSignupCB::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnSignupCB::CMD_Client_OnSignupCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnSignupCB)
}
CMD_Client_OnSignupCB::CMD_Client_OnSignupCB(const CMD_Client_OnSignupCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnSignupCB)
}

void CMD_Client_OnSignupCB::SharedCtor() {
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
  _cached_size_ = 0;
}

CMD_Client_OnSignupCB::~CMD_Client_OnSignupCB() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnSignupCB)
  SharedDtor();
}

void CMD_Client_OnSignupCB::SharedDtor() {
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Client_OnSignupCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnSignupCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[46].descriptor;
}

const CMD_Client_OnSignupCB& CMD_Client_OnSignupCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnSignupCB* CMD_Client_OnSignupCB::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnSignupCB* n = new CMD_Client_OnSignupCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnSignupCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnSignupCB)
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

bool CMD_Client_OnSignupCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnSignupCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnSignupCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnSignupCB)
  return false;
#undef DO_
}

void CMD_Client_OnSignupCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnSignupCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->datas(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnSignupCB)
}

::google::protobuf::uint8* CMD_Client_OnSignupCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnSignupCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->datas(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnSignupCB)
  return target;
}

size_t CMD_Client_OnSignupCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnSignupCB)
  size_t total_size = 0;

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnSignupCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnSignupCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnSignupCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnSignupCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnSignupCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnSignupCB)
    MergeFrom(*source);
  }
}

void CMD_Client_OnSignupCB::MergeFrom(const CMD_Client_OnSignupCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnSignupCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Client_OnSignupCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnSignupCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnSignupCB::CopyFrom(const CMD_Client_OnSignupCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnSignupCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnSignupCB::IsInitialized() const {
  return true;
}

void CMD_Client_OnSignupCB::Swap(CMD_Client_OnSignupCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnSignupCB::InternalSwap(CMD_Client_OnSignupCB* other) {
  datas_.Swap(&other->datas_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnSignupCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[46];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnSignupCB

// .ServerError errcode = 1;
void CMD_Client_OnSignupCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnSignupCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSignupCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnSignupCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSignupCB.errcode)
}

// bytes datas = 2;
void CMD_Client_OnSignupCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnSignupCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSignupCB.datas)
  return datas_.GetNoArena();
}
void CMD_Client_OnSignupCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSignupCB.datas)
}
#if LANG_CXX11
void CMD_Client_OnSignupCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSignupCB.datas)
}
#endif
void CMD_Client_OnSignupCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSignupCB.datas)
}
void CMD_Client_OnSignupCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSignupCB.datas)
}
::std::string* CMD_Client_OnSignupCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSignupCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnSignupCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSignupCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnSignupCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSignupCB.datas)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnSigninCB::kErrcodeFieldNumber;
const int CMD_Client_OnSigninCB::kDatasFieldNumber;
const int CMD_Client_OnSigninCB::kAddrFieldNumber;
const int CMD_Client_OnSigninCB::kPortFieldNumber;
const int CMD_Client_OnSigninCB::kTokenIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnSigninCB::CMD_Client_OnSigninCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnSigninCB)
}
CMD_Client_OnSigninCB::CMD_Client_OnSigninCB(const CMD_Client_OnSigninCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  ::memcpy(&errcode_, &from.errcode_,
    reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(tokenid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnSigninCB)
}

void CMD_Client_OnSigninCB::SharedCtor() {
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(tokenid_));
  _cached_size_ = 0;
}

CMD_Client_OnSigninCB::~CMD_Client_OnSigninCB() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnSigninCB)
  SharedDtor();
}

void CMD_Client_OnSigninCB::SharedDtor() {
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Client_OnSigninCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnSigninCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[47].descriptor;
}

const CMD_Client_OnSigninCB& CMD_Client_OnSigninCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnSigninCB* CMD_Client_OnSigninCB::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnSigninCB* n = new CMD_Client_OnSigninCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnSigninCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnSigninCB)
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, reinterpret_cast<char*>(&tokenid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(tokenid_));
}

bool CMD_Client_OnSigninCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnSigninCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Client_OnSigninCB.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 tokenID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnSigninCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnSigninCB)
  return false;
#undef DO_
}

void CMD_Client_OnSigninCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnSigninCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->datas(), output);
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnSigninCB.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->addr(), output);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->port(), output);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->tokenid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnSigninCB)
}

::google::protobuf::uint8* CMD_Client_OnSigninCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnSigninCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->datas(), target);
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnSigninCB.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->addr(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->port(), target);
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->tokenid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnSigninCB)
  return target;
}

size_t CMD_Client_OnSigninCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnSigninCB)
  size_t total_size = 0;

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // uint64 tokenID = 5;
  if (this->tokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tokenid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnSigninCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnSigninCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnSigninCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnSigninCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnSigninCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnSigninCB)
    MergeFrom(*source);
  }
}

void CMD_Client_OnSigninCB::MergeFrom(const CMD_Client_OnSigninCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnSigninCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.tokenid() != 0) {
    set_tokenid(from.tokenid());
  }
}

void CMD_Client_OnSigninCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnSigninCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnSigninCB::CopyFrom(const CMD_Client_OnSigninCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnSigninCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnSigninCB::IsInitialized() const {
  return true;
}

void CMD_Client_OnSigninCB::Swap(CMD_Client_OnSigninCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnSigninCB::InternalSwap(CMD_Client_OnSigninCB* other) {
  datas_.Swap(&other->datas_);
  addr_.Swap(&other->addr_);
  std::swap(errcode_, other->errcode_);
  std::swap(port_, other->port_);
  std::swap(tokenid_, other->tokenid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnSigninCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[47];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnSigninCB

// .ServerError errcode = 1;
void CMD_Client_OnSigninCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnSigninCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnSigninCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.errcode)
}

// bytes datas = 2;
void CMD_Client_OnSigninCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnSigninCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.datas)
  return datas_.GetNoArena();
}
void CMD_Client_OnSigninCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.datas)
}
#if LANG_CXX11
void CMD_Client_OnSigninCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSigninCB.datas)
}
#endif
void CMD_Client_OnSigninCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSigninCB.datas)
}
void CMD_Client_OnSigninCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSigninCB.datas)
}
::std::string* CMD_Client_OnSigninCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSigninCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnSigninCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSigninCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnSigninCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSigninCB.datas)
}

// string addr = 3;
void CMD_Client_OnSigninCB::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnSigninCB::addr() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.addr)
  return addr_.GetNoArena();
}
void CMD_Client_OnSigninCB::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.addr)
}
#if LANG_CXX11
void CMD_Client_OnSigninCB::set_addr(::std::string&& value) {
  
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnSigninCB.addr)
}
#endif
void CMD_Client_OnSigninCB::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnSigninCB.addr)
}
void CMD_Client_OnSigninCB::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnSigninCB.addr)
}
::std::string* CMD_Client_OnSigninCB::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnSigninCB.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnSigninCB::release_addr() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnSigninCB.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnSigninCB::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnSigninCB.addr)
}

// int32 port = 4;
void CMD_Client_OnSigninCB::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CMD_Client_OnSigninCB::port() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.port)
  return port_;
}
void CMD_Client_OnSigninCB::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.port)
}

// uint64 tokenID = 5;
void CMD_Client_OnSigninCB::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnSigninCB::tokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnSigninCB.tokenID)
  return tokenid_;
}
void CMD_Client_OnSigninCB::set_tokenid(::google::protobuf::uint64 value) {
  
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnSigninCB.tokenID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_PlayerContext::kPlayerIDFieldNumber;
const int CMD_PlayerContext::kPlayerNameFieldNumber;
const int CMD_PlayerContext::kPlayerModelIDFieldNumber;
const int CMD_PlayerContext::kExpFieldNumber;
const int CMD_PlayerContext::kRoomIDFieldNumber;
const int CMD_PlayerContext::kGameIDFieldNumber;
const int CMD_PlayerContext::kGameModeFieldNumber;
const int CMD_PlayerContext::kGameServerIPFieldNumber;
const int CMD_PlayerContext::kGameServerPortFieldNumber;
const int CMD_PlayerContext::kGameServerTokenIDFieldNumber;
const int CMD_PlayerContext::kGameMaxPlayerNumFieldNumber;
const int CMD_PlayerContext::kGameTimeFieldNumber;
const int CMD_PlayerContext::kPlayerGameTopScoreFieldNumber;
const int CMD_PlayerContext::kGamePlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_PlayerContext::CMD_PlayerContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_PlayerContext)
}
CMD_PlayerContext::CMD_PlayerContext(const CMD_PlayerContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gameplayers_(from.gameplayers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  gameserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gameserverip().size() > 0) {
    gameserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameserverip_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&playergametopscore_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playergametopscore_));
  // @@protoc_insertion_point(copy_constructor:CMD_PlayerContext)
}

void CMD_PlayerContext::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&playergametopscore_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playergametopscore_));
  _cached_size_ = 0;
}

CMD_PlayerContext::~CMD_PlayerContext() {
  // @@protoc_insertion_point(destructor:CMD_PlayerContext)
  SharedDtor();
}

void CMD_PlayerContext::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_PlayerContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_PlayerContext::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[48].descriptor;
}

const CMD_PlayerContext& CMD_PlayerContext::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_PlayerContext* CMD_PlayerContext::New(::google::protobuf::Arena* arena) const {
  CMD_PlayerContext* n = new CMD_PlayerContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_PlayerContext::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_PlayerContext)
  gameplayers_.Clear();
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&playergametopscore_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(playergametopscore_));
}

bool CMD_PlayerContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_PlayerContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string playerName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_PlayerContext.playerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playerModelID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playermodelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gameServerIP = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gameserverip().data(), this->gameserverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_PlayerContext.gameServerIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameServerPort = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameserverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameServerTokenID = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameservertokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMaxPlayerNum = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemaxplayernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gameTime = 12;
      case 12: {
        if (tag == 101u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 playerGameTopScore = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playergametopscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_RoomPlayerInfo gamePlayers = 14;
      case 14: {
        if (tag == 114u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_gameplayers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_PlayerContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_PlayerContext)
  return false;
#undef DO_
}

void CMD_PlayerContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_PlayerContext)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_PlayerContext.playerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playername(), output);
  }

  // int32 playerModelID = 3;
  if (this->playermodelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playermodelid(), output);
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  // uint64 roomID = 5;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->roomid(), output);
  }

  // uint64 gameID = 6;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gameid(), output);
  }

  // int32 gameMode = 7;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gamemode(), output);
  }

  // string gameServerIP = 8;
  if (this->gameserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gameserverip().data(), this->gameserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_PlayerContext.gameServerIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->gameserverip(), output);
  }

  // int32 gameServerPort = 9;
  if (this->gameserverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->gameserverport(), output);
  }

  // uint64 gameServerTokenID = 10;
  if (this->gameservertokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->gameservertokenid(), output);
  }

  // int32 gameMaxPlayerNum = 11;
  if (this->gamemaxplayernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->gamemaxplayernum(), output);
  }

  // float gameTime = 12;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->gametime(), output);
  }

  // int32 playerGameTopScore = 13;
  if (this->playergametopscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->playergametopscore(), output);
  }

  // repeated .CMD_RoomPlayerInfo gamePlayers = 14;
  for (unsigned int i = 0, n = this->gameplayers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->gameplayers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_PlayerContext)
}

::google::protobuf::uint8* CMD_PlayerContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_PlayerContext)
  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_PlayerContext.playerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playername(), target);
  }

  // int32 playerModelID = 3;
  if (this->playermodelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playermodelid(), target);
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  // uint64 roomID = 5;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->roomid(), target);
  }

  // uint64 gameID = 6;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gameid(), target);
  }

  // int32 gameMode = 7;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gamemode(), target);
  }

  // string gameServerIP = 8;
  if (this->gameserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gameserverip().data(), this->gameserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_PlayerContext.gameServerIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->gameserverip(), target);
  }

  // int32 gameServerPort = 9;
  if (this->gameserverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->gameserverport(), target);
  }

  // uint64 gameServerTokenID = 10;
  if (this->gameservertokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->gameservertokenid(), target);
  }

  // int32 gameMaxPlayerNum = 11;
  if (this->gamemaxplayernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->gamemaxplayernum(), target);
  }

  // float gameTime = 12;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->gametime(), target);
  }

  // int32 playerGameTopScore = 13;
  if (this->playergametopscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->playergametopscore(), target);
  }

  // repeated .CMD_RoomPlayerInfo gamePlayers = 14;
  for (unsigned int i = 0, n = this->gameplayers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->gameplayers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_PlayerContext)
  return target;
}

size_t CMD_PlayerContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_PlayerContext)
  size_t total_size = 0;

  // repeated .CMD_RoomPlayerInfo gamePlayers = 14;
  {
    unsigned int count = this->gameplayers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gameplayers(i));
    }
  }

  // string playerName = 2;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // string gameServerIP = 8;
  if (this->gameserverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gameserverip());
  }

  // uint64 playerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // int32 playerModelID = 3;
  if (this->playermodelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playermodelid());
  }

  // int32 exp = 4;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // uint64 roomID = 5;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 gameID = 6;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // int32 gameMode = 7;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  // int32 gameServerPort = 9;
  if (this->gameserverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gameserverport());
  }

  // uint64 gameServerTokenID = 10;
  if (this->gameservertokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameservertokenid());
  }

  // int32 gameMaxPlayerNum = 11;
  if (this->gamemaxplayernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemaxplayernum());
  }

  // float gameTime = 12;
  if (this->gametime() != 0) {
    total_size += 1 + 4;
  }

  // int32 playerGameTopScore = 13;
  if (this->playergametopscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playergametopscore());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_PlayerContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_PlayerContext)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_PlayerContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_PlayerContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_PlayerContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_PlayerContext)
    MergeFrom(*source);
  }
}

void CMD_PlayerContext::MergeFrom(const CMD_PlayerContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_PlayerContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameplayers_.MergeFrom(from.gameplayers_);
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.gameserverip().size() > 0) {

    gameserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameserverip_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.playermodelid() != 0) {
    set_playermodelid(from.playermodelid());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.gameserverport() != 0) {
    set_gameserverport(from.gameserverport());
  }
  if (from.gameservertokenid() != 0) {
    set_gameservertokenid(from.gameservertokenid());
  }
  if (from.gamemaxplayernum() != 0) {
    set_gamemaxplayernum(from.gamemaxplayernum());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
  if (from.playergametopscore() != 0) {
    set_playergametopscore(from.playergametopscore());
  }
}

void CMD_PlayerContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_PlayerContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_PlayerContext::CopyFrom(const CMD_PlayerContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_PlayerContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_PlayerContext::IsInitialized() const {
  return true;
}

void CMD_PlayerContext::Swap(CMD_PlayerContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_PlayerContext::InternalSwap(CMD_PlayerContext* other) {
  gameplayers_.UnsafeArenaSwap(&other->gameplayers_);
  playername_.Swap(&other->playername_);
  gameserverip_.Swap(&other->gameserverip_);
  std::swap(playerid_, other->playerid_);
  std::swap(playermodelid_, other->playermodelid_);
  std::swap(exp_, other->exp_);
  std::swap(roomid_, other->roomid_);
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(gameserverport_, other->gameserverport_);
  std::swap(gameservertokenid_, other->gameservertokenid_);
  std::swap(gamemaxplayernum_, other->gamemaxplayernum_);
  std::swap(gametime_, other->gametime_);
  std::swap(playergametopscore_, other->playergametopscore_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_PlayerContext::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[48];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_PlayerContext

// uint64 playerID = 1;
void CMD_PlayerContext::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_PlayerContext::playerid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerID)
  return playerid_;
}
void CMD_PlayerContext::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerID)
}

// string playerName = 2;
void CMD_PlayerContext::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_PlayerContext::playername() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerName)
  return playername_.GetNoArena();
}
void CMD_PlayerContext::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerName)
}
#if LANG_CXX11
void CMD_PlayerContext::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_PlayerContext.playerName)
}
#endif
void CMD_PlayerContext::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_PlayerContext.playerName)
}
void CMD_PlayerContext::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_PlayerContext.playerName)
}
::std::string* CMD_PlayerContext::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_PlayerContext::release_playername() {
  // @@protoc_insertion_point(field_release:CMD_PlayerContext.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_PlayerContext::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CMD_PlayerContext.playerName)
}

// int32 playerModelID = 3;
void CMD_PlayerContext::clear_playermodelid() {
  playermodelid_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::playermodelid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerModelID)
  return playermodelid_;
}
void CMD_PlayerContext::set_playermodelid(::google::protobuf::int32 value) {
  
  playermodelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerModelID)
}

// int32 exp = 4;
void CMD_PlayerContext::clear_exp() {
  exp_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::exp() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.exp)
  return exp_;
}
void CMD_PlayerContext::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.exp)
}

// uint64 roomID = 5;
void CMD_PlayerContext::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_PlayerContext::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.roomID)
  return roomid_;
}
void CMD_PlayerContext::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.roomID)
}

// uint64 gameID = 6;
void CMD_PlayerContext::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_PlayerContext::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameID)
  return gameid_;
}
void CMD_PlayerContext::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameID)
}

// int32 gameMode = 7;
void CMD_PlayerContext::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameMode)
  return gamemode_;
}
void CMD_PlayerContext::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameMode)
}

// string gameServerIP = 8;
void CMD_PlayerContext::clear_gameserverip() {
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_PlayerContext::gameserverip() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerIP)
  return gameserverip_.GetNoArena();
}
void CMD_PlayerContext::set_gameserverip(const ::std::string& value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerIP)
}
#if LANG_CXX11
void CMD_PlayerContext::set_gameserverip(::std::string&& value) {
  
  gameserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_PlayerContext.gameServerIP)
}
#endif
void CMD_PlayerContext::set_gameserverip(const char* value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_PlayerContext.gameServerIP)
}
void CMD_PlayerContext::set_gameserverip(const char* value, size_t size) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_PlayerContext.gameServerIP)
}
::std::string* CMD_PlayerContext::mutable_gameserverip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.gameServerIP)
  return gameserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_PlayerContext::release_gameserverip() {
  // @@protoc_insertion_point(field_release:CMD_PlayerContext.gameServerIP)
  
  return gameserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_PlayerContext::set_allocated_gameserverip(::std::string* gameserverip) {
  if (gameserverip != NULL) {
    
  } else {
    
  }
  gameserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserverip);
  // @@protoc_insertion_point(field_set_allocated:CMD_PlayerContext.gameServerIP)
}

// int32 gameServerPort = 9;
void CMD_PlayerContext::clear_gameserverport() {
  gameserverport_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::gameserverport() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerPort)
  return gameserverport_;
}
void CMD_PlayerContext::set_gameserverport(::google::protobuf::int32 value) {
  
  gameserverport_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerPort)
}

// uint64 gameServerTokenID = 10;
void CMD_PlayerContext::clear_gameservertokenid() {
  gameservertokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_PlayerContext::gameservertokenid() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameServerTokenID)
  return gameservertokenid_;
}
void CMD_PlayerContext::set_gameservertokenid(::google::protobuf::uint64 value) {
  
  gameservertokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameServerTokenID)
}

// int32 gameMaxPlayerNum = 11;
void CMD_PlayerContext::clear_gamemaxplayernum() {
  gamemaxplayernum_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::gamemaxplayernum() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameMaxPlayerNum)
  return gamemaxplayernum_;
}
void CMD_PlayerContext::set_gamemaxplayernum(::google::protobuf::int32 value) {
  
  gamemaxplayernum_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameMaxPlayerNum)
}

// float gameTime = 12;
void CMD_PlayerContext::clear_gametime() {
  gametime_ = 0;
}
float CMD_PlayerContext::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gameTime)
  return gametime_;
}
void CMD_PlayerContext::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.gameTime)
}

// int32 playerGameTopScore = 13;
void CMD_PlayerContext::clear_playergametopscore() {
  playergametopscore_ = 0;
}
::google::protobuf::int32 CMD_PlayerContext::playergametopscore() const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.playerGameTopScore)
  return playergametopscore_;
}
void CMD_PlayerContext::set_playergametopscore(::google::protobuf::int32 value) {
  
  playergametopscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_PlayerContext.playerGameTopScore)
}

// repeated .CMD_RoomPlayerInfo gamePlayers = 14;
int CMD_PlayerContext::gameplayers_size() const {
  return gameplayers_.size();
}
void CMD_PlayerContext::clear_gameplayers() {
  gameplayers_.Clear();
}
const ::CMD_RoomPlayerInfo& CMD_PlayerContext::gameplayers(int index) const {
  // @@protoc_insertion_point(field_get:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Get(index);
}
::CMD_RoomPlayerInfo* CMD_PlayerContext::mutable_gameplayers(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Mutable(index);
}
::CMD_RoomPlayerInfo* CMD_PlayerContext::add_gameplayers() {
  // @@protoc_insertion_point(field_add:CMD_PlayerContext.gamePlayers)
  return gameplayers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >*
CMD_PlayerContext::mutable_gameplayers() {
  // @@protoc_insertion_point(field_mutable_list:CMD_PlayerContext.gamePlayers)
  return &gameplayers_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_RoomPlayerInfo >&
CMD_PlayerContext::gameplayers() const {
  // @@protoc_insertion_point(field_list:CMD_PlayerContext.gamePlayers)
  return gameplayers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_UpdatePlayerContext::kPlayerContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_UpdatePlayerContext::CMD_Client_UpdatePlayerContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_UpdatePlayerContext)
}
CMD_Client_UpdatePlayerContext::CMD_Client_UpdatePlayerContext(const CMD_Client_UpdatePlayerContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playercontext()) {
    playercontext_ = new ::CMD_PlayerContext(*from.playercontext_);
  } else {
    playercontext_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMD_Client_UpdatePlayerContext)
}

void CMD_Client_UpdatePlayerContext::SharedCtor() {
  playercontext_ = NULL;
  _cached_size_ = 0;
}

CMD_Client_UpdatePlayerContext::~CMD_Client_UpdatePlayerContext() {
  // @@protoc_insertion_point(destructor:CMD_Client_UpdatePlayerContext)
  SharedDtor();
}

void CMD_Client_UpdatePlayerContext::SharedDtor() {
  if (this != internal_default_instance()) {
    delete playercontext_;
  }
}

void CMD_Client_UpdatePlayerContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_UpdatePlayerContext::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[49].descriptor;
}

const CMD_Client_UpdatePlayerContext& CMD_Client_UpdatePlayerContext::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_UpdatePlayerContext* CMD_Client_UpdatePlayerContext::New(::google::protobuf::Arena* arena) const {
  CMD_Client_UpdatePlayerContext* n = new CMD_Client_UpdatePlayerContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_UpdatePlayerContext::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_UpdatePlayerContext)
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) {
    delete playercontext_;
  }
  playercontext_ = NULL;
}

bool CMD_Client_UpdatePlayerContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_UpdatePlayerContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CMD_PlayerContext playerContext = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playercontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_UpdatePlayerContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_UpdatePlayerContext)
  return false;
#undef DO_
}

void CMD_Client_UpdatePlayerContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_UpdatePlayerContext)
  // .CMD_PlayerContext playerContext = 1;
  if (this->has_playercontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->playercontext_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_UpdatePlayerContext)
}

::google::protobuf::uint8* CMD_Client_UpdatePlayerContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_UpdatePlayerContext)
  // .CMD_PlayerContext playerContext = 1;
  if (this->has_playercontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->playercontext_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_UpdatePlayerContext)
  return target;
}

size_t CMD_Client_UpdatePlayerContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_UpdatePlayerContext)
  size_t total_size = 0;

  // .CMD_PlayerContext playerContext = 1;
  if (this->has_playercontext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playercontext_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_UpdatePlayerContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_UpdatePlayerContext)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_UpdatePlayerContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_UpdatePlayerContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_UpdatePlayerContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_UpdatePlayerContext)
    MergeFrom(*source);
  }
}

void CMD_Client_UpdatePlayerContext::MergeFrom(const CMD_Client_UpdatePlayerContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_UpdatePlayerContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playercontext()) {
    mutable_playercontext()->::CMD_PlayerContext::MergeFrom(from.playercontext());
  }
}

void CMD_Client_UpdatePlayerContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_UpdatePlayerContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_UpdatePlayerContext::CopyFrom(const CMD_Client_UpdatePlayerContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_UpdatePlayerContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_UpdatePlayerContext::IsInitialized() const {
  return true;
}

void CMD_Client_UpdatePlayerContext::Swap(CMD_Client_UpdatePlayerContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_UpdatePlayerContext::InternalSwap(CMD_Client_UpdatePlayerContext* other) {
  std::swap(playercontext_, other->playercontext_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_UpdatePlayerContext::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[49];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_UpdatePlayerContext

// .CMD_PlayerContext playerContext = 1;
bool CMD_Client_UpdatePlayerContext::has_playercontext() const {
  return this != internal_default_instance() && playercontext_ != NULL;
}
void CMD_Client_UpdatePlayerContext::clear_playercontext() {
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) delete playercontext_;
  playercontext_ = NULL;
}
const ::CMD_PlayerContext& CMD_Client_UpdatePlayerContext::playercontext() const {
  // @@protoc_insertion_point(field_get:CMD_Client_UpdatePlayerContext.playerContext)
  return playercontext_ != NULL ? *playercontext_
                         : *::CMD_PlayerContext::internal_default_instance();
}
::CMD_PlayerContext* CMD_Client_UpdatePlayerContext::mutable_playercontext() {
  
  if (playercontext_ == NULL) {
    playercontext_ = new ::CMD_PlayerContext;
  }
  // @@protoc_insertion_point(field_mutable:CMD_Client_UpdatePlayerContext.playerContext)
  return playercontext_;
}
::CMD_PlayerContext* CMD_Client_UpdatePlayerContext::release_playercontext() {
  // @@protoc_insertion_point(field_release:CMD_Client_UpdatePlayerContext.playerContext)
  
  ::CMD_PlayerContext* temp = playercontext_;
  playercontext_ = NULL;
  return temp;
}
void CMD_Client_UpdatePlayerContext::set_allocated_playercontext(::CMD_PlayerContext* playercontext) {
  delete playercontext_;
  playercontext_ = playercontext;
  if (playercontext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_UpdatePlayerContext.playerContext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_GameModeInfos::kGameModeIDFieldNumber;
const int CMD_GameModeInfos::kGameModeNameFieldNumber;
const int CMD_GameModeInfos::kPlayerMaxFieldNumber;
const int CMD_GameModeInfos::kGameTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_GameModeInfos::CMD_GameModeInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_GameModeInfos)
}
CMD_GameModeInfos::CMD_GameModeInfos(const CMD_GameModeInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamemodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gamemodename().size() > 0) {
    gamemodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemodename_);
  }
  ::memcpy(&gamemodeid_, &from.gamemodeid_,
    reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&gamemodeid_) + sizeof(gametime_));
  // @@protoc_insertion_point(copy_constructor:CMD_GameModeInfos)
}

void CMD_GameModeInfos::SharedCtor() {
  gamemodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gamemodeid_, 0, reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&gamemodeid_) + sizeof(gametime_));
  _cached_size_ = 0;
}

CMD_GameModeInfos::~CMD_GameModeInfos() {
  // @@protoc_insertion_point(destructor:CMD_GameModeInfos)
  SharedDtor();
}

void CMD_GameModeInfos::SharedDtor() {
  gamemodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_GameModeInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_GameModeInfos::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[50].descriptor;
}

const CMD_GameModeInfos& CMD_GameModeInfos::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_GameModeInfos* CMD_GameModeInfos::New(::google::protobuf::Arena* arena) const {
  CMD_GameModeInfos* n = new CMD_GameModeInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_GameModeInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_GameModeInfos)
  gamemodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gamemodeid_, 0, reinterpret_cast<char*>(&gametime_) -
    reinterpret_cast<char*>(&gamemodeid_) + sizeof(gametime_));
}

bool CMD_GameModeInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_GameModeInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gameModeID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gameModeName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamemodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gamemodename().data(), this->gamemodename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_GameModeInfos.gameModeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerMax = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playermax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameTime = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_GameModeInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_GameModeInfos)
  return false;
#undef DO_
}

void CMD_GameModeInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_GameModeInfos)
  // uint32 gameModeID = 1;
  if (this->gamemodeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gamemodeid(), output);
  }

  // string gameModeName = 2;
  if (this->gamemodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gamemodename().data(), this->gamemodename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameModeInfos.gameModeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gamemodename(), output);
  }

  // uint32 playerMax = 3;
  if (this->playermax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playermax(), output);
  }

  // uint32 gameTime = 4;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gametime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_GameModeInfos)
}

::google::protobuf::uint8* CMD_GameModeInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_GameModeInfos)
  // uint32 gameModeID = 1;
  if (this->gamemodeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gamemodeid(), target);
  }

  // string gameModeName = 2;
  if (this->gamemodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gamemodename().data(), this->gamemodename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameModeInfos.gameModeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gamemodename(), target);
  }

  // uint32 playerMax = 3;
  if (this->playermax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playermax(), target);
  }

  // uint32 gameTime = 4;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gametime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_GameModeInfos)
  return target;
}

size_t CMD_GameModeInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_GameModeInfos)
  size_t total_size = 0;

  // string gameModeName = 2;
  if (this->gamemodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gamemodename());
  }

  // uint32 gameModeID = 1;
  if (this->gamemodeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemodeid());
  }

  // uint32 playerMax = 3;
  if (this->playermax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playermax());
  }

  // uint32 gameTime = 4;
  if (this->gametime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gametime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_GameModeInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_GameModeInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_GameModeInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_GameModeInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_GameModeInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_GameModeInfos)
    MergeFrom(*source);
  }
}

void CMD_GameModeInfos::MergeFrom(const CMD_GameModeInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_GameModeInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.gamemodename().size() > 0) {

    gamemodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemodename_);
  }
  if (from.gamemodeid() != 0) {
    set_gamemodeid(from.gamemodeid());
  }
  if (from.playermax() != 0) {
    set_playermax(from.playermax());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
}

void CMD_GameModeInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_GameModeInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_GameModeInfos::CopyFrom(const CMD_GameModeInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_GameModeInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_GameModeInfos::IsInitialized() const {
  return true;
}

void CMD_GameModeInfos::Swap(CMD_GameModeInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_GameModeInfos::InternalSwap(CMD_GameModeInfos* other) {
  gamemodename_.Swap(&other->gamemodename_);
  std::swap(gamemodeid_, other->gamemodeid_);
  std::swap(playermax_, other->playermax_);
  std::swap(gametime_, other->gametime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_GameModeInfos::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[50];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_GameModeInfos

// uint32 gameModeID = 1;
void CMD_GameModeInfos::clear_gamemodeid() {
  gamemodeid_ = 0u;
}
::google::protobuf::uint32 CMD_GameModeInfos::gamemodeid() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameModeID)
  return gamemodeid_;
}
void CMD_GameModeInfos::set_gamemodeid(::google::protobuf::uint32 value) {
  
  gamemodeid_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameModeID)
}

// string gameModeName = 2;
void CMD_GameModeInfos::clear_gamemodename() {
  gamemodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_GameModeInfos::gamemodename() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameModeName)
  return gamemodename_.GetNoArena();
}
void CMD_GameModeInfos::set_gamemodename(const ::std::string& value) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameModeName)
}
#if LANG_CXX11
void CMD_GameModeInfos::set_gamemodename(::std::string&& value) {
  
  gamemodename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameModeInfos.gameModeName)
}
#endif
void CMD_GameModeInfos::set_gamemodename(const char* value) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameModeInfos.gameModeName)
}
void CMD_GameModeInfos::set_gamemodename(const char* value, size_t size) {
  
  gamemodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameModeInfos.gameModeName)
}
::std::string* CMD_GameModeInfos::mutable_gamemodename() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameModeInfos.gameModeName)
  return gamemodename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_GameModeInfos::release_gamemodename() {
  // @@protoc_insertion_point(field_release:CMD_GameModeInfos.gameModeName)
  
  return gamemodename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_GameModeInfos::set_allocated_gamemodename(::std::string* gamemodename) {
  if (gamemodename != NULL) {
    
  } else {
    
  }
  gamemodename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamemodename);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameModeInfos.gameModeName)
}

// uint32 playerMax = 3;
void CMD_GameModeInfos::clear_playermax() {
  playermax_ = 0u;
}
::google::protobuf::uint32 CMD_GameModeInfos::playermax() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.playerMax)
  return playermax_;
}
void CMD_GameModeInfos::set_playermax(::google::protobuf::uint32 value) {
  
  playermax_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.playerMax)
}

// uint32 gameTime = 4;
void CMD_GameModeInfos::clear_gametime() {
  gametime_ = 0u;
}
::google::protobuf::uint32 CMD_GameModeInfos::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_GameModeInfos.gameTime)
  return gametime_;
}
void CMD_GameModeInfos::set_gametime(::google::protobuf::uint32 value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameModeInfos.gameTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_GameInfos::kGameIDFieldNumber;
const int CMD_GameInfos::kGameModeFieldNumber;
const int CMD_GameInfos::kTypeFieldNumber;
const int CMD_GameInfos::kGameNameFieldNumber;
const int CMD_GameInfos::kUrlIconFieldNumber;
const int CMD_GameInfos::kUrlApkFieldNumber;
const int CMD_GameInfos::kGameModesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_GameInfos::CMD_GameInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_GameInfos)
}
CMD_GameInfos::CMD_GameInfos(const CMD_GameInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gamemodes_(from.gamemodes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gamename().size() > 0) {
    gamename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamename_);
  }
  url_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url_icon().size() > 0) {
    url_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_icon_);
  }
  url_apk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url_apk().size() > 0) {
    url_apk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_apk_);
  }
  ::memcpy(&gameid_, &from.gameid_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CMD_GameInfos)
}

void CMD_GameInfos::SharedCtor() {
  gamename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_apk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(type_));
  _cached_size_ = 0;
}

CMD_GameInfos::~CMD_GameInfos() {
  // @@protoc_insertion_point(destructor:CMD_GameInfos)
  SharedDtor();
}

void CMD_GameInfos::SharedDtor() {
  gamename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_apk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_GameInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_GameInfos::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[51].descriptor;
}

const CMD_GameInfos& CMD_GameInfos::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_GameInfos* CMD_GameInfos::New(::google::protobuf::Arena* arena) const {
  CMD_GameInfos* n = new CMD_GameInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_GameInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_GameInfos)
  gamemodes_.Clear();
  gamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_apk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(type_));
}

bool CMD_GameInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_GameInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gameMode = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gameName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gamename().data(), this->gamename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_GameInfos.gameName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url_icon = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_icon().data(), this->url_icon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_GameInfos.url_icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url_apk = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url_apk()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url_apk().data(), this->url_apk().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_GameInfos.url_apk"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_GameModeInfos gameModes = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_gamemodes()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_GameInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_GameInfos)
  return false;
#undef DO_
}

void CMD_GameInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_GameInfos)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gamemode(), output);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // string gameName = 4;
  if (this->gamename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gamename().data(), this->gamename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.gameName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->gamename(), output);
  }

  // string url_icon = 5;
  if (this->url_icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_icon().data(), this->url_icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.url_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url_icon(), output);
  }

  // string url_apk = 6;
  if (this->url_apk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_apk().data(), this->url_apk().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.url_apk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->url_apk(), output);
  }

  // repeated .CMD_GameModeInfos gameModes = 7;
  for (unsigned int i = 0, n = this->gamemodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->gamemodes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_GameInfos)
}

::google::protobuf::uint8* CMD_GameInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_GameInfos)
  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gamemode(), target);
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // string gameName = 4;
  if (this->gamename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gamename().data(), this->gamename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.gameName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->gamename(), target);
  }

  // string url_icon = 5;
  if (this->url_icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_icon().data(), this->url_icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.url_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url_icon(), target);
  }

  // string url_apk = 6;
  if (this->url_apk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url_apk().data(), this->url_apk().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_GameInfos.url_apk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url_apk(), target);
  }

  // repeated .CMD_GameModeInfos gameModes = 7;
  for (unsigned int i = 0, n = this->gamemodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->gamemodes(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_GameInfos)
  return target;
}

size_t CMD_GameInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_GameInfos)
  size_t total_size = 0;

  // repeated .CMD_GameModeInfos gameModes = 7;
  {
    unsigned int count = this->gamemodes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gamemodes(i));
    }
  }

  // string gameName = 4;
  if (this->gamename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gamename());
  }

  // string url_icon = 5;
  if (this->url_icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_icon());
  }

  // string url_apk = 6;
  if (this->url_apk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url_apk());
  }

  // uint64 gameID = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 gameMode = 2;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gamemode());
  }

  // uint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_GameInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_GameInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_GameInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_GameInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_GameInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_GameInfos)
    MergeFrom(*source);
  }
}

void CMD_GameInfos::MergeFrom(const CMD_GameInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_GameInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamemodes_.MergeFrom(from.gamemodes_);
  if (from.gamename().size() > 0) {

    gamename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamename_);
  }
  if (from.url_icon().size() > 0) {

    url_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_icon_);
  }
  if (from.url_apk().size() > 0) {

    url_apk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_apk_);
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMD_GameInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_GameInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_GameInfos::CopyFrom(const CMD_GameInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_GameInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_GameInfos::IsInitialized() const {
  return true;
}

void CMD_GameInfos::Swap(CMD_GameInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_GameInfos::InternalSwap(CMD_GameInfos* other) {
  gamemodes_.UnsafeArenaSwap(&other->gamemodes_);
  gamename_.Swap(&other->gamename_);
  url_icon_.Swap(&other->url_icon_);
  url_apk_.Swap(&other->url_apk_);
  std::swap(gameid_, other->gameid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_GameInfos::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[51];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_GameInfos

// uint64 gameID = 1;
void CMD_GameInfos::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_GameInfos::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameID)
  return gameid_;
}
void CMD_GameInfos::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameID)
}

// uint32 gameMode = 2;
void CMD_GameInfos::clear_gamemode() {
  gamemode_ = 0u;
}
::google::protobuf::uint32 CMD_GameInfos::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameMode)
  return gamemode_;
}
void CMD_GameInfos::set_gamemode(::google::protobuf::uint32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameMode)
}

// uint32 type = 3;
void CMD_GameInfos::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 CMD_GameInfos::type() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.type)
  return type_;
}
void CMD_GameInfos::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_GameInfos.type)
}

// string gameName = 4;
void CMD_GameInfos::clear_gamename() {
  gamename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_GameInfos::gamename() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameName)
  return gamename_.GetNoArena();
}
void CMD_GameInfos::set_gamename(const ::std::string& value) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.gameName)
}
#if LANG_CXX11
void CMD_GameInfos::set_gamename(::std::string&& value) {
  
  gamename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.gameName)
}
#endif
void CMD_GameInfos::set_gamename(const char* value) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.gameName)
}
void CMD_GameInfos::set_gamename(const char* value, size_t size) {
  
  gamename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.gameName)
}
::std::string* CMD_GameInfos::mutable_gamename() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.gameName)
  return gamename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_GameInfos::release_gamename() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.gameName)
  
  return gamename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_GameInfos::set_allocated_gamename(::std::string* gamename) {
  if (gamename != NULL) {
    
  } else {
    
  }
  gamename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamename);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.gameName)
}

// string url_icon = 5;
void CMD_GameInfos::clear_url_icon() {
  url_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_GameInfos::url_icon() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.url_icon)
  return url_icon_.GetNoArena();
}
void CMD_GameInfos::set_url_icon(const ::std::string& value) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.url_icon)
}
#if LANG_CXX11
void CMD_GameInfos::set_url_icon(::std::string&& value) {
  
  url_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.url_icon)
}
#endif
void CMD_GameInfos::set_url_icon(const char* value) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.url_icon)
}
void CMD_GameInfos::set_url_icon(const char* value, size_t size) {
  
  url_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.url_icon)
}
::std::string* CMD_GameInfos::mutable_url_icon() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.url_icon)
  return url_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_GameInfos::release_url_icon() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.url_icon)
  
  return url_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_GameInfos::set_allocated_url_icon(::std::string* url_icon) {
  if (url_icon != NULL) {
    
  } else {
    
  }
  url_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_icon);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.url_icon)
}

// string url_apk = 6;
void CMD_GameInfos::clear_url_apk() {
  url_apk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_GameInfos::url_apk() const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.url_apk)
  return url_apk_.GetNoArena();
}
void CMD_GameInfos::set_url_apk(const ::std::string& value) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_GameInfos.url_apk)
}
#if LANG_CXX11
void CMD_GameInfos::set_url_apk(::std::string&& value) {
  
  url_apk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_GameInfos.url_apk)
}
#endif
void CMD_GameInfos::set_url_apk(const char* value) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_GameInfos.url_apk)
}
void CMD_GameInfos::set_url_apk(const char* value, size_t size) {
  
  url_apk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_GameInfos.url_apk)
}
::std::string* CMD_GameInfos::mutable_url_apk() {
  
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.url_apk)
  return url_apk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_GameInfos::release_url_apk() {
  // @@protoc_insertion_point(field_release:CMD_GameInfos.url_apk)
  
  return url_apk_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_GameInfos::set_allocated_url_apk(::std::string* url_apk) {
  if (url_apk != NULL) {
    
  } else {
    
  }
  url_apk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_apk);
  // @@protoc_insertion_point(field_set_allocated:CMD_GameInfos.url_apk)
}

// repeated .CMD_GameModeInfos gameModes = 7;
int CMD_GameInfos::gamemodes_size() const {
  return gamemodes_.size();
}
void CMD_GameInfos::clear_gamemodes() {
  gamemodes_.Clear();
}
const ::CMD_GameModeInfos& CMD_GameInfos::gamemodes(int index) const {
  // @@protoc_insertion_point(field_get:CMD_GameInfos.gameModes)
  return gamemodes_.Get(index);
}
::CMD_GameModeInfos* CMD_GameInfos::mutable_gamemodes(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_GameInfos.gameModes)
  return gamemodes_.Mutable(index);
}
::CMD_GameModeInfos* CMD_GameInfos::add_gamemodes() {
  // @@protoc_insertion_point(field_add:CMD_GameInfos.gameModes)
  return gamemodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >*
CMD_GameInfos::mutable_gamemodes() {
  // @@protoc_insertion_point(field_mutable_list:CMD_GameInfos.gameModes)
  return &gamemodes_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_GameModeInfos >&
CMD_GameInfos::gamemodes() const {
  // @@protoc_insertion_point(field_list:CMD_GameInfos.gameModes)
  return gamemodes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnListGamesCB::kPageFieldNumber;
const int CMD_Client_OnListGamesCB::kTypeFieldNumber;
const int CMD_Client_OnListGamesCB::kTotalGamesNumFieldNumber;
const int CMD_Client_OnListGamesCB::kGameInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnListGamesCB::CMD_Client_OnListGamesCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnListGamesCB)
}
CMD_Client_OnListGamesCB::CMD_Client_OnListGamesCB(const CMD_Client_OnListGamesCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gameinfos_(from.gameinfos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_, &from.page_,
    reinterpret_cast<char*>(&totalgamesnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(totalgamesnum_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnListGamesCB)
}

void CMD_Client_OnListGamesCB::SharedCtor() {
  ::memset(&page_, 0, reinterpret_cast<char*>(&totalgamesnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(totalgamesnum_));
  _cached_size_ = 0;
}

CMD_Client_OnListGamesCB::~CMD_Client_OnListGamesCB() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnListGamesCB)
  SharedDtor();
}

void CMD_Client_OnListGamesCB::SharedDtor() {
}

void CMD_Client_OnListGamesCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnListGamesCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[52].descriptor;
}

const CMD_Client_OnListGamesCB& CMD_Client_OnListGamesCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnListGamesCB* CMD_Client_OnListGamesCB::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnListGamesCB* n = new CMD_Client_OnListGamesCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnListGamesCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnListGamesCB)
  gameinfos_.Clear();
  ::memset(&page_, 0, reinterpret_cast<char*>(&totalgamesnum_) -
    reinterpret_cast<char*>(&page_) + sizeof(totalgamesnum_));
}

bool CMD_Client_OnListGamesCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnListGamesCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 totalGamesNum = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalgamesnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMD_GameInfos gameInfos = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_gameinfos()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnListGamesCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnListGamesCB)
  return false;
#undef DO_
}

void CMD_Client_OnListGamesCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnListGamesCB)
  // uint32 page = 1;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->page(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // uint32 totalGamesNum = 3;
  if (this->totalgamesnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalgamesnum(), output);
  }

  // repeated .CMD_GameInfos gameInfos = 4;
  for (unsigned int i = 0, n = this->gameinfos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gameinfos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnListGamesCB)
}

::google::protobuf::uint8* CMD_Client_OnListGamesCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnListGamesCB)
  // uint32 page = 1;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->page(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // uint32 totalGamesNum = 3;
  if (this->totalgamesnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalgamesnum(), target);
  }

  // repeated .CMD_GameInfos gameInfos = 4;
  for (unsigned int i = 0, n = this->gameinfos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->gameinfos(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnListGamesCB)
  return target;
}

size_t CMD_Client_OnListGamesCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnListGamesCB)
  size_t total_size = 0;

  // repeated .CMD_GameInfos gameInfos = 4;
  {
    unsigned int count = this->gameinfos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gameinfos(i));
    }
  }

  // uint32 page = 1;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 totalGamesNum = 3;
  if (this->totalgamesnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalgamesnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnListGamesCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnListGamesCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnListGamesCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnListGamesCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnListGamesCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnListGamesCB)
    MergeFrom(*source);
  }
}

void CMD_Client_OnListGamesCB::MergeFrom(const CMD_Client_OnListGamesCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnListGamesCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameinfos_.MergeFrom(from.gameinfos_);
  if (from.page() != 0) {
    set_page(from.page());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.totalgamesnum() != 0) {
    set_totalgamesnum(from.totalgamesnum());
  }
}

void CMD_Client_OnListGamesCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnListGamesCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnListGamesCB::CopyFrom(const CMD_Client_OnListGamesCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnListGamesCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnListGamesCB::IsInitialized() const {
  return true;
}

void CMD_Client_OnListGamesCB::Swap(CMD_Client_OnListGamesCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnListGamesCB::InternalSwap(CMD_Client_OnListGamesCB* other) {
  gameinfos_.UnsafeArenaSwap(&other->gameinfos_);
  std::swap(page_, other->page_);
  std::swap(type_, other->type_);
  std::swap(totalgamesnum_, other->totalgamesnum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnListGamesCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[52];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnListGamesCB

// uint32 page = 1;
void CMD_Client_OnListGamesCB::clear_page() {
  page_ = 0u;
}
::google::protobuf::uint32 CMD_Client_OnListGamesCB::page() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.page)
  return page_;
}
void CMD_Client_OnListGamesCB::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.page)
}

// uint32 type = 2;
void CMD_Client_OnListGamesCB::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 CMD_Client_OnListGamesCB::type() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.type)
  return type_;
}
void CMD_Client_OnListGamesCB::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.type)
}

// uint32 totalGamesNum = 3;
void CMD_Client_OnListGamesCB::clear_totalgamesnum() {
  totalgamesnum_ = 0u;
}
::google::protobuf::uint32 CMD_Client_OnListGamesCB::totalgamesnum() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.totalGamesNum)
  return totalgamesnum_;
}
void CMD_Client_OnListGamesCB::set_totalgamesnum(::google::protobuf::uint32 value) {
  
  totalgamesnum_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnListGamesCB.totalGamesNum)
}

// repeated .CMD_GameInfos gameInfos = 4;
int CMD_Client_OnListGamesCB::gameinfos_size() const {
  return gameinfos_.size();
}
void CMD_Client_OnListGamesCB::clear_gameinfos() {
  gameinfos_.Clear();
}
const ::CMD_GameInfos& CMD_Client_OnListGamesCB::gameinfos(int index) const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Get(index);
}
::CMD_GameInfos* CMD_Client_OnListGamesCB::mutable_gameinfos(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Mutable(index);
}
::CMD_GameInfos* CMD_Client_OnListGamesCB::add_gameinfos() {
  // @@protoc_insertion_point(field_add:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >*
CMD_Client_OnListGamesCB::mutable_gameinfos() {
  // @@protoc_insertion_point(field_mutable_list:CMD_Client_OnListGamesCB.gameInfos)
  return &gameinfos_;
}
const ::google::protobuf::RepeatedPtrField< ::CMD_GameInfos >&
CMD_Client_OnListGamesCB::gameinfos() const {
  // @@protoc_insertion_point(field_list:CMD_Client_OnListGamesCB.gameInfos)
  return gameinfos_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnLoginCB::kErrcodeFieldNumber;
const int CMD_Client_OnLoginCB::kDatasFieldNumber;
const int CMD_Client_OnLoginCB::kPlayerContextFieldNumber;
const int CMD_Client_OnLoginCB::kHallsIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnLoginCB::CMD_Client_OnLoginCB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnLoginCB)
}
CMD_Client_OnLoginCB::CMD_Client_OnLoginCB(const CMD_Client_OnLoginCB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datas().size() > 0) {
    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.has_playercontext()) {
    playercontext_ = new ::CMD_PlayerContext(*from.playercontext_);
  } else {
    playercontext_ = NULL;
  }
  ::memcpy(&hallsid_, &from.hallsid_,
    reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnLoginCB)
}

void CMD_Client_OnLoginCB::SharedCtor() {
  datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playercontext_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&playercontext_) + sizeof(errcode_));
  _cached_size_ = 0;
}

CMD_Client_OnLoginCB::~CMD_Client_OnLoginCB() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnLoginCB)
  SharedDtor();
}

void CMD_Client_OnLoginCB::SharedDtor() {
  datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete playercontext_;
  }
}

void CMD_Client_OnLoginCB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnLoginCB::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[53].descriptor;
}

const CMD_Client_OnLoginCB& CMD_Client_OnLoginCB::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnLoginCB* CMD_Client_OnLoginCB::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnLoginCB* n = new CMD_Client_OnLoginCB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnLoginCB::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnLoginCB)
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) {
    delete playercontext_;
  }
  playercontext_ = NULL;
  ::memset(&hallsid_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&hallsid_) + sizeof(errcode_));
}

bool CMD_Client_OnLoginCB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnLoginCB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes datas = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CMD_PlayerContext playerContext = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playercontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 hallsID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hallsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnLoginCB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnLoginCB)
  return false;
#undef DO_
}

void CMD_Client_OnLoginCB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnLoginCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->datas(), output);
  }

  // .CMD_PlayerContext playerContext = 3;
  if (this->has_playercontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->playercontext_, output);
  }

  // uint64 hallsID = 4;
  if (this->hallsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->hallsid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnLoginCB)
}

::google::protobuf::uint8* CMD_Client_OnLoginCB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnLoginCB)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->datas(), target);
  }

  // .CMD_PlayerContext playerContext = 3;
  if (this->has_playercontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->playercontext_, false, target);
  }

  // uint64 hallsID = 4;
  if (this->hallsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->hallsid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnLoginCB)
  return target;
}

size_t CMD_Client_OnLoginCB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnLoginCB)
  size_t total_size = 0;

  // bytes datas = 2;
  if (this->datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->datas());
  }

  // .CMD_PlayerContext playerContext = 3;
  if (this->has_playercontext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playercontext_);
  }

  // uint64 hallsID = 4;
  if (this->hallsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hallsid());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnLoginCB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnLoginCB)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnLoginCB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnLoginCB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnLoginCB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnLoginCB)
    MergeFrom(*source);
  }
}

void CMD_Client_OnLoginCB::MergeFrom(const CMD_Client_OnLoginCB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnLoginCB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.datas().size() > 0) {

    datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datas_);
  }
  if (from.has_playercontext()) {
    mutable_playercontext()->::CMD_PlayerContext::MergeFrom(from.playercontext());
  }
  if (from.hallsid() != 0) {
    set_hallsid(from.hallsid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Client_OnLoginCB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnLoginCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnLoginCB::CopyFrom(const CMD_Client_OnLoginCB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnLoginCB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnLoginCB::IsInitialized() const {
  return true;
}

void CMD_Client_OnLoginCB::Swap(CMD_Client_OnLoginCB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnLoginCB::InternalSwap(CMD_Client_OnLoginCB* other) {
  datas_.Swap(&other->datas_);
  std::swap(playercontext_, other->playercontext_);
  std::swap(hallsid_, other->hallsid_);
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnLoginCB::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[53];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnLoginCB

// .ServerError errcode = 1;
void CMD_Client_OnLoginCB::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnLoginCB::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnLoginCB::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.errcode)
}

// bytes datas = 2;
void CMD_Client_OnLoginCB::clear_datas() {
  datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnLoginCB::datas() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.datas)
  return datas_.GetNoArena();
}
void CMD_Client_OnLoginCB::set_datas(const ::std::string& value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.datas)
}
#if LANG_CXX11
void CMD_Client_OnLoginCB::set_datas(::std::string&& value) {
  
  datas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnLoginCB.datas)
}
#endif
void CMD_Client_OnLoginCB::set_datas(const char* value) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnLoginCB.datas)
}
void CMD_Client_OnLoginCB::set_datas(const void* value, size_t size) {
  
  datas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnLoginCB.datas)
}
::std::string* CMD_Client_OnLoginCB::mutable_datas() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnLoginCB.datas)
  return datas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnLoginCB::release_datas() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnLoginCB.datas)
  
  return datas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnLoginCB::set_allocated_datas(::std::string* datas) {
  if (datas != NULL) {
    
  } else {
    
  }
  datas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datas);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnLoginCB.datas)
}

// .CMD_PlayerContext playerContext = 3;
bool CMD_Client_OnLoginCB::has_playercontext() const {
  return this != internal_default_instance() && playercontext_ != NULL;
}
void CMD_Client_OnLoginCB::clear_playercontext() {
  if (GetArenaNoVirtual() == NULL && playercontext_ != NULL) delete playercontext_;
  playercontext_ = NULL;
}
const ::CMD_PlayerContext& CMD_Client_OnLoginCB::playercontext() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.playerContext)
  return playercontext_ != NULL ? *playercontext_
                         : *::CMD_PlayerContext::internal_default_instance();
}
::CMD_PlayerContext* CMD_Client_OnLoginCB::mutable_playercontext() {
  
  if (playercontext_ == NULL) {
    playercontext_ = new ::CMD_PlayerContext;
  }
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnLoginCB.playerContext)
  return playercontext_;
}
::CMD_PlayerContext* CMD_Client_OnLoginCB::release_playercontext() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnLoginCB.playerContext)
  
  ::CMD_PlayerContext* temp = playercontext_;
  playercontext_ = NULL;
  return temp;
}
void CMD_Client_OnLoginCB::set_allocated_playercontext(::CMD_PlayerContext* playercontext) {
  delete playercontext_;
  playercontext_ = playercontext;
  if (playercontext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnLoginCB.playerContext)
}

// uint64 hallsID = 4;
void CMD_Client_OnLoginCB::clear_hallsid() {
  hallsid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnLoginCB::hallsid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnLoginCB.hallsID)
  return hallsid_;
}
void CMD_Client_OnLoginCB::set_hallsid(::google::protobuf::uint64 value) {
  
  hallsid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnLoginCB.hallsID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnMatchingUpdate::kNameFieldNumber;
const int CMD_Client_OnMatchingUpdate::kIdFieldNumber;
const int CMD_Client_OnMatchingUpdate::kModelIDFieldNumber;
const int CMD_Client_OnMatchingUpdate::kEnterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnMatchingUpdate::CMD_Client_OnMatchingUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnMatchingUpdate)
}
CMD_Client_OnMatchingUpdate::CMD_Client_OnMatchingUpdate(const CMD_Client_OnMatchingUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&enter_) -
    reinterpret_cast<char*>(&id_) + sizeof(enter_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnMatchingUpdate)
}

void CMD_Client_OnMatchingUpdate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&enter_) -
    reinterpret_cast<char*>(&id_) + sizeof(enter_));
  _cached_size_ = 0;
}

CMD_Client_OnMatchingUpdate::~CMD_Client_OnMatchingUpdate() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnMatchingUpdate)
  SharedDtor();
}

void CMD_Client_OnMatchingUpdate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Client_OnMatchingUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnMatchingUpdate::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[54].descriptor;
}

const CMD_Client_OnMatchingUpdate& CMD_Client_OnMatchingUpdate::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnMatchingUpdate* CMD_Client_OnMatchingUpdate::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnMatchingUpdate* n = new CMD_Client_OnMatchingUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnMatchingUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnMatchingUpdate)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&enter_) -
    reinterpret_cast<char*>(&id_) + sizeof(enter_));
}

bool CMD_Client_OnMatchingUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnMatchingUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Client_OnMatchingUpdate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 modelID = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enter = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnMatchingUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnMatchingUpdate)
  return false;
#undef DO_
}

void CMD_Client_OnMatchingUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnMatchingUpdate)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnMatchingUpdate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->modelid(), output);
  }

  // bool enter = 4;
  if (this->enter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enter(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnMatchingUpdate)
}

::google::protobuf::uint8* CMD_Client_OnMatchingUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnMatchingUpdate)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnMatchingUpdate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->modelid(), target);
  }

  // bool enter = 4;
  if (this->enter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enter(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnMatchingUpdate)
  return target;
}

size_t CMD_Client_OnMatchingUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnMatchingUpdate)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 modelID = 3;
  if (this->modelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modelid());
  }

  // bool enter = 4;
  if (this->enter() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnMatchingUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnMatchingUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnMatchingUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnMatchingUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnMatchingUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnMatchingUpdate)
    MergeFrom(*source);
  }
}

void CMD_Client_OnMatchingUpdate::MergeFrom(const CMD_Client_OnMatchingUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnMatchingUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.modelid() != 0) {
    set_modelid(from.modelid());
  }
  if (from.enter() != 0) {
    set_enter(from.enter());
  }
}

void CMD_Client_OnMatchingUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnMatchingUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnMatchingUpdate::CopyFrom(const CMD_Client_OnMatchingUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnMatchingUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnMatchingUpdate::IsInitialized() const {
  return true;
}

void CMD_Client_OnMatchingUpdate::Swap(CMD_Client_OnMatchingUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnMatchingUpdate::InternalSwap(CMD_Client_OnMatchingUpdate* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(modelid_, other->modelid_);
  std::swap(enter_, other->enter_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnMatchingUpdate::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[54];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnMatchingUpdate

// string name = 1;
void CMD_Client_OnMatchingUpdate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnMatchingUpdate::name() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.name)
  return name_.GetNoArena();
}
void CMD_Client_OnMatchingUpdate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.name)
}
#if LANG_CXX11
void CMD_Client_OnMatchingUpdate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnMatchingUpdate.name)
}
#endif
void CMD_Client_OnMatchingUpdate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnMatchingUpdate.name)
}
void CMD_Client_OnMatchingUpdate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnMatchingUpdate.name)
}
::std::string* CMD_Client_OnMatchingUpdate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnMatchingUpdate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnMatchingUpdate::release_name() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnMatchingUpdate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnMatchingUpdate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnMatchingUpdate.name)
}

// uint64 id = 2;
void CMD_Client_OnMatchingUpdate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnMatchingUpdate::id() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.id)
  return id_;
}
void CMD_Client_OnMatchingUpdate::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.id)
}

// int32 modelID = 3;
void CMD_Client_OnMatchingUpdate::clear_modelid() {
  modelid_ = 0;
}
::google::protobuf::int32 CMD_Client_OnMatchingUpdate::modelid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.modelID)
  return modelid_;
}
void CMD_Client_OnMatchingUpdate::set_modelid(::google::protobuf::int32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.modelID)
}

// bool enter = 4;
void CMD_Client_OnMatchingUpdate::clear_enter() {
  enter_ = false;
}
bool CMD_Client_OnMatchingUpdate::enter() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnMatchingUpdate.enter)
  return enter_;
}
void CMD_Client_OnMatchingUpdate::set_enter(bool value) {
  
  enter_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnMatchingUpdate.enter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnEndMatch::kErrcodeFieldNumber;
const int CMD_Client_OnEndMatch::kGameServerIPFieldNumber;
const int CMD_Client_OnEndMatch::kGameServerPortFieldNumber;
const int CMD_Client_OnEndMatch::kGameIDFieldNumber;
const int CMD_Client_OnEndMatch::kGameModeFieldNumber;
const int CMD_Client_OnEndMatch::kGameServerTokenIDFieldNumber;
const int CMD_Client_OnEndMatch::kGamePlayerSizeFieldNumber;
const int CMD_Client_OnEndMatch::kTopScoreFieldNumber;
const int CMD_Client_OnEndMatch::kVictoryFieldNumber;
const int CMD_Client_OnEndMatch::kDefeatFieldNumber;
const int CMD_Client_OnEndMatch::kGameTimeFieldNumber;
const int CMD_Client_OnEndMatch::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnEndMatch::CMD_Client_OnEndMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnEndMatch)
}
CMD_Client_OnEndMatch::CMD_Client_OnEndMatch(const CMD_Client_OnEndMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gameserverip().size() > 0) {
    gameserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameserverip_);
  }
  ::memcpy(&errcode_, &from.errcode_,
    reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnEndMatch)
}

void CMD_Client_OnEndMatch::SharedCtor() {
  gameserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(roomid_));
  _cached_size_ = 0;
}

CMD_Client_OnEndMatch::~CMD_Client_OnEndMatch() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnEndMatch)
  SharedDtor();
}

void CMD_Client_OnEndMatch::SharedDtor() {
  gameserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMD_Client_OnEndMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnEndMatch::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[55].descriptor;
}

const CMD_Client_OnEndMatch& CMD_Client_OnEndMatch::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnEndMatch* CMD_Client_OnEndMatch::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnEndMatch* n = new CMD_Client_OnEndMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnEndMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnEndMatch)
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errcode_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&errcode_) + sizeof(roomid_));
}

bool CMD_Client_OnEndMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnEndMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gameServerIP = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gameserverip().data(), this->gameserverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMD_Client_OnEndMatch.gameServerIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameServerPort = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameserverport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameServerTokenID = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameservertokenid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gamePlayerSize = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gameplayersize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 topScore = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &topscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 victory = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 defeat = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defeat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gameTime = 11;
      case 11: {
        if (tag == 93u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnEndMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnEndMatch)
  return false;
#undef DO_
}

void CMD_Client_OnEndMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnEndMatch)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // string gameServerIP = 2;
  if (this->gameserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gameserverip().data(), this->gameserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnEndMatch.gameServerIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameserverip(), output);
  }

  // int32 gameServerPort = 3;
  if (this->gameserverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gameserverport(), output);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gameid(), output);
  }

  // int32 gameMode = 5;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gamemode(), output);
  }

  // uint64 gameServerTokenID = 6;
  if (this->gameservertokenid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gameservertokenid(), output);
  }

  // int32 gamePlayerSize = 7;
  if (this->gameplayersize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gameplayersize(), output);
  }

  // int32 topScore = 8;
  if (this->topscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->topscore(), output);
  }

  // int32 victory = 9;
  if (this->victory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->victory(), output);
  }

  // int32 defeat = 10;
  if (this->defeat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->defeat(), output);
  }

  // float gameTime = 11;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->gametime(), output);
  }

  // uint64 roomID = 12;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnEndMatch)
}

::google::protobuf::uint8* CMD_Client_OnEndMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnEndMatch)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // string gameServerIP = 2;
  if (this->gameserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gameserverip().data(), this->gameserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMD_Client_OnEndMatch.gameServerIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameserverip(), target);
  }

  // int32 gameServerPort = 3;
  if (this->gameserverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gameserverport(), target);
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gameid(), target);
  }

  // int32 gameMode = 5;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gamemode(), target);
  }

  // uint64 gameServerTokenID = 6;
  if (this->gameservertokenid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gameservertokenid(), target);
  }

  // int32 gamePlayerSize = 7;
  if (this->gameplayersize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gameplayersize(), target);
  }

  // int32 topScore = 8;
  if (this->topscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->topscore(), target);
  }

  // int32 victory = 9;
  if (this->victory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->victory(), target);
  }

  // int32 defeat = 10;
  if (this->defeat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->defeat(), target);
  }

  // float gameTime = 11;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->gametime(), target);
  }

  // uint64 roomID = 12;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnEndMatch)
  return target;
}

size_t CMD_Client_OnEndMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnEndMatch)
  size_t total_size = 0;

  // string gameServerIP = 2;
  if (this->gameserverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gameserverip());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // int32 gameServerPort = 3;
  if (this->gameserverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gameserverport());
  }

  // uint64 gameID = 4;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint64 gameServerTokenID = 6;
  if (this->gameservertokenid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameservertokenid());
  }

  // int32 gameMode = 5;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  // int32 gamePlayerSize = 7;
  if (this->gameplayersize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gameplayersize());
  }

  // int32 topScore = 8;
  if (this->topscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->topscore());
  }

  // int32 victory = 9;
  if (this->victory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victory());
  }

  // int32 defeat = 10;
  if (this->defeat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defeat());
  }

  // float gameTime = 11;
  if (this->gametime() != 0) {
    total_size += 1 + 4;
  }

  // uint64 roomID = 12;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnEndMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnEndMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnEndMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnEndMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnEndMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnEndMatch)
    MergeFrom(*source);
  }
}

void CMD_Client_OnEndMatch::MergeFrom(const CMD_Client_OnEndMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnEndMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.gameserverip().size() > 0) {

    gameserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameserverip_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.gameserverport() != 0) {
    set_gameserverport(from.gameserverport());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gameservertokenid() != 0) {
    set_gameservertokenid(from.gameservertokenid());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.gameplayersize() != 0) {
    set_gameplayersize(from.gameplayersize());
  }
  if (from.topscore() != 0) {
    set_topscore(from.topscore());
  }
  if (from.victory() != 0) {
    set_victory(from.victory());
  }
  if (from.defeat() != 0) {
    set_defeat(from.defeat());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void CMD_Client_OnEndMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnEndMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnEndMatch::CopyFrom(const CMD_Client_OnEndMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnEndMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnEndMatch::IsInitialized() const {
  return true;
}

void CMD_Client_OnEndMatch::Swap(CMD_Client_OnEndMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnEndMatch::InternalSwap(CMD_Client_OnEndMatch* other) {
  gameserverip_.Swap(&other->gameserverip_);
  std::swap(errcode_, other->errcode_);
  std::swap(gameserverport_, other->gameserverport_);
  std::swap(gameid_, other->gameid_);
  std::swap(gameservertokenid_, other->gameservertokenid_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(gameplayersize_, other->gameplayersize_);
  std::swap(topscore_, other->topscore_);
  std::swap(victory_, other->victory_);
  std::swap(defeat_, other->defeat_);
  std::swap(gametime_, other->gametime_);
  std::swap(roomid_, other->roomid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnEndMatch::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[55];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnEndMatch

// .ServerError errcode = 1;
void CMD_Client_OnEndMatch::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnEndMatch::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnEndMatch::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.errcode)
}

// string gameServerIP = 2;
void CMD_Client_OnEndMatch::clear_gameserverip() {
  gameserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMD_Client_OnEndMatch::gameserverip() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerIP)
  return gameserverip_.GetNoArena();
}
void CMD_Client_OnEndMatch::set_gameserverip(const ::std::string& value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerIP)
}
#if LANG_CXX11
void CMD_Client_OnEndMatch::set_gameserverip(::std::string&& value) {
  
  gameserverip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMD_Client_OnEndMatch.gameServerIP)
}
#endif
void CMD_Client_OnEndMatch::set_gameserverip(const char* value) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMD_Client_OnEndMatch.gameServerIP)
}
void CMD_Client_OnEndMatch::set_gameserverip(const char* value, size_t size) {
  
  gameserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMD_Client_OnEndMatch.gameServerIP)
}
::std::string* CMD_Client_OnEndMatch::mutable_gameserverip() {
  
  // @@protoc_insertion_point(field_mutable:CMD_Client_OnEndMatch.gameServerIP)
  return gameserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMD_Client_OnEndMatch::release_gameserverip() {
  // @@protoc_insertion_point(field_release:CMD_Client_OnEndMatch.gameServerIP)
  
  return gameserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMD_Client_OnEndMatch::set_allocated_gameserverip(::std::string* gameserverip) {
  if (gameserverip != NULL) {
    
  } else {
    
  }
  gameserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserverip);
  // @@protoc_insertion_point(field_set_allocated:CMD_Client_OnEndMatch.gameServerIP)
}

// int32 gameServerPort = 3;
void CMD_Client_OnEndMatch::clear_gameserverport() {
  gameserverport_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::gameserverport() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerPort)
  return gameserverport_;
}
void CMD_Client_OnEndMatch::set_gameserverport(::google::protobuf::int32 value) {
  
  gameserverport_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerPort)
}

// uint64 gameID = 4;
void CMD_Client_OnEndMatch::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnEndMatch::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameID)
  return gameid_;
}
void CMD_Client_OnEndMatch::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameID)
}

// int32 gameMode = 5;
void CMD_Client_OnEndMatch::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameMode)
  return gamemode_;
}
void CMD_Client_OnEndMatch::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameMode)
}

// uint64 gameServerTokenID = 6;
void CMD_Client_OnEndMatch::clear_gameservertokenid() {
  gameservertokenid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnEndMatch::gameservertokenid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameServerTokenID)
  return gameservertokenid_;
}
void CMD_Client_OnEndMatch::set_gameservertokenid(::google::protobuf::uint64 value) {
  
  gameservertokenid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameServerTokenID)
}

// int32 gamePlayerSize = 7;
void CMD_Client_OnEndMatch::clear_gameplayersize() {
  gameplayersize_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::gameplayersize() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gamePlayerSize)
  return gameplayersize_;
}
void CMD_Client_OnEndMatch::set_gameplayersize(::google::protobuf::int32 value) {
  
  gameplayersize_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gamePlayerSize)
}

// int32 topScore = 8;
void CMD_Client_OnEndMatch::clear_topscore() {
  topscore_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::topscore() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.topScore)
  return topscore_;
}
void CMD_Client_OnEndMatch::set_topscore(::google::protobuf::int32 value) {
  
  topscore_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.topScore)
}

// int32 victory = 9;
void CMD_Client_OnEndMatch::clear_victory() {
  victory_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::victory() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.victory)
  return victory_;
}
void CMD_Client_OnEndMatch::set_victory(::google::protobuf::int32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.victory)
}

// int32 defeat = 10;
void CMD_Client_OnEndMatch::clear_defeat() {
  defeat_ = 0;
}
::google::protobuf::int32 CMD_Client_OnEndMatch::defeat() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.defeat)
  return defeat_;
}
void CMD_Client_OnEndMatch::set_defeat(::google::protobuf::int32 value) {
  
  defeat_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.defeat)
}

// float gameTime = 11;
void CMD_Client_OnEndMatch::clear_gametime() {
  gametime_ = 0;
}
float CMD_Client_OnEndMatch::gametime() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.gameTime)
  return gametime_;
}
void CMD_Client_OnEndMatch::set_gametime(float value) {
  
  gametime_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.gameTime)
}

// uint64 roomID = 12;
void CMD_Client_OnEndMatch::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnEndMatch::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnEndMatch.roomID)
  return roomid_;
}
void CMD_Client_OnEndMatch::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnEndMatch.roomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnGameOver::kErrcodeFieldNumber;
const int CMD_Client_OnGameOver::kGameIDFieldNumber;
const int CMD_Client_OnGameOver::kGameModeFieldNumber;
const int CMD_Client_OnGameOver::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnGameOver::CMD_Client_OnGameOver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnGameOver)
}
CMD_Client_OnGameOver::CMD_Client_OnGameOver(const CMD_Client_OnGameOver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnGameOver)
}

void CMD_Client_OnGameOver::SharedCtor() {
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(roomid_));
  _cached_size_ = 0;
}

CMD_Client_OnGameOver::~CMD_Client_OnGameOver() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnGameOver)
  SharedDtor();
}

void CMD_Client_OnGameOver::SharedDtor() {
}

void CMD_Client_OnGameOver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnGameOver::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[56].descriptor;
}

const CMD_Client_OnGameOver& CMD_Client_OnGameOver::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnGameOver* CMD_Client_OnGameOver::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnGameOver* n = new CMD_Client_OnGameOver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnGameOver::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnGameOver)
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(roomid_));
}

bool CMD_Client_OnGameOver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnGameOver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameID = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gameMode = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gamemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomID = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnGameOver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnGameOver)
  return false;
#undef DO_
}

void CMD_Client_OnGameOver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnGameOver)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gameid(), output);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gamemode(), output);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnGameOver)
}

::google::protobuf::uint8* CMD_Client_OnGameOver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnGameOver)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gameid(), target);
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gamemode(), target);
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnGameOver)
  return target;
}

size_t CMD_Client_OnGameOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnGameOver)
  size_t total_size = 0;

  // uint64 gameID = 2;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // int32 gameMode = 3;
  if (this->gamemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gamemode());
  }

  // uint64 roomID = 4;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnGameOver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnGameOver)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnGameOver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnGameOver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnGameOver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnGameOver)
    MergeFrom(*source);
  }
}

void CMD_Client_OnGameOver::MergeFrom(const CMD_Client_OnGameOver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnGameOver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.gamemode() != 0) {
    set_gamemode(from.gamemode());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void CMD_Client_OnGameOver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnGameOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnGameOver::CopyFrom(const CMD_Client_OnGameOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnGameOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnGameOver::IsInitialized() const {
  return true;
}

void CMD_Client_OnGameOver::Swap(CMD_Client_OnGameOver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnGameOver::InternalSwap(CMD_Client_OnGameOver* other) {
  std::swap(gameid_, other->gameid_);
  std::swap(errcode_, other->errcode_);
  std::swap(gamemode_, other->gamemode_);
  std::swap(roomid_, other->roomid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnGameOver::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[56];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnGameOver

// .ServerError errcode = 1;
void CMD_Client_OnGameOver::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnGameOver::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnGameOver::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.errcode)
}

// uint64 gameID = 2;
void CMD_Client_OnGameOver::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnGameOver::gameid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.gameID)
  return gameid_;
}
void CMD_Client_OnGameOver::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.gameID)
}

// int32 gameMode = 3;
void CMD_Client_OnGameOver::clear_gamemode() {
  gamemode_ = 0;
}
::google::protobuf::int32 CMD_Client_OnGameOver::gamemode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.gameMode)
  return gamemode_;
}
void CMD_Client_OnGameOver::set_gamemode(::google::protobuf::int32 value) {
  
  gamemode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.gameMode)
}

// uint64 roomID = 4;
void CMD_Client_OnGameOver::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CMD_Client_OnGameOver::roomid() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnGameOver.roomID)
  return roomid_;
}
void CMD_Client_OnGameOver::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnGameOver.roomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_Client_OnCancelMatch::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_Client_OnCancelMatch::CMD_Client_OnCancelMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Commands_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMD_Client_OnCancelMatch)
}
CMD_Client_OnCancelMatch::CMD_Client_OnCancelMatch(const CMD_Client_OnCancelMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:CMD_Client_OnCancelMatch)
}

void CMD_Client_OnCancelMatch::SharedCtor() {
  errcode_ = 0;
  _cached_size_ = 0;
}

CMD_Client_OnCancelMatch::~CMD_Client_OnCancelMatch() {
  // @@protoc_insertion_point(destructor:CMD_Client_OnCancelMatch)
  SharedDtor();
}

void CMD_Client_OnCancelMatch::SharedDtor() {
}

void CMD_Client_OnCancelMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_Client_OnCancelMatch::descriptor() {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[57].descriptor;
}

const CMD_Client_OnCancelMatch& CMD_Client_OnCancelMatch::default_instance() {
  protobuf_Commands_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMD_Client_OnCancelMatch* CMD_Client_OnCancelMatch::New(::google::protobuf::Arena* arena) const {
  CMD_Client_OnCancelMatch* n = new CMD_Client_OnCancelMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_Client_OnCancelMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD_Client_OnCancelMatch)
  errcode_ = 0;
}

bool CMD_Client_OnCancelMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMD_Client_OnCancelMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ServerError errcode = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::ServerError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMD_Client_OnCancelMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMD_Client_OnCancelMatch)
  return false;
#undef DO_
}

void CMD_Client_OnCancelMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMD_Client_OnCancelMatch)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMD_Client_OnCancelMatch)
}

::google::protobuf::uint8* CMD_Client_OnCancelMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMD_Client_OnCancelMatch)
  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMD_Client_OnCancelMatch)
  return target;
}

size_t CMD_Client_OnCancelMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD_Client_OnCancelMatch)
  size_t total_size = 0;

  // .ServerError errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_Client_OnCancelMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD_Client_OnCancelMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_Client_OnCancelMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_Client_OnCancelMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD_Client_OnCancelMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD_Client_OnCancelMatch)
    MergeFrom(*source);
  }
}

void CMD_Client_OnCancelMatch::MergeFrom(const CMD_Client_OnCancelMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD_Client_OnCancelMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMD_Client_OnCancelMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD_Client_OnCancelMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_Client_OnCancelMatch::CopyFrom(const CMD_Client_OnCancelMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD_Client_OnCancelMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_Client_OnCancelMatch::IsInitialized() const {
  return true;
}

void CMD_Client_OnCancelMatch::Swap(CMD_Client_OnCancelMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_Client_OnCancelMatch::InternalSwap(CMD_Client_OnCancelMatch* other) {
  std::swap(errcode_, other->errcode_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_Client_OnCancelMatch::GetMetadata() const {
  protobuf_Commands_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Commands_2eproto::file_level_metadata[57];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_Client_OnCancelMatch

// .ServerError errcode = 1;
void CMD_Client_OnCancelMatch::clear_errcode() {
  errcode_ = 0;
}
::ServerError CMD_Client_OnCancelMatch::errcode() const {
  // @@protoc_insertion_point(field_get:CMD_Client_OnCancelMatch.errcode)
  return static_cast< ::ServerError >(errcode_);
}
void CMD_Client_OnCancelMatch::set_errcode(::ServerError value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMD_Client_OnCancelMatch.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
